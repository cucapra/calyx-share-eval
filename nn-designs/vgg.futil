import "primitives/core.futil";import "primitives/binary_operators.futil";import "primitives/math.futil";import "primitives/memories.futil";component conv2d_1x64x224x224_1() -> () {
  cells {
    ref x_16 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    ref x_17 = seq_mem_d4(32,64,64,3,3,7,7,2,2);
    ref x_18 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    __b0 = std_reg(32);
    __c0 = std_reg(32);
    __dx0 = std_reg(32);
    __dy0 = std_reg(32);
    __k0 = std_reg(32);
    __kernel_x_0 = std_reg(32);
    __kernel_y_0 = std_reg(32);
    __padded_tensor_val_0 = std_reg(32);
    __sum_0 = std_reg(32);
    __x0 = std_reg(32);
    __y0 = std_reg(32);
    add0 = std_add(32);
    add1 = std_add(32);
    add2 = std_fp_sadd(32,16,16);
    add3 = std_add(32);
    add4 = std_add(32);
    add5 = std_add(32);
    add6 = std_add(32);
    add7 = std_add(32);
    add8 = std_add(32);
    add9 = std_add(32);
    and0 = std_and(1);
    and1 = std_and(1);
    and2 = std_and(1);
    bin_read3_0 = std_reg(32);
    bin_read4_0 = std_reg(32);
    bin_read5_0 = std_reg(32);
    const0 = std_const(32,0);
    const1 = std_const(32,0);
    const10 = std_const(32,0);
    const11 = std_const(32,2);
    const12 = std_const(32,0);
    const13 = std_const(32,2);
    const14 = std_const(32,1);
    const15 = std_const(32,1);
    const16 = std_const(32,1);
    const17 = std_const(32,225);
    const18 = std_const(32,1);
    const19 = std_const(32,225);
    const2 = std_const(32,0);
    const20 = std_const(32,1);
    const21 = std_const(32,1);
    const22 = std_const(32,1);
    const23 = std_const(32,1);
    const24 = std_const(32,1);
    const25 = std_const(32,1);
    const26 = std_const(32,1);
    const27 = std_const(32,1);
    const28 = std_const(32,1);
    const3 = std_const(32,63);
    const4 = std_const(32,0);
    const5 = std_const(32,223);
    const6 = std_const(32,0);
    const7 = std_const(32,223);
    const8 = std_const(32,0);
    const9 = std_const(32,63);
    fp_const0 = std_const(32,0);
    fp_const1 = std_const(32,0);
    ge0 = std_ge(32);
    ge1 = std_ge(32);
    le0 = std_le(32);
    le1 = std_le(32);
    le2 = std_le(32);
    le3 = std_le(32);
    le4 = std_le(32);
    le5 = std_le(32);
    le6 = std_le(32);
    lt0 = std_lt(32);
    lt1 = std_lt(32);
    mult_pipe0 = std_mult_pipe(32);
    mult_pipe1 = std_mult_pipe(32);
    mult_pipe2 = std_fp_smult_pipe(32,16,16);
    slice0 = std_slice(32,1);
    slice1 = std_slice(32,7);
    slice10 = std_slice(32,8);
    slice11 = std_slice(32,8);
    slice2 = std_slice(32,8);
    slice3 = std_slice(32,8);
    slice4 = std_slice(32,7);
    slice5 = std_slice(32,7);
    slice6 = std_slice(32,2);
    slice7 = std_slice(32,2);
    slice8 = std_slice(32,1);
    slice9 = std_slice(32,7);
    sub0 = std_sub(32);
    sub1 = std_sub(32);
    x_16_read0_0 = std_reg(32);
    x_17_read0_0 = std_reg(32);
  }
  wires {
    comb group cond0 {
      le0.left = __b0.out;
      le0.right = const1.out;
    }
    comb group cond1 {
      le1.left = __c0.out;
      le1.right = const3.out;
    }
    comb group cond2 {
      le2.left = __y0.out;
      le2.right = const5.out;
    }
    comb group cond3 {
      le3.left = __x0.out;
      le3.right = const7.out;
    }
    comb group cond4 {
      le4.left = __k0.out;
      le4.right = const9.out;
    }
    comb group cond5 {
      le5.left = __dy0.out;
      le5.right = const11.out;
    }
    comb group cond6 {
      le6.left = __dx0.out;
      le6.right = const13.out;
    }
    comb group cond7 {
      and2.left = and1.out;
      and2.right = lt1.out;
      and1.left = and0.out;
      and1.right = ge1.out;
      and0.left = ge0.out;
      and0.right = lt0.out;
      ge0.left = __kernel_y_0.out;
      ge0.right = const16.out;
      lt0.left = __kernel_y_0.out;
      lt0.right = const17.out;
      ge1.left = __kernel_x_0.out;
      ge1.right = const18.out;
      lt1.left = __kernel_x_0.out;
      lt1.right = const19.out;
    }
    group let0<"static"=1> {
      __b0.in = const0.out;
      __b0.write_en = 1'd1;
      let0[done] = __b0.done;
    }
    group let1<"static"=1> {
      __c0.in = const2.out;
      __c0.write_en = 1'd1;
      let1[done] = __c0.done;
    }
    group let10<"static"=4> {
      bin_read4_0.in = mult_pipe1.out;
      bin_read4_0.write_en = mult_pipe1.done;
      let10[done] = bin_read4_0.done;
      mult_pipe1.left = const15.out;
      mult_pipe1.right = __x0.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
    }
    group let11<"static"=1> {
      __kernel_x_0.in = add1.out;
      __kernel_x_0.write_en = 1'd1;
      let11[done] = __kernel_x_0.done;
      add1.left = bin_read4_0.out;
      add1.right = __dx0.out;
    }
    group let12<"static"=1> {
      __padded_tensor_val_0.in = fp_const1.out;
      __padded_tensor_val_0.write_en = 1'd1;
      let12[done] = __padded_tensor_val_0.done;
    }
    group let13<"static"=2> {
      x_16_read0_0.in = x_16.read_data;
      x_16_read0_0.write_en = x_16.read_done;
      let13[done] = x_16_read0_0.done;
      x_16.addr3 = slice3.out;
      slice3.in = sub1.out;
      sub1.left = __kernel_x_0.out;
      sub1.right = const21.out;
      x_16.addr2 = slice2.out;
      slice2.in = sub0.out;
      sub0.left = __kernel_y_0.out;
      sub0.right = const20.out;
      x_16.addr1 = slice1.out;
      slice1.in = __k0.out;
      x_16.addr0 = slice0.out;
      slice0.in = __b0.out;
      x_16.read_en = 1'd1;
    }
    group let14<"static"=2> {
      x_17_read0_0.in = x_17.read_data;
      x_17_read0_0.write_en = x_17.read_done;
      let14[done] = x_17_read0_0.done;
      x_17.addr3 = slice7.out;
      slice7.in = __dx0.out;
      x_17.addr2 = slice6.out;
      slice6.in = __dy0.out;
      x_17.addr1 = slice5.out;
      slice5.in = __k0.out;
      x_17.addr0 = slice4.out;
      slice4.in = __c0.out;
      x_17.read_en = 1'd1;
    }
    group let15<"static"=4> {
      bin_read5_0.in = mult_pipe2.out;
      bin_read5_0.write_en = mult_pipe2.done;
      let15[done] = bin_read5_0.done;
      mult_pipe2.left = __padded_tensor_val_0.out;
      mult_pipe2.right = x_17_read0_0.out;
      mult_pipe2.go = !mult_pipe2.done ? 1'd1;
    }
    group let2<"static"=1> {
      __y0.in = const4.out;
      __y0.write_en = 1'd1;
      let2[done] = __y0.done;
    }
    group let3<"static"=1> {
      __x0.in = const6.out;
      __x0.write_en = 1'd1;
      let3[done] = __x0.done;
    }
    group let4<"static"=1> {
      __sum_0.in = fp_const0.out;
      __sum_0.write_en = 1'd1;
      let4[done] = __sum_0.done;
    }
    group let5<"static"=1> {
      __k0.in = const8.out;
      __k0.write_en = 1'd1;
      let5[done] = __k0.done;
    }
    group let6<"static"=1> {
      __dy0.in = const10.out;
      __dy0.write_en = 1'd1;
      let6[done] = __dy0.done;
    }
    group let7<"static"=1> {
      __dx0.in = const12.out;
      __dx0.write_en = 1'd1;
      let7[done] = __dx0.done;
    }
    group let8<"static"=4> {
      bin_read3_0.in = mult_pipe0.out;
      bin_read3_0.write_en = mult_pipe0.done;
      let8[done] = bin_read3_0.done;
      mult_pipe0.left = const14.out;
      mult_pipe0.right = __y0.out;
      mult_pipe0.go = !mult_pipe0.done ? 1'd1;
    }
    group let9<"static"=1> {
      __kernel_y_0.in = add0.out;
      __kernel_y_0.write_en = 1'd1;
      let9[done] = __kernel_y_0.done;
      add0.left = bin_read3_0.out;
      add0.right = __dy0.out;
    }
    group upd0<"static"=1> {
      __padded_tensor_val_0.write_en = 1'd1;
      __padded_tensor_val_0.in = x_16_read0_0.out;
      upd0[done] = __padded_tensor_val_0.done;
    }
    group upd1<"static"=1> {
      __sum_0.write_en = 1'd1;
      add2.left = __sum_0.out;
      add2.right = bin_read5_0.out;
      __sum_0.in = add2.out;
      upd1[done] = __sum_0.done;
    }
    group upd2<"static"=1> {
      __dx0.write_en = 1'd1;
      add3.left = __dx0.out;
      add3.right = const22.out;
      __dx0.in = add3.out;
      upd2[done] = __dx0.done;
    }
    group upd3<"static"=1> {
      __dy0.write_en = 1'd1;
      add4.left = __dy0.out;
      add4.right = const23.out;
      __dy0.in = add4.out;
      upd3[done] = __dy0.done;
    }
    group upd4<"static"=1> {
      __k0.write_en = 1'd1;
      add5.left = __k0.out;
      add5.right = const24.out;
      __k0.in = add5.out;
      upd4[done] = __k0.done;
    }
    group upd5<"static"=1> {
      x_18.addr3 = slice11.out;
      slice11.in = __x0.out;
      x_18.addr2 = slice10.out;
      slice10.in = __y0.out;
      x_18.addr1 = slice9.out;
      slice9.in = __c0.out;
      x_18.addr0 = slice8.out;
      slice8.in = __b0.out;
      x_18.write_en = 1'd1;
      x_18.write_data = __sum_0.out;
      upd5[done] = x_18.write_done;
    }
    group upd6<"static"=1> {
      __x0.write_en = 1'd1;
      add6.left = __x0.out;
      add6.right = const25.out;
      __x0.in = add6.out;
      upd6[done] = __x0.done;
    }
    group upd7<"static"=1> {
      __y0.write_en = 1'd1;
      add7.left = __y0.out;
      add7.right = const26.out;
      __y0.in = add7.out;
      upd7[done] = __y0.done;
    }
    group upd8<"static"=1> {
      __c0.write_en = 1'd1;
      add8.left = __c0.out;
      add8.right = const27.out;
      __c0.in = add8.out;
      upd8[done] = __c0.done;
    }
    group upd9<"static"=1> {
      __b0.write_en = 1'd1;
      add9.left = __b0.out;
      add9.right = const28.out;
      __b0.in = add9.out;
      upd9[done] = __b0.done;
    }
  }
  control {
    seq {
      @pos(0) let0;
      @bound(1) while le0.out with cond0 {
        seq {
          @pos(1) let1;
          @bound(64) while le1.out with cond1 {
            seq {
              @pos(2) let2;
              @bound(224) while le2.out with cond2 {
                seq {
                  @pos(3) let3;
                  @bound(224) while le3.out with cond3 {
                    seq {
                      @pos(4) let4;
                      @pos(5) let5;
                      @bound(64) while le4.out with cond4 {
                        seq {
                          @pos(6) let6;
                          @bound(3) while le5.out with cond5 {
                            seq {
                              @pos(7) let7;
                              @bound(3) while le6.out with cond6 {
                                seq {
                                  par {
                                    seq {
                                      let8;
                                      let9;
                                    }
                                    seq {
                                      let10;
                                      let11;
                                    }
                                  }
                                  @pos(8) let12;
                                  if and2.out with cond7 {
                                    seq {
                                      @pos(9) let13;
                                      @pos(10) upd0;
                                    }
                                  }
                                  @pos(11) let14;
                                  let15;
                                  upd1;
                                  @pos(7) upd2;
                                }
                              }
                              @pos(6) upd3;
                            }
                          }
                          @pos(5) upd4;
                        }
                      }
                      @pos(12) upd5;
                      @pos(3) upd6;
                    }
                  }
                  @pos(2) upd7;
                }
              }
              @pos(1) upd8;
            }
          }
          @pos(0) upd9;
        }
      }
    }
  }
}
component batch_flatten_1x25088() -> () {
  cells {
    ref x_81 = seq_mem_d4(32,1,512,7,7,1,10,3,3);
    ref x_82 = seq_mem_d2(32,1,25088,1,15);
    __i0 = std_reg(1);
    __j0 = std_reg(10);
    __k1 = std_reg(3);
    __l0 = std_reg(3);
    __m_0 = std_reg(15);
    add10 = std_add(15);
    add11 = std_add(3);
    add12 = std_add(3);
    add13 = std_add(10);
    add14 = std_add(1);
    const29 = std_const(15,0);
    const30 = std_const(1,0);
    const31 = std_const(1,0);
    const32 = std_const(10,0);
    const33 = std_const(10,511);
    const34 = std_const(3,0);
    const35 = std_const(3,6);
    const36 = std_const(3,0);
    const37 = std_const(3,6);
    const38 = std_const(15,1);
    const39 = std_const(3,1);
    const40 = std_const(3,1);
    const41 = std_const(10,1);
    const42 = std_const(1,1);
    le10 = std_le(3);
    le7 = std_le(1);
    le8 = std_le(10);
    le9 = std_le(3);
    x_81_read0_0 = std_reg(32);
  }
  wires {
    comb group cond10 {
      le9.left = __k1.out;
      le9.right = const35.out;
    }
    comb group cond11 {
      le10.left = __l0.out;
      le10.right = const37.out;
    }
    comb group cond8 {
      le7.left = __i0.out;
      le7.right = const31.out;
    }
    comb group cond9 {
      le8.left = __j0.out;
      le8.right = const33.out;
    }
    group let16<"static"=1> {
      __m_0.in = const29.out;
      __m_0.write_en = 1'd1;
      let16[done] = __m_0.done;
    }
    group let17<"static"=1> {
      __i0.in = const30.out;
      __i0.write_en = 1'd1;
      let17[done] = __i0.done;
    }
    group let18<"static"=1> {
      __j0.in = const32.out;
      __j0.write_en = 1'd1;
      let18[done] = __j0.done;
    }
    group let19<"static"=1> {
      __k1.in = const34.out;
      __k1.write_en = 1'd1;
      let19[done] = __k1.done;
    }
    group let20<"static"=1> {
      __l0.in = const36.out;
      __l0.write_en = 1'd1;
      let20[done] = __l0.done;
    }
    group let21<"static"=2> {
      x_81_read0_0.in = x_81.read_data;
      x_81_read0_0.write_en = x_81.read_done;
      let21[done] = x_81_read0_0.done;
      x_81.addr3 = __l0.out;
      x_81.addr2 = __k1.out;
      x_81.addr1 = __j0.out;
      x_81.addr0 = __i0.out;
      x_81.read_en = 1'd1;
    }
    group upd10<"static"=1> {
      x_82.addr1 = __m_0.out;
      x_82.addr0 = __i0.out;
      x_82.write_en = 1'd1;
      x_82.write_data = x_81_read0_0.out;
      upd10[done] = x_82.write_done;
    }
    group upd11<"static"=1> {
      __m_0.write_en = 1'd1;
      add10.left = __m_0.out;
      add10.right = const38.out;
      __m_0.in = add10.out;
      upd11[done] = __m_0.done;
    }
    group upd12<"static"=1> {
      __l0.write_en = 1'd1;
      add11.left = __l0.out;
      add11.right = const39.out;
      __l0.in = add11.out;
      upd12[done] = __l0.done;
    }
    group upd13<"static"=1> {
      __k1.write_en = 1'd1;
      add12.left = __k1.out;
      add12.right = const40.out;
      __k1.in = add12.out;
      upd13[done] = __k1.done;
    }
    group upd14<"static"=1> {
      __j0.write_en = 1'd1;
      add13.left = __j0.out;
      add13.right = const41.out;
      __j0.in = add13.out;
      upd14[done] = __j0.done;
    }
    group upd15<"static"=1> {
      __i0.write_en = 1'd1;
      add14.left = __i0.out;
      add14.right = const42.out;
      __i0.in = add14.out;
      upd15[done] = __i0.done;
    }
  }
  control {
    seq {
      @pos(13) let16;
      @pos(14) let17;
      @bound(1) while le7.out with cond8 {
        seq {
          @pos(15) let18;
          @bound(512) while le8.out with cond9 {
            seq {
              @pos(16) let19;
              @bound(7) while le9.out with cond10 {
                seq {
                  @pos(17) let20;
                  @bound(7) while le10.out with cond11 {
                    seq {
                      @pos(18) let21;
                      @pos(19) upd10;
                      @pos(20) upd11;
                      @pos(17) upd12;
                    }
                  }
                  @pos(16) upd13;
                }
              }
              @pos(15) upd14;
            }
          }
          @pos(14) upd15;
        }
      }
    }
  }
}
component batch_flatten_1x4096() -> () {
  cells {
    ref x_87 = seq_mem_d2(32,1,4096,1,13);
    ref x_88 = seq_mem_d2(32,1,4096,1,13);
    __i1 = std_reg(1);
    __j1 = std_reg(13);
    __k_0 = std_reg(13);
    add15 = std_add(13);
    add16 = std_add(13);
    add17 = std_add(1);
    const43 = std_const(13,0);
    const44 = std_const(1,0);
    const45 = std_const(1,0);
    const46 = std_const(13,0);
    const47 = std_const(13,4095);
    const48 = std_const(13,1);
    const49 = std_const(13,1);
    const50 = std_const(1,1);
    le11 = std_le(1);
    le12 = std_le(13);
    x_87_read0_0 = std_reg(32);
  }
  wires {
    comb group cond12 {
      le11.left = __i1.out;
      le11.right = const45.out;
    }
    comb group cond13 {
      le12.left = __j1.out;
      le12.right = const47.out;
    }
    group let22<"static"=1> {
      __k_0.in = const43.out;
      __k_0.write_en = 1'd1;
      let22[done] = __k_0.done;
    }
    group let23<"static"=1> {
      __i1.in = const44.out;
      __i1.write_en = 1'd1;
      let23[done] = __i1.done;
    }
    group let24<"static"=1> {
      __j1.in = const46.out;
      __j1.write_en = 1'd1;
      let24[done] = __j1.done;
    }
    group let25<"static"=2> {
      x_87_read0_0.in = x_87.read_data;
      x_87_read0_0.write_en = x_87.read_done;
      let25[done] = x_87_read0_0.done;
      x_87.addr1 = __j1.out;
      x_87.addr0 = __i1.out;
      x_87.read_en = 1'd1;
    }
    group upd16<"static"=1> {
      x_88.addr1 = __k_0.out;
      x_88.addr0 = __i1.out;
      x_88.write_en = 1'd1;
      x_88.write_data = x_87_read0_0.out;
      upd16[done] = x_88.write_done;
    }
    group upd17<"static"=1> {
      __k_0.write_en = 1'd1;
      add15.left = __k_0.out;
      add15.right = const48.out;
      __k_0.in = add15.out;
      upd17[done] = __k_0.done;
    }
    group upd18<"static"=1> {
      __j1.write_en = 1'd1;
      add16.left = __j1.out;
      add16.right = const49.out;
      __j1.in = add16.out;
      upd18[done] = __j1.done;
    }
    group upd19<"static"=1> {
      __i1.write_en = 1'd1;
      add17.left = __i1.out;
      add17.right = const50.out;
      __i1.in = add17.out;
      upd19[done] = __i1.done;
    }
  }
  control {
    seq {
      @pos(21) let22;
      @pos(22) let23;
      @bound(1) while le11.out with cond12 {
        seq {
          @pos(23) let24;
          @bound(4096) while le12.out with cond13 {
            seq {
              @pos(24) let25;
              @pos(25) upd16;
              @pos(26) upd17;
              @pos(23) upd18;
            }
          }
          @pos(22) upd19;
        }
      }
    }
  }
}
component conv2d_1x256x56x56() -> () {
  cells {
    ref x_33 = seq_mem_d4(32,1,128,56,56,1,8,6,6);
    ref x_34 = seq_mem_d4(32,256,128,3,3,9,8,2,2);
    ref x_35 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    __b1 = std_reg(32);
    __c1 = std_reg(32);
    __dx1 = std_reg(32);
    __dy1 = std_reg(32);
    __k2 = std_reg(32);
    __kernel_x_1 = std_reg(32);
    __kernel_y_1 = std_reg(32);
    __padded_tensor_val_1 = std_reg(32);
    __sum_1 = std_reg(32);
    __x1 = std_reg(32);
    __y1 = std_reg(32);
    add18 = std_add(32);
    add19 = std_add(32);
    add20 = std_fp_sadd(32,16,16);
    add21 = std_add(32);
    add22 = std_add(32);
    add23 = std_add(32);
    add24 = std_add(32);
    add25 = std_add(32);
    add26 = std_add(32);
    add27 = std_add(32);
    and3 = std_and(1);
    and4 = std_and(1);
    and5 = std_and(1);
    bin_read16_0 = std_reg(32);
    bin_read17_0 = std_reg(32);
    bin_read18_0 = std_reg(32);
    const51 = std_const(32,0);
    const52 = std_const(32,0);
    const53 = std_const(32,0);
    const54 = std_const(32,255);
    const55 = std_const(32,0);
    const56 = std_const(32,55);
    const57 = std_const(32,0);
    const58 = std_const(32,55);
    const59 = std_const(32,0);
    const60 = std_const(32,127);
    const61 = std_const(32,0);
    const62 = std_const(32,2);
    const63 = std_const(32,0);
    const64 = std_const(32,2);
    const65 = std_const(32,1);
    const66 = std_const(32,1);
    const67 = std_const(32,1);
    const68 = std_const(32,57);
    const69 = std_const(32,1);
    const70 = std_const(32,57);
    const71 = std_const(32,1);
    const72 = std_const(32,1);
    const73 = std_const(32,1);
    const74 = std_const(32,1);
    const75 = std_const(32,1);
    const76 = std_const(32,1);
    const77 = std_const(32,1);
    const78 = std_const(32,1);
    const79 = std_const(32,1);
    fp_const2 = std_const(32,0);
    fp_const3 = std_const(32,0);
    ge2 = std_ge(32);
    ge3 = std_ge(32);
    le13 = std_le(32);
    le14 = std_le(32);
    le15 = std_le(32);
    le16 = std_le(32);
    le17 = std_le(32);
    le18 = std_le(32);
    le19 = std_le(32);
    lt2 = std_lt(32);
    lt3 = std_lt(32);
    mult_pipe3 = std_mult_pipe(32);
    mult_pipe4 = std_mult_pipe(32);
    mult_pipe5 = std_fp_smult_pipe(32,16,16);
    slice12 = std_slice(32,1);
    slice13 = std_slice(32,8);
    slice14 = std_slice(32,6);
    slice15 = std_slice(32,6);
    slice16 = std_slice(32,9);
    slice17 = std_slice(32,8);
    slice18 = std_slice(32,2);
    slice19 = std_slice(32,2);
    slice20 = std_slice(32,1);
    slice21 = std_slice(32,9);
    slice22 = std_slice(32,6);
    slice23 = std_slice(32,6);
    sub2 = std_sub(32);
    sub3 = std_sub(32);
    x_33_read0_0 = std_reg(32);
    x_34_read0_0 = std_reg(32);
  }
  wires {
    comb group cond14 {
      le13.left = __b1.out;
      le13.right = const52.out;
    }
    comb group cond15 {
      le14.left = __c1.out;
      le14.right = const54.out;
    }
    comb group cond16 {
      le15.left = __y1.out;
      le15.right = const56.out;
    }
    comb group cond17 {
      le16.left = __x1.out;
      le16.right = const58.out;
    }
    comb group cond18 {
      le17.left = __k2.out;
      le17.right = const60.out;
    }
    comb group cond19 {
      le18.left = __dy1.out;
      le18.right = const62.out;
    }
    comb group cond20 {
      le19.left = __dx1.out;
      le19.right = const64.out;
    }
    comb group cond21 {
      and5.left = and4.out;
      and5.right = lt3.out;
      and4.left = and3.out;
      and4.right = ge3.out;
      and3.left = ge2.out;
      and3.right = lt2.out;
      ge2.left = __kernel_y_1.out;
      ge2.right = const67.out;
      lt2.left = __kernel_y_1.out;
      lt2.right = const68.out;
      ge3.left = __kernel_x_1.out;
      ge3.right = const69.out;
      lt3.left = __kernel_x_1.out;
      lt3.right = const70.out;
    }
    group let26<"static"=1> {
      __b1.in = const51.out;
      __b1.write_en = 1'd1;
      let26[done] = __b1.done;
    }
    group let27<"static"=1> {
      __c1.in = const53.out;
      __c1.write_en = 1'd1;
      let27[done] = __c1.done;
    }
    group let28<"static"=1> {
      __y1.in = const55.out;
      __y1.write_en = 1'd1;
      let28[done] = __y1.done;
    }
    group let29<"static"=1> {
      __x1.in = const57.out;
      __x1.write_en = 1'd1;
      let29[done] = __x1.done;
    }
    group let30<"static"=1> {
      __sum_1.in = fp_const2.out;
      __sum_1.write_en = 1'd1;
      let30[done] = __sum_1.done;
    }
    group let31<"static"=1> {
      __k2.in = const59.out;
      __k2.write_en = 1'd1;
      let31[done] = __k2.done;
    }
    group let32<"static"=1> {
      __dy1.in = const61.out;
      __dy1.write_en = 1'd1;
      let32[done] = __dy1.done;
    }
    group let33<"static"=1> {
      __dx1.in = const63.out;
      __dx1.write_en = 1'd1;
      let33[done] = __dx1.done;
    }
    group let34<"static"=4> {
      bin_read16_0.in = mult_pipe3.out;
      bin_read16_0.write_en = mult_pipe3.done;
      let34[done] = bin_read16_0.done;
      mult_pipe3.left = const65.out;
      mult_pipe3.right = __y1.out;
      mult_pipe3.go = !mult_pipe3.done ? 1'd1;
    }
    group let35<"static"=1> {
      __kernel_y_1.in = add18.out;
      __kernel_y_1.write_en = 1'd1;
      let35[done] = __kernel_y_1.done;
      add18.left = bin_read16_0.out;
      add18.right = __dy1.out;
    }
    group let36<"static"=4> {
      bin_read17_0.in = mult_pipe4.out;
      bin_read17_0.write_en = mult_pipe4.done;
      let36[done] = bin_read17_0.done;
      mult_pipe4.left = const66.out;
      mult_pipe4.right = __x1.out;
      mult_pipe4.go = !mult_pipe4.done ? 1'd1;
    }
    group let37<"static"=1> {
      __kernel_x_1.in = add19.out;
      __kernel_x_1.write_en = 1'd1;
      let37[done] = __kernel_x_1.done;
      add19.left = bin_read17_0.out;
      add19.right = __dx1.out;
    }
    group let38<"static"=1> {
      __padded_tensor_val_1.in = fp_const3.out;
      __padded_tensor_val_1.write_en = 1'd1;
      let38[done] = __padded_tensor_val_1.done;
    }
    group let39<"static"=2> {
      x_33_read0_0.in = x_33.read_data;
      x_33_read0_0.write_en = x_33.read_done;
      let39[done] = x_33_read0_0.done;
      x_33.addr3 = slice15.out;
      slice15.in = sub3.out;
      sub3.left = __kernel_x_1.out;
      sub3.right = const72.out;
      x_33.addr2 = slice14.out;
      slice14.in = sub2.out;
      sub2.left = __kernel_y_1.out;
      sub2.right = const71.out;
      x_33.addr1 = slice13.out;
      slice13.in = __k2.out;
      x_33.addr0 = slice12.out;
      slice12.in = __b1.out;
      x_33.read_en = 1'd1;
    }
    group let40<"static"=2> {
      x_34_read0_0.in = x_34.read_data;
      x_34_read0_0.write_en = x_34.read_done;
      let40[done] = x_34_read0_0.done;
      x_34.addr3 = slice19.out;
      slice19.in = __dx1.out;
      x_34.addr2 = slice18.out;
      slice18.in = __dy1.out;
      x_34.addr1 = slice17.out;
      slice17.in = __k2.out;
      x_34.addr0 = slice16.out;
      slice16.in = __c1.out;
      x_34.read_en = 1'd1;
    }
    group let41<"static"=4> {
      bin_read18_0.in = mult_pipe5.out;
      bin_read18_0.write_en = mult_pipe5.done;
      let41[done] = bin_read18_0.done;
      mult_pipe5.left = __padded_tensor_val_1.out;
      mult_pipe5.right = x_34_read0_0.out;
      mult_pipe5.go = !mult_pipe5.done ? 1'd1;
    }
    group upd20<"static"=1> {
      __padded_tensor_val_1.write_en = 1'd1;
      __padded_tensor_val_1.in = x_33_read0_0.out;
      upd20[done] = __padded_tensor_val_1.done;
    }
    group upd21<"static"=1> {
      __sum_1.write_en = 1'd1;
      add20.left = __sum_1.out;
      add20.right = bin_read18_0.out;
      __sum_1.in = add20.out;
      upd21[done] = __sum_1.done;
    }
    group upd22<"static"=1> {
      __dx1.write_en = 1'd1;
      add21.left = __dx1.out;
      add21.right = const73.out;
      __dx1.in = add21.out;
      upd22[done] = __dx1.done;
    }
    group upd23<"static"=1> {
      __dy1.write_en = 1'd1;
      add22.left = __dy1.out;
      add22.right = const74.out;
      __dy1.in = add22.out;
      upd23[done] = __dy1.done;
    }
    group upd24<"static"=1> {
      __k2.write_en = 1'd1;
      add23.left = __k2.out;
      add23.right = const75.out;
      __k2.in = add23.out;
      upd24[done] = __k2.done;
    }
    group upd25<"static"=1> {
      x_35.addr3 = slice23.out;
      slice23.in = __x1.out;
      x_35.addr2 = slice22.out;
      slice22.in = __y1.out;
      x_35.addr1 = slice21.out;
      slice21.in = __c1.out;
      x_35.addr0 = slice20.out;
      slice20.in = __b1.out;
      x_35.write_en = 1'd1;
      x_35.write_data = __sum_1.out;
      upd25[done] = x_35.write_done;
    }
    group upd26<"static"=1> {
      __x1.write_en = 1'd1;
      add24.left = __x1.out;
      add24.right = const76.out;
      __x1.in = add24.out;
      upd26[done] = __x1.done;
    }
    group upd27<"static"=1> {
      __y1.write_en = 1'd1;
      add25.left = __y1.out;
      add25.right = const77.out;
      __y1.in = add25.out;
      upd27[done] = __y1.done;
    }
    group upd28<"static"=1> {
      __c1.write_en = 1'd1;
      add26.left = __c1.out;
      add26.right = const78.out;
      __c1.in = add26.out;
      upd28[done] = __c1.done;
    }
    group upd29<"static"=1> {
      __b1.write_en = 1'd1;
      add27.left = __b1.out;
      add27.right = const79.out;
      __b1.in = add27.out;
      upd29[done] = __b1.done;
    }
  }
  control {
    seq {
      @pos(27) let26;
      @bound(1) while le13.out with cond14 {
        seq {
          @pos(28) let27;
          @bound(256) while le14.out with cond15 {
            seq {
              @pos(29) let28;
              @bound(56) while le15.out with cond16 {
                seq {
                  @pos(30) let29;
                  @bound(56) while le16.out with cond17 {
                    seq {
                      @pos(31) let30;
                      @pos(32) let31;
                      @bound(128) while le17.out with cond18 {
                        seq {
                          @pos(33) let32;
                          @bound(3) while le18.out with cond19 {
                            seq {
                              @pos(34) let33;
                              @bound(3) while le19.out with cond20 {
                                seq {
                                  par {
                                    seq {
                                      let34;
                                      let35;
                                    }
                                    seq {
                                      let36;
                                      let37;
                                    }
                                  }
                                  @pos(35) let38;
                                  if and5.out with cond21 {
                                    seq {
                                      @pos(36) let39;
                                      @pos(37) upd20;
                                    }
                                  }
                                  @pos(38) let40;
                                  let41;
                                  upd21;
                                  @pos(34) upd22;
                                }
                              }
                              @pos(33) upd23;
                            }
                          }
                          @pos(32) upd24;
                        }
                      }
                      @pos(39) upd25;
                      @pos(30) upd26;
                    }
                  }
                  @pos(29) upd27;
                }
              }
              @pos(28) upd28;
            }
          }
          @pos(27) upd29;
        }
      }
    }
  }
}
component conv2d_1x128x112x112_1() -> () {
  cells {
    ref x_27 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    ref x_28 = seq_mem_d4(32,128,128,3,3,8,8,2,2);
    ref x_29 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    __b2 = std_reg(32);
    __c2 = std_reg(32);
    __dx2 = std_reg(32);
    __dy2 = std_reg(32);
    __k3 = std_reg(32);
    __kernel_x_2 = std_reg(32);
    __kernel_y_2 = std_reg(32);
    __padded_tensor_val_2 = std_reg(32);
    __sum_2 = std_reg(32);
    __x2 = std_reg(32);
    __y2 = std_reg(32);
    add28 = std_add(32);
    add29 = std_add(32);
    add30 = std_fp_sadd(32,16,16);
    add31 = std_add(32);
    add32 = std_add(32);
    add33 = std_add(32);
    add34 = std_add(32);
    add35 = std_add(32);
    add36 = std_add(32);
    add37 = std_add(32);
    and6 = std_and(1);
    and7 = std_and(1);
    and8 = std_and(1);
    bin_read11_0 = std_reg(32);
    bin_read12_0 = std_reg(32);
    bin_read13_0 = std_reg(32);
    const100 = std_const(32,1);
    const101 = std_const(32,1);
    const102 = std_const(32,1);
    const103 = std_const(32,1);
    const104 = std_const(32,1);
    const105 = std_const(32,1);
    const106 = std_const(32,1);
    const107 = std_const(32,1);
    const108 = std_const(32,1);
    const80 = std_const(32,0);
    const81 = std_const(32,0);
    const82 = std_const(32,0);
    const83 = std_const(32,127);
    const84 = std_const(32,0);
    const85 = std_const(32,111);
    const86 = std_const(32,0);
    const87 = std_const(32,111);
    const88 = std_const(32,0);
    const89 = std_const(32,127);
    const90 = std_const(32,0);
    const91 = std_const(32,2);
    const92 = std_const(32,0);
    const93 = std_const(32,2);
    const94 = std_const(32,1);
    const95 = std_const(32,1);
    const96 = std_const(32,1);
    const97 = std_const(32,113);
    const98 = std_const(32,1);
    const99 = std_const(32,113);
    fp_const4 = std_const(32,0);
    fp_const5 = std_const(32,0);
    ge4 = std_ge(32);
    ge5 = std_ge(32);
    le20 = std_le(32);
    le21 = std_le(32);
    le22 = std_le(32);
    le23 = std_le(32);
    le24 = std_le(32);
    le25 = std_le(32);
    le26 = std_le(32);
    lt4 = std_lt(32);
    lt5 = std_lt(32);
    mult_pipe6 = std_mult_pipe(32);
    mult_pipe7 = std_mult_pipe(32);
    mult_pipe8 = std_fp_smult_pipe(32,16,16);
    slice24 = std_slice(32,1);
    slice25 = std_slice(32,8);
    slice26 = std_slice(32,7);
    slice27 = std_slice(32,7);
    slice28 = std_slice(32,8);
    slice29 = std_slice(32,8);
    slice30 = std_slice(32,2);
    slice31 = std_slice(32,2);
    slice32 = std_slice(32,1);
    slice33 = std_slice(32,8);
    slice34 = std_slice(32,7);
    slice35 = std_slice(32,7);
    sub4 = std_sub(32);
    sub5 = std_sub(32);
    x_27_read0_0 = std_reg(32);
    x_28_read0_0 = std_reg(32);
  }
  wires {
    comb group cond22 {
      le20.left = __b2.out;
      le20.right = const81.out;
    }
    comb group cond23 {
      le21.left = __c2.out;
      le21.right = const83.out;
    }
    comb group cond24 {
      le22.left = __y2.out;
      le22.right = const85.out;
    }
    comb group cond25 {
      le23.left = __x2.out;
      le23.right = const87.out;
    }
    comb group cond26 {
      le24.left = __k3.out;
      le24.right = const89.out;
    }
    comb group cond27 {
      le25.left = __dy2.out;
      le25.right = const91.out;
    }
    comb group cond28 {
      le26.left = __dx2.out;
      le26.right = const93.out;
    }
    comb group cond29 {
      and8.left = and7.out;
      and8.right = lt5.out;
      and7.left = and6.out;
      and7.right = ge5.out;
      and6.left = ge4.out;
      and6.right = lt4.out;
      ge4.left = __kernel_y_2.out;
      ge4.right = const96.out;
      lt4.left = __kernel_y_2.out;
      lt4.right = const97.out;
      ge5.left = __kernel_x_2.out;
      ge5.right = const98.out;
      lt5.left = __kernel_x_2.out;
      lt5.right = const99.out;
    }
    group let42<"static"=1> {
      __b2.in = const80.out;
      __b2.write_en = 1'd1;
      let42[done] = __b2.done;
    }
    group let43<"static"=1> {
      __c2.in = const82.out;
      __c2.write_en = 1'd1;
      let43[done] = __c2.done;
    }
    group let44<"static"=1> {
      __y2.in = const84.out;
      __y2.write_en = 1'd1;
      let44[done] = __y2.done;
    }
    group let45<"static"=1> {
      __x2.in = const86.out;
      __x2.write_en = 1'd1;
      let45[done] = __x2.done;
    }
    group let46<"static"=1> {
      __sum_2.in = fp_const4.out;
      __sum_2.write_en = 1'd1;
      let46[done] = __sum_2.done;
    }
    group let47<"static"=1> {
      __k3.in = const88.out;
      __k3.write_en = 1'd1;
      let47[done] = __k3.done;
    }
    group let48<"static"=1> {
      __dy2.in = const90.out;
      __dy2.write_en = 1'd1;
      let48[done] = __dy2.done;
    }
    group let49<"static"=1> {
      __dx2.in = const92.out;
      __dx2.write_en = 1'd1;
      let49[done] = __dx2.done;
    }
    group let50<"static"=4> {
      bin_read11_0.in = mult_pipe6.out;
      bin_read11_0.write_en = mult_pipe6.done;
      let50[done] = bin_read11_0.done;
      mult_pipe6.left = const94.out;
      mult_pipe6.right = __y2.out;
      mult_pipe6.go = !mult_pipe6.done ? 1'd1;
    }
    group let51<"static"=1> {
      __kernel_y_2.in = add28.out;
      __kernel_y_2.write_en = 1'd1;
      let51[done] = __kernel_y_2.done;
      add28.left = bin_read11_0.out;
      add28.right = __dy2.out;
    }
    group let52<"static"=4> {
      bin_read12_0.in = mult_pipe7.out;
      bin_read12_0.write_en = mult_pipe7.done;
      let52[done] = bin_read12_0.done;
      mult_pipe7.left = const95.out;
      mult_pipe7.right = __x2.out;
      mult_pipe7.go = !mult_pipe7.done ? 1'd1;
    }
    group let53<"static"=1> {
      __kernel_x_2.in = add29.out;
      __kernel_x_2.write_en = 1'd1;
      let53[done] = __kernel_x_2.done;
      add29.left = bin_read12_0.out;
      add29.right = __dx2.out;
    }
    group let54<"static"=1> {
      __padded_tensor_val_2.in = fp_const5.out;
      __padded_tensor_val_2.write_en = 1'd1;
      let54[done] = __padded_tensor_val_2.done;
    }
    group let55<"static"=2> {
      x_27_read0_0.in = x_27.read_data;
      x_27_read0_0.write_en = x_27.read_done;
      let55[done] = x_27_read0_0.done;
      x_27.addr3 = slice27.out;
      slice27.in = sub5.out;
      sub5.left = __kernel_x_2.out;
      sub5.right = const101.out;
      x_27.addr2 = slice26.out;
      slice26.in = sub4.out;
      sub4.left = __kernel_y_2.out;
      sub4.right = const100.out;
      x_27.addr1 = slice25.out;
      slice25.in = __k3.out;
      x_27.addr0 = slice24.out;
      slice24.in = __b2.out;
      x_27.read_en = 1'd1;
    }
    group let56<"static"=2> {
      x_28_read0_0.in = x_28.read_data;
      x_28_read0_0.write_en = x_28.read_done;
      let56[done] = x_28_read0_0.done;
      x_28.addr3 = slice31.out;
      slice31.in = __dx2.out;
      x_28.addr2 = slice30.out;
      slice30.in = __dy2.out;
      x_28.addr1 = slice29.out;
      slice29.in = __k3.out;
      x_28.addr0 = slice28.out;
      slice28.in = __c2.out;
      x_28.read_en = 1'd1;
    }
    group let57<"static"=4> {
      bin_read13_0.in = mult_pipe8.out;
      bin_read13_0.write_en = mult_pipe8.done;
      let57[done] = bin_read13_0.done;
      mult_pipe8.left = __padded_tensor_val_2.out;
      mult_pipe8.right = x_28_read0_0.out;
      mult_pipe8.go = !mult_pipe8.done ? 1'd1;
    }
    group upd30<"static"=1> {
      __padded_tensor_val_2.write_en = 1'd1;
      __padded_tensor_val_2.in = x_27_read0_0.out;
      upd30[done] = __padded_tensor_val_2.done;
    }
    group upd31<"static"=1> {
      __sum_2.write_en = 1'd1;
      add30.left = __sum_2.out;
      add30.right = bin_read13_0.out;
      __sum_2.in = add30.out;
      upd31[done] = __sum_2.done;
    }
    group upd32<"static"=1> {
      __dx2.write_en = 1'd1;
      add31.left = __dx2.out;
      add31.right = const102.out;
      __dx2.in = add31.out;
      upd32[done] = __dx2.done;
    }
    group upd33<"static"=1> {
      __dy2.write_en = 1'd1;
      add32.left = __dy2.out;
      add32.right = const103.out;
      __dy2.in = add32.out;
      upd33[done] = __dy2.done;
    }
    group upd34<"static"=1> {
      __k3.write_en = 1'd1;
      add33.left = __k3.out;
      add33.right = const104.out;
      __k3.in = add33.out;
      upd34[done] = __k3.done;
    }
    group upd35<"static"=1> {
      x_29.addr3 = slice35.out;
      slice35.in = __x2.out;
      x_29.addr2 = slice34.out;
      slice34.in = __y2.out;
      x_29.addr1 = slice33.out;
      slice33.in = __c2.out;
      x_29.addr0 = slice32.out;
      slice32.in = __b2.out;
      x_29.write_en = 1'd1;
      x_29.write_data = __sum_2.out;
      upd35[done] = x_29.write_done;
    }
    group upd36<"static"=1> {
      __x2.write_en = 1'd1;
      add34.left = __x2.out;
      add34.right = const105.out;
      __x2.in = add34.out;
      upd36[done] = __x2.done;
    }
    group upd37<"static"=1> {
      __y2.write_en = 1'd1;
      add35.left = __y2.out;
      add35.right = const106.out;
      __y2.in = add35.out;
      upd37[done] = __y2.done;
    }
    group upd38<"static"=1> {
      __c2.write_en = 1'd1;
      add36.left = __c2.out;
      add36.right = const107.out;
      __c2.in = add36.out;
      upd38[done] = __c2.done;
    }
    group upd39<"static"=1> {
      __b2.write_en = 1'd1;
      add37.left = __b2.out;
      add37.right = const108.out;
      __b2.in = add37.out;
      upd39[done] = __b2.done;
    }
  }
  control {
    seq {
      @pos(40) let42;
      @bound(1) while le20.out with cond22 {
        seq {
          @pos(41) let43;
          @bound(128) while le21.out with cond23 {
            seq {
              @pos(42) let44;
              @bound(112) while le22.out with cond24 {
                seq {
                  @pos(43) let45;
                  @bound(112) while le23.out with cond25 {
                    seq {
                      @pos(44) let46;
                      @pos(45) let47;
                      @bound(128) while le24.out with cond26 {
                        seq {
                          @pos(46) let48;
                          @bound(3) while le25.out with cond27 {
                            seq {
                              @pos(47) let49;
                              @bound(3) while le26.out with cond28 {
                                seq {
                                  par {
                                    seq {
                                      let50;
                                      let51;
                                    }
                                    seq {
                                      let52;
                                      let53;
                                    }
                                  }
                                  @pos(48) let54;
                                  if and8.out with cond29 {
                                    seq {
                                      @pos(49) let55;
                                      @pos(50) upd30;
                                    }
                                  }
                                  @pos(51) let56;
                                  let57;
                                  upd31;
                                  @pos(47) upd32;
                                }
                              }
                              @pos(46) upd33;
                            }
                          }
                          @pos(45) upd34;
                        }
                      }
                      @pos(52) upd35;
                      @pos(43) upd36;
                    }
                  }
                  @pos(42) upd37;
                }
              }
              @pos(41) upd38;
            }
          }
          @pos(40) upd39;
        }
      }
    }
  }
}
component add_1x1000() -> () {
  cells {
    ref x_96 = seq_mem_d2(32,1,1000,1,10);
    ref x_97 = seq_mem_d1(32,1000,10);
    ref x_98 = seq_mem_d2(32,1,1000,1,10);
    __i2 = std_reg(1);
    __j2 = std_reg(10);
    add38 = std_fp_sadd(32,16,16);
    add39 = std_add(10);
    add40 = std_add(1);
    const109 = std_const(1,0);
    const110 = std_const(1,0);
    const111 = std_const(10,0);
    const112 = std_const(10,999);
    const113 = std_const(10,1);
    const114 = std_const(1,1);
    le27 = std_le(1);
    le28 = std_le(10);
    x_96_read0_0 = std_reg(32);
    x_97_read0_0 = std_reg(32);
  }
  wires {
    comb group cond30 {
      le27.left = __i2.out;
      le27.right = const110.out;
    }
    comb group cond31 {
      le28.left = __j2.out;
      le28.right = const112.out;
    }
    group let58<"static"=1> {
      __i2.in = const109.out;
      __i2.write_en = 1'd1;
      let58[done] = __i2.done;
    }
    group let59<"static"=1> {
      __j2.in = const111.out;
      __j2.write_en = 1'd1;
      let59[done] = __j2.done;
    }
    group let60<"static"=2> {
      x_96_read0_0.in = x_96.read_data;
      x_96_read0_0.write_en = x_96.read_done;
      let60[done] = x_96_read0_0.done;
      x_96.addr1 = __j2.out;
      x_96.addr0 = __i2.out;
      x_96.read_en = 1'd1;
    }
    group let61<"static"=2> {
      x_97_read0_0.in = x_97.read_data;
      x_97_read0_0.write_en = x_97.read_done;
      let61[done] = x_97_read0_0.done;
      x_97.addr0 = __j2.out;
      x_97.read_en = 1'd1;
    }
    group upd40<"static"=1> {
      x_98.addr1 = __j2.out;
      x_98.addr0 = __i2.out;
      x_98.write_en = 1'd1;
      add38.left = x_96_read0_0.out;
      add38.right = x_97_read0_0.out;
      x_98.write_data = add38.out;
      upd40[done] = x_98.write_done;
    }
    group upd41<"static"=1> {
      __j2.write_en = 1'd1;
      add39.left = __j2.out;
      add39.right = const113.out;
      __j2.in = add39.out;
      upd41[done] = __j2.done;
    }
    group upd42<"static"=1> {
      __i2.write_en = 1'd1;
      add40.left = __i2.out;
      add40.right = const114.out;
      __i2.in = add40.out;
      upd42[done] = __i2.done;
    }
  }
  control {
    seq {
      @pos(53) let58;
      @bound(1) while le27.out with cond30 {
        seq {
          @pos(54) let59;
          @bound(1000) while le28.out with cond31 {
            seq {
              par {
                @pos(55) let60;
                @pos(56) let61;
              }
              @pos(57) upd40;
              @pos(54) upd41;
            }
          }
          @pos(53) upd42;
        }
      }
    }
  }
}
component conv2d_1x512x28x28() -> () {
  cells {
    ref x_49 = seq_mem_d4(32,1,256,28,28,1,9,5,5);
    ref x_50 = seq_mem_d4(32,512,256,3,3,10,9,2,2);
    ref x_51 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    __b3 = std_reg(32);
    __c3 = std_reg(32);
    __dx3 = std_reg(32);
    __dy3 = std_reg(32);
    __k4 = std_reg(32);
    __kernel_x_3 = std_reg(32);
    __kernel_y_3 = std_reg(32);
    __padded_tensor_val_3 = std_reg(32);
    __sum_3 = std_reg(32);
    __x3 = std_reg(32);
    __y3 = std_reg(32);
    add41 = std_add(32);
    add42 = std_add(32);
    add43 = std_fp_sadd(32,16,16);
    add44 = std_add(32);
    add45 = std_add(32);
    add46 = std_add(32);
    add47 = std_add(32);
    add48 = std_add(32);
    add49 = std_add(32);
    add50 = std_add(32);
    and10 = std_and(1);
    and11 = std_and(1);
    and9 = std_and(1);
    bin_read24_0 = std_reg(32);
    bin_read25_0 = std_reg(32);
    bin_read26_0 = std_reg(32);
    const115 = std_const(32,0);
    const116 = std_const(32,0);
    const117 = std_const(32,0);
    const118 = std_const(32,511);
    const119 = std_const(32,0);
    const120 = std_const(32,27);
    const121 = std_const(32,0);
    const122 = std_const(32,27);
    const123 = std_const(32,0);
    const124 = std_const(32,255);
    const125 = std_const(32,0);
    const126 = std_const(32,2);
    const127 = std_const(32,0);
    const128 = std_const(32,2);
    const129 = std_const(32,1);
    const130 = std_const(32,1);
    const131 = std_const(32,1);
    const132 = std_const(32,29);
    const133 = std_const(32,1);
    const134 = std_const(32,29);
    const135 = std_const(32,1);
    const136 = std_const(32,1);
    const137 = std_const(32,1);
    const138 = std_const(32,1);
    const139 = std_const(32,1);
    const140 = std_const(32,1);
    const141 = std_const(32,1);
    const142 = std_const(32,1);
    const143 = std_const(32,1);
    fp_const6 = std_const(32,0);
    fp_const7 = std_const(32,0);
    ge6 = std_ge(32);
    ge7 = std_ge(32);
    le29 = std_le(32);
    le30 = std_le(32);
    le31 = std_le(32);
    le32 = std_le(32);
    le33 = std_le(32);
    le34 = std_le(32);
    le35 = std_le(32);
    lt6 = std_lt(32);
    lt7 = std_lt(32);
    mult_pipe10 = std_mult_pipe(32);
    mult_pipe11 = std_fp_smult_pipe(32,16,16);
    mult_pipe9 = std_mult_pipe(32);
    slice36 = std_slice(32,1);
    slice37 = std_slice(32,9);
    slice38 = std_slice(32,5);
    slice39 = std_slice(32,5);
    slice40 = std_slice(32,10);
    slice41 = std_slice(32,9);
    slice42 = std_slice(32,2);
    slice43 = std_slice(32,2);
    slice44 = std_slice(32,1);
    slice45 = std_slice(32,10);
    slice46 = std_slice(32,5);
    slice47 = std_slice(32,5);
    sub6 = std_sub(32);
    sub7 = std_sub(32);
    x_49_read0_0 = std_reg(32);
    x_50_read0_0 = std_reg(32);
  }
  wires {
    comb group cond32 {
      le29.left = __b3.out;
      le29.right = const116.out;
    }
    comb group cond33 {
      le30.left = __c3.out;
      le30.right = const118.out;
    }
    comb group cond34 {
      le31.left = __y3.out;
      le31.right = const120.out;
    }
    comb group cond35 {
      le32.left = __x3.out;
      le32.right = const122.out;
    }
    comb group cond36 {
      le33.left = __k4.out;
      le33.right = const124.out;
    }
    comb group cond37 {
      le34.left = __dy3.out;
      le34.right = const126.out;
    }
    comb group cond38 {
      le35.left = __dx3.out;
      le35.right = const128.out;
    }
    comb group cond39 {
      and11.left = and10.out;
      and11.right = lt7.out;
      and10.left = and9.out;
      and10.right = ge7.out;
      and9.left = ge6.out;
      and9.right = lt6.out;
      ge6.left = __kernel_y_3.out;
      ge6.right = const131.out;
      lt6.left = __kernel_y_3.out;
      lt6.right = const132.out;
      ge7.left = __kernel_x_3.out;
      ge7.right = const133.out;
      lt7.left = __kernel_x_3.out;
      lt7.right = const134.out;
    }
    group let62<"static"=1> {
      __b3.in = const115.out;
      __b3.write_en = 1'd1;
      let62[done] = __b3.done;
    }
    group let63<"static"=1> {
      __c3.in = const117.out;
      __c3.write_en = 1'd1;
      let63[done] = __c3.done;
    }
    group let64<"static"=1> {
      __y3.in = const119.out;
      __y3.write_en = 1'd1;
      let64[done] = __y3.done;
    }
    group let65<"static"=1> {
      __x3.in = const121.out;
      __x3.write_en = 1'd1;
      let65[done] = __x3.done;
    }
    group let66<"static"=1> {
      __sum_3.in = fp_const6.out;
      __sum_3.write_en = 1'd1;
      let66[done] = __sum_3.done;
    }
    group let67<"static"=1> {
      __k4.in = const123.out;
      __k4.write_en = 1'd1;
      let67[done] = __k4.done;
    }
    group let68<"static"=1> {
      __dy3.in = const125.out;
      __dy3.write_en = 1'd1;
      let68[done] = __dy3.done;
    }
    group let69<"static"=1> {
      __dx3.in = const127.out;
      __dx3.write_en = 1'd1;
      let69[done] = __dx3.done;
    }
    group let70<"static"=4> {
      bin_read24_0.in = mult_pipe9.out;
      bin_read24_0.write_en = mult_pipe9.done;
      let70[done] = bin_read24_0.done;
      mult_pipe9.left = const129.out;
      mult_pipe9.right = __y3.out;
      mult_pipe9.go = !mult_pipe9.done ? 1'd1;
    }
    group let71<"static"=1> {
      __kernel_y_3.in = add41.out;
      __kernel_y_3.write_en = 1'd1;
      let71[done] = __kernel_y_3.done;
      add41.left = bin_read24_0.out;
      add41.right = __dy3.out;
    }
    group let72<"static"=4> {
      bin_read25_0.in = mult_pipe10.out;
      bin_read25_0.write_en = mult_pipe10.done;
      let72[done] = bin_read25_0.done;
      mult_pipe10.left = const130.out;
      mult_pipe10.right = __x3.out;
      mult_pipe10.go = !mult_pipe10.done ? 1'd1;
    }
    group let73<"static"=1> {
      __kernel_x_3.in = add42.out;
      __kernel_x_3.write_en = 1'd1;
      let73[done] = __kernel_x_3.done;
      add42.left = bin_read25_0.out;
      add42.right = __dx3.out;
    }
    group let74<"static"=1> {
      __padded_tensor_val_3.in = fp_const7.out;
      __padded_tensor_val_3.write_en = 1'd1;
      let74[done] = __padded_tensor_val_3.done;
    }
    group let75<"static"=2> {
      x_49_read0_0.in = x_49.read_data;
      x_49_read0_0.write_en = x_49.read_done;
      let75[done] = x_49_read0_0.done;
      x_49.addr3 = slice39.out;
      slice39.in = sub7.out;
      sub7.left = __kernel_x_3.out;
      sub7.right = const136.out;
      x_49.addr2 = slice38.out;
      slice38.in = sub6.out;
      sub6.left = __kernel_y_3.out;
      sub6.right = const135.out;
      x_49.addr1 = slice37.out;
      slice37.in = __k4.out;
      x_49.addr0 = slice36.out;
      slice36.in = __b3.out;
      x_49.read_en = 1'd1;
    }
    group let76<"static"=2> {
      x_50_read0_0.in = x_50.read_data;
      x_50_read0_0.write_en = x_50.read_done;
      let76[done] = x_50_read0_0.done;
      x_50.addr3 = slice43.out;
      slice43.in = __dx3.out;
      x_50.addr2 = slice42.out;
      slice42.in = __dy3.out;
      x_50.addr1 = slice41.out;
      slice41.in = __k4.out;
      x_50.addr0 = slice40.out;
      slice40.in = __c3.out;
      x_50.read_en = 1'd1;
    }
    group let77<"static"=4> {
      bin_read26_0.in = mult_pipe11.out;
      bin_read26_0.write_en = mult_pipe11.done;
      let77[done] = bin_read26_0.done;
      mult_pipe11.left = __padded_tensor_val_3.out;
      mult_pipe11.right = x_50_read0_0.out;
      mult_pipe11.go = !mult_pipe11.done ? 1'd1;
    }
    group upd43<"static"=1> {
      __padded_tensor_val_3.write_en = 1'd1;
      __padded_tensor_val_3.in = x_49_read0_0.out;
      upd43[done] = __padded_tensor_val_3.done;
    }
    group upd44<"static"=1> {
      __sum_3.write_en = 1'd1;
      add43.left = __sum_3.out;
      add43.right = bin_read26_0.out;
      __sum_3.in = add43.out;
      upd44[done] = __sum_3.done;
    }
    group upd45<"static"=1> {
      __dx3.write_en = 1'd1;
      add44.left = __dx3.out;
      add44.right = const137.out;
      __dx3.in = add44.out;
      upd45[done] = __dx3.done;
    }
    group upd46<"static"=1> {
      __dy3.write_en = 1'd1;
      add45.left = __dy3.out;
      add45.right = const138.out;
      __dy3.in = add45.out;
      upd46[done] = __dy3.done;
    }
    group upd47<"static"=1> {
      __k4.write_en = 1'd1;
      add46.left = __k4.out;
      add46.right = const139.out;
      __k4.in = add46.out;
      upd47[done] = __k4.done;
    }
    group upd48<"static"=1> {
      x_51.addr3 = slice47.out;
      slice47.in = __x3.out;
      x_51.addr2 = slice46.out;
      slice46.in = __y3.out;
      x_51.addr1 = slice45.out;
      slice45.in = __c3.out;
      x_51.addr0 = slice44.out;
      slice44.in = __b3.out;
      x_51.write_en = 1'd1;
      x_51.write_data = __sum_3.out;
      upd48[done] = x_51.write_done;
    }
    group upd49<"static"=1> {
      __x3.write_en = 1'd1;
      add47.left = __x3.out;
      add47.right = const140.out;
      __x3.in = add47.out;
      upd49[done] = __x3.done;
    }
    group upd50<"static"=1> {
      __y3.write_en = 1'd1;
      add48.left = __y3.out;
      add48.right = const141.out;
      __y3.in = add48.out;
      upd50[done] = __y3.done;
    }
    group upd51<"static"=1> {
      __c3.write_en = 1'd1;
      add49.left = __c3.out;
      add49.right = const142.out;
      __c3.in = add49.out;
      upd51[done] = __c3.done;
    }
    group upd52<"static"=1> {
      __b3.write_en = 1'd1;
      add50.left = __b3.out;
      add50.right = const143.out;
      __b3.in = add50.out;
      upd52[done] = __b3.done;
    }
  }
  control {
    seq {
      @pos(58) let62;
      @bound(1) while le29.out with cond32 {
        seq {
          @pos(59) let63;
          @bound(512) while le30.out with cond33 {
            seq {
              @pos(60) let64;
              @bound(28) while le31.out with cond34 {
                seq {
                  @pos(61) let65;
                  @bound(28) while le32.out with cond35 {
                    seq {
                      @pos(62) let66;
                      @pos(63) let67;
                      @bound(256) while le33.out with cond36 {
                        seq {
                          @pos(64) let68;
                          @bound(3) while le34.out with cond37 {
                            seq {
                              @pos(65) let69;
                              @bound(3) while le35.out with cond38 {
                                seq {
                                  par {
                                    seq {
                                      let70;
                                      let71;
                                    }
                                    seq {
                                      let72;
                                      let73;
                                    }
                                  }
                                  @pos(66) let74;
                                  if and11.out with cond39 {
                                    seq {
                                      @pos(67) let75;
                                      @pos(68) upd43;
                                    }
                                  }
                                  @pos(69) let76;
                                  let77;
                                  upd44;
                                  @pos(65) upd45;
                                }
                              }
                              @pos(64) upd46;
                            }
                          }
                          @pos(63) upd47;
                        }
                      }
                      @pos(70) upd48;
                      @pos(61) upd49;
                    }
                  }
                  @pos(60) upd50;
                }
              }
              @pos(59) upd51;
            }
          }
          @pos(58) upd52;
        }
      }
    }
  }
}
component max_pool2d_1x256x28x28() -> () {
  cells {
    ref x_48 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    ref x_49 = seq_mem_d4(32,1,256,28,28,1,9,5,5);
    __b4 = std_reg(32);
    __c4 = std_reg(32);
    __current_0 = std_reg(32);
    __m0 = std_reg(32);
    __max_0 = std_reg(32);
    __n0 = std_reg(32);
    __pool_x_0 = std_reg(32);
    __pool_y_0 = std_reg(32);
    __stride_x_0 = std_reg(32);
    __stride_y_0 = std_reg(32);
    __x4 = std_reg(32);
    __y4 = std_reg(32);
    add51 = std_add(32);
    add52 = std_add(32);
    add53 = std_add(32);
    add54 = std_add(32);
    add55 = std_add(32);
    add56 = std_add(32);
    add57 = std_add(32);
    add58 = std_add(32);
    bin_read22_0 = std_reg(32);
    bin_read23_0 = std_reg(32);
    const144 = std_const(32,0);
    const145 = std_const(32,0);
    const146 = std_const(32,0);
    const147 = std_const(32,255);
    const148 = std_const(32,0);
    const149 = std_const(32,27);
    const150 = std_const(32,0);
    const151 = std_const(32,27);
    const152 = std_const(32,2);
    const153 = std_const(32,2);
    const154 = std_const(32,0);
    const155 = std_const(32,1);
    const156 = std_const(32,0);
    const157 = std_const(32,1);
    const158 = std_const(32,1);
    const159 = std_const(32,1);
    const160 = std_const(32,1);
    const161 = std_const(32,1);
    const162 = std_const(32,1);
    const163 = std_const(32,1);
    gt0 = std_fp_sgt(32,16,16);
    le36 = std_le(32);
    le37 = std_le(32);
    le38 = std_le(32);
    le39 = std_le(32);
    le40 = std_le(32);
    le41 = std_le(32);
    mult_pipe12 = std_mult_pipe(32);
    mult_pipe13 = std_mult_pipe(32);
    slice48 = std_slice(32,1);
    slice49 = std_slice(32,9);
    slice50 = std_slice(32,6);
    slice51 = std_slice(32,6);
    slice52 = std_slice(32,1);
    slice53 = std_slice(32,9);
    slice54 = std_slice(32,6);
    slice55 = std_slice(32,6);
    slice56 = std_slice(32,1);
    slice57 = std_slice(32,9);
    slice58 = std_slice(32,5);
    slice59 = std_slice(32,5);
  }
  wires {
    comb group cond40 {
      le36.left = __b4.out;
      le36.right = const145.out;
    }
    comb group cond41 {
      le37.left = __c4.out;
      le37.right = const147.out;
    }
    comb group cond42 {
      le38.left = __y4.out;
      le38.right = const149.out;
    }
    comb group cond43 {
      le39.left = __x4.out;
      le39.right = const151.out;
    }
    comb group cond44 {
      le40.left = __m0.out;
      le40.right = const155.out;
    }
    comb group cond45 {
      le41.left = __n0.out;
      le41.right = const157.out;
    }
    comb group cond46 {
      gt0.left = __current_0.out;
      gt0.right = __max_0.out;
    }
    group let78<"static"=1> {
      __b4.in = const144.out;
      __b4.write_en = 1'd1;
      let78[done] = __b4.done;
    }
    group let79<"static"=1> {
      __c4.in = const146.out;
      __c4.write_en = 1'd1;
      let79[done] = __c4.done;
    }
    group let80<"static"=1> {
      __y4.in = const148.out;
      __y4.write_en = 1'd1;
      let80[done] = __y4.done;
    }
    group let81<"static"=1> {
      __x4.in = const150.out;
      __x4.write_en = 1'd1;
      let81[done] = __x4.done;
    }
    group let82<"static"=4> {
      bin_read22_0.in = mult_pipe12.out;
      bin_read22_0.write_en = mult_pipe12.done;
      let82[done] = bin_read22_0.done;
      mult_pipe12.left = __y4.out;
      mult_pipe12.right = const152.out;
      mult_pipe12.go = !mult_pipe12.done ? 1'd1;
    }
    group let83<"static"=1> {
      __stride_y_0.in = bin_read22_0.out;
      __stride_y_0.write_en = 1'd1;
      let83[done] = __stride_y_0.done;
    }
    group let84<"static"=4> {
      bin_read23_0.in = mult_pipe13.out;
      bin_read23_0.write_en = mult_pipe13.done;
      let84[done] = bin_read23_0.done;
      mult_pipe13.left = __x4.out;
      mult_pipe13.right = const153.out;
      mult_pipe13.go = !mult_pipe13.done ? 1'd1;
    }
    group let85<"static"=1> {
      __stride_x_0.in = bin_read23_0.out;
      __stride_x_0.write_en = 1'd1;
      let85[done] = __stride_x_0.done;
    }
    group let86<"static"=2> {
      __max_0.in = x_48.read_data;
      __max_0.write_en = x_48.read_done;
      let86[done] = __max_0.done;
      x_48.addr3 = slice51.out;
      slice51.in = __stride_x_0.out;
      x_48.addr2 = slice50.out;
      slice50.in = __stride_y_0.out;
      x_48.addr1 = slice49.out;
      slice49.in = __c4.out;
      x_48.addr0 = slice48.out;
      slice48.in = __b4.out;
      x_48.read_en = 1'd1;
    }
    group let87<"static"=1> {
      __m0.in = const154.out;
      __m0.write_en = 1'd1;
      let87[done] = __m0.done;
    }
    group let88<"static"=1> {
      __n0.in = const156.out;
      __n0.write_en = 1'd1;
      let88[done] = __n0.done;
    }
    group let89<"static"=1> {
      __pool_y_0.in = add51.out;
      __pool_y_0.write_en = 1'd1;
      let89[done] = __pool_y_0.done;
      add51.left = __stride_y_0.out;
      add51.right = __m0.out;
    }
    group let90<"static"=1> {
      __pool_x_0.in = add52.out;
      __pool_x_0.write_en = 1'd1;
      let90[done] = __pool_x_0.done;
      add52.left = __stride_x_0.out;
      add52.right = __n0.out;
    }
    group let91<"static"=2> {
      __current_0.in = x_48.read_data;
      __current_0.write_en = x_48.read_done;
      let91[done] = __current_0.done;
      x_48.addr3 = slice55.out;
      slice55.in = __pool_x_0.out;
      x_48.addr2 = slice54.out;
      slice54.in = __pool_y_0.out;
      x_48.addr1 = slice53.out;
      slice53.in = __c4.out;
      x_48.addr0 = slice52.out;
      slice52.in = __b4.out;
      x_48.read_en = 1'd1;
    }
    group upd53<"static"=1> {
      __max_0.write_en = 1'd1;
      __max_0.in = __current_0.out;
      upd53[done] = __max_0.done;
    }
    group upd54<"static"=1> {
      __n0.write_en = 1'd1;
      add53.left = __n0.out;
      add53.right = const158.out;
      __n0.in = add53.out;
      upd54[done] = __n0.done;
    }
    group upd55<"static"=1> {
      __m0.write_en = 1'd1;
      add54.left = __m0.out;
      add54.right = const159.out;
      __m0.in = add54.out;
      upd55[done] = __m0.done;
    }
    group upd56<"static"=1> {
      x_49.addr3 = slice59.out;
      slice59.in = __x4.out;
      x_49.addr2 = slice58.out;
      slice58.in = __y4.out;
      x_49.addr1 = slice57.out;
      slice57.in = __c4.out;
      x_49.addr0 = slice56.out;
      slice56.in = __b4.out;
      x_49.write_en = 1'd1;
      x_49.write_data = __max_0.out;
      upd56[done] = x_49.write_done;
    }
    group upd57<"static"=1> {
      __x4.write_en = 1'd1;
      add55.left = __x4.out;
      add55.right = const160.out;
      __x4.in = add55.out;
      upd57[done] = __x4.done;
    }
    group upd58<"static"=1> {
      __y4.write_en = 1'd1;
      add56.left = __y4.out;
      add56.right = const161.out;
      __y4.in = add56.out;
      upd58[done] = __y4.done;
    }
    group upd59<"static"=1> {
      __c4.write_en = 1'd1;
      add57.left = __c4.out;
      add57.right = const162.out;
      __c4.in = add57.out;
      upd59[done] = __c4.done;
    }
    group upd60<"static"=1> {
      __b4.write_en = 1'd1;
      add58.left = __b4.out;
      add58.right = const163.out;
      __b4.in = add58.out;
      upd60[done] = __b4.done;
    }
  }
  control {
    seq {
      @pos(71) let78;
      @bound(1) while le36.out with cond40 {
        seq {
          @pos(72) let79;
          @bound(256) while le37.out with cond41 {
            seq {
              @pos(73) let80;
              @bound(28) while le38.out with cond42 {
                seq {
                  @pos(74) let81;
                  @bound(28) while le39.out with cond43 {
                    seq {
                      par {
                        seq {
                          let82;
                          let83;
                        }
                        seq {
                          let84;
                          let85;
                        }
                      }
                      @pos(75) let86;
                      @pos(76) let87;
                      @bound(2) while le40.out with cond44 {
                        seq {
                          @pos(77) let88;
                          @bound(2) while le41.out with cond45 {
                            seq {
                              par {
                                @pos(78) let89;
                                @pos(79) let90;
                              }
                              @pos(80) let91;
                              if gt0.out with cond46 {
                                @pos(81) upd53;
                              }
                              @pos(77) upd54;
                            }
                          }
                          @pos(76) upd55;
                        }
                      }
                      @pos(82) upd56;
                      @pos(74) upd57;
                    }
                  }
                  @pos(73) upd58;
                }
              }
              @pos(72) upd59;
            }
          }
          @pos(71) upd60;
        }
      }
    }
  }
}
component relu_1x256x56x56() -> () {
  cells {
    ref x_37 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    ref x_38 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    __i3 = std_reg(1);
    __j3 = std_reg(9);
    __k5 = std_reg(6);
    __l1 = std_reg(6);
    add59 = std_add(6);
    add60 = std_add(6);
    add61 = std_add(9);
    add62 = std_add(1);
    const164 = std_const(1,0);
    const165 = std_const(1,0);
    const166 = std_const(9,0);
    const167 = std_const(9,255);
    const168 = std_const(6,0);
    const169 = std_const(6,55);
    const170 = std_const(6,0);
    const171 = std_const(6,55);
    const172 = std_const(6,1);
    const173 = std_const(6,1);
    const174 = std_const(9,1);
    const175 = std_const(1,1);
    fp_const8 = std_const(32,0);
    fp_const9 = std_const(32,0);
    gt1 = std_fp_sgt(32,16,16);
    le42 = std_le(1);
    le43 = std_le(9);
    le44 = std_le(6);
    le45 = std_le(6);
    x_37_read0_0 = std_reg(32);
    x_37_read1_0 = std_reg(32);
  }
  wires {
    comb group cond47 {
      le42.left = __i3.out;
      le42.right = const165.out;
    }
    comb group cond48 {
      le43.left = __j3.out;
      le43.right = const167.out;
    }
    comb group cond49 {
      le44.left = __k5.out;
      le44.right = const169.out;
    }
    comb group cond50 {
      le45.left = __l1.out;
      le45.right = const171.out;
    }
    comb group cond51 {
      gt1.left = x_37_read0_0.out;
      gt1.right = fp_const8.out;
    }
    group let92<"static"=1> {
      __i3.in = const164.out;
      __i3.write_en = 1'd1;
      let92[done] = __i3.done;
    }
    group let93<"static"=1> {
      __j3.in = const166.out;
      __j3.write_en = 1'd1;
      let93[done] = __j3.done;
    }
    group let94<"static"=1> {
      __k5.in = const168.out;
      __k5.write_en = 1'd1;
      let94[done] = __k5.done;
    }
    group let95<"static"=1> {
      __l1.in = const170.out;
      __l1.write_en = 1'd1;
      let95[done] = __l1.done;
    }
    group let96<"static"=2> {
      x_37_read0_0.in = x_37.read_data;
      x_37_read0_0.write_en = x_37.read_done;
      let96[done] = x_37_read0_0.done;
      x_37.addr3 = __l1.out;
      x_37.addr2 = __k5.out;
      x_37.addr1 = __j3.out;
      x_37.addr0 = __i3.out;
      x_37.read_en = 1'd1;
    }
    group let97<"static"=2> {
      x_37_read1_0.in = x_37.read_data;
      x_37_read1_0.write_en = x_37.read_done;
      let97[done] = x_37_read1_0.done;
      x_37.addr3 = __l1.out;
      x_37.addr2 = __k5.out;
      x_37.addr1 = __j3.out;
      x_37.addr0 = __i3.out;
      x_37.read_en = 1'd1;
    }
    group upd61<"static"=1> {
      x_38.addr3 = __l1.out;
      x_38.addr2 = __k5.out;
      x_38.addr1 = __j3.out;
      x_38.addr0 = __i3.out;
      x_38.write_en = 1'd1;
      x_38.write_data = x_37_read1_0.out;
      upd61[done] = x_38.write_done;
    }
    group upd62<"static"=1> {
      x_38.addr3 = __l1.out;
      x_38.addr2 = __k5.out;
      x_38.addr1 = __j3.out;
      x_38.addr0 = __i3.out;
      x_38.write_en = 1'd1;
      x_38.write_data = fp_const9.out;
      upd62[done] = x_38.write_done;
    }
    group upd63<"static"=1> {
      __l1.write_en = 1'd1;
      add59.left = __l1.out;
      add59.right = const172.out;
      __l1.in = add59.out;
      upd63[done] = __l1.done;
    }
    group upd64<"static"=1> {
      __k5.write_en = 1'd1;
      add60.left = __k5.out;
      add60.right = const173.out;
      __k5.in = add60.out;
      upd64[done] = __k5.done;
    }
    group upd65<"static"=1> {
      __j3.write_en = 1'd1;
      add61.left = __j3.out;
      add61.right = const174.out;
      __j3.in = add61.out;
      upd65[done] = __j3.done;
    }
    group upd66<"static"=1> {
      __i3.write_en = 1'd1;
      add62.left = __i3.out;
      add62.right = const175.out;
      __i3.in = add62.out;
      upd66[done] = __i3.done;
    }
  }
  control {
    seq {
      @pos(83) let92;
      @bound(1) while le42.out with cond47 {
        seq {
          @pos(84) let93;
          @bound(256) while le43.out with cond48 {
            seq {
              @pos(85) let94;
              @bound(56) while le44.out with cond49 {
                seq {
                  @pos(86) let95;
                  @bound(56) while le45.out with cond50 {
                    seq {
                      @pos(87) let96;
                      if gt1.out with cond51 {
                        seq {
                          @pos(88) let97;
                          @pos(89) upd61;
                        }
                      } else {
                        @pos(90) upd62;
                      }
                      @pos(86) upd63;
                    }
                  }
                  @pos(85) upd64;
                }
              }
              @pos(84) upd65;
            }
          }
          @pos(83) upd66;
        }
      }
    }
  }
}
component conv2d_1x64x224x224() -> () {
  cells {
    ref data = seq_mem_d4(32,1,3,224,224,1,2,8,8);
    ref x_12 = seq_mem_d4(32,64,3,3,3,7,2,2,2);
    ref x_13 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    __b5 = std_reg(32);
    __c5 = std_reg(32);
    __dx4 = std_reg(32);
    __dy4 = std_reg(32);
    __k6 = std_reg(32);
    __kernel_x_4 = std_reg(32);
    __kernel_y_4 = std_reg(32);
    __padded_tensor_val_4 = std_reg(32);
    __sum_4 = std_reg(32);
    __x5 = std_reg(32);
    __y5 = std_reg(32);
    add63 = std_add(32);
    add64 = std_add(32);
    add65 = std_fp_sadd(32,16,16);
    add66 = std_add(32);
    add67 = std_add(32);
    add68 = std_add(32);
    add69 = std_add(32);
    add70 = std_add(32);
    add71 = std_add(32);
    add72 = std_add(32);
    and12 = std_and(1);
    and13 = std_and(1);
    and14 = std_and(1);
    bin_read0_0 = std_reg(32);
    bin_read1_0 = std_reg(32);
    bin_read2_0 = std_reg(32);
    const176 = std_const(32,0);
    const177 = std_const(32,0);
    const178 = std_const(32,0);
    const179 = std_const(32,63);
    const180 = std_const(32,0);
    const181 = std_const(32,223);
    const182 = std_const(32,0);
    const183 = std_const(32,223);
    const184 = std_const(32,0);
    const185 = std_const(32,2);
    const186 = std_const(32,0);
    const187 = std_const(32,2);
    const188 = std_const(32,0);
    const189 = std_const(32,2);
    const190 = std_const(32,1);
    const191 = std_const(32,1);
    const192 = std_const(32,1);
    const193 = std_const(32,225);
    const194 = std_const(32,1);
    const195 = std_const(32,225);
    const196 = std_const(32,1);
    const197 = std_const(32,1);
    const198 = std_const(32,1);
    const199 = std_const(32,1);
    const200 = std_const(32,1);
    const201 = std_const(32,1);
    const202 = std_const(32,1);
    const203 = std_const(32,1);
    const204 = std_const(32,1);
    data_read0_0 = std_reg(32);
    fp_const10 = std_const(32,0);
    fp_const11 = std_const(32,0);
    ge8 = std_ge(32);
    ge9 = std_ge(32);
    le46 = std_le(32);
    le47 = std_le(32);
    le48 = std_le(32);
    le49 = std_le(32);
    le50 = std_le(32);
    le51 = std_le(32);
    le52 = std_le(32);
    lt8 = std_lt(32);
    lt9 = std_lt(32);
    mult_pipe14 = std_mult_pipe(32);
    mult_pipe15 = std_mult_pipe(32);
    mult_pipe16 = std_fp_smult_pipe(32,16,16);
    slice60 = std_slice(32,1);
    slice61 = std_slice(32,2);
    slice62 = std_slice(32,8);
    slice63 = std_slice(32,8);
    slice64 = std_slice(32,7);
    slice65 = std_slice(32,2);
    slice66 = std_slice(32,2);
    slice67 = std_slice(32,2);
    slice68 = std_slice(32,1);
    slice69 = std_slice(32,7);
    slice70 = std_slice(32,8);
    slice71 = std_slice(32,8);
    sub8 = std_sub(32);
    sub9 = std_sub(32);
    x_12_read0_0 = std_reg(32);
  }
  wires {
    comb group cond52 {
      le46.left = __b5.out;
      le46.right = const177.out;
    }
    comb group cond53 {
      le47.left = __c5.out;
      le47.right = const179.out;
    }
    comb group cond54 {
      le48.left = __y5.out;
      le48.right = const181.out;
    }
    comb group cond55 {
      le49.left = __x5.out;
      le49.right = const183.out;
    }
    comb group cond56 {
      le50.left = __k6.out;
      le50.right = const185.out;
    }
    comb group cond57 {
      le51.left = __dy4.out;
      le51.right = const187.out;
    }
    comb group cond58 {
      le52.left = __dx4.out;
      le52.right = const189.out;
    }
    comb group cond59 {
      and14.left = and13.out;
      and14.right = lt9.out;
      and13.left = and12.out;
      and13.right = ge9.out;
      and12.left = ge8.out;
      and12.right = lt8.out;
      ge8.left = __kernel_y_4.out;
      ge8.right = const192.out;
      lt8.left = __kernel_y_4.out;
      lt8.right = const193.out;
      ge9.left = __kernel_x_4.out;
      ge9.right = const194.out;
      lt9.left = __kernel_x_4.out;
      lt9.right = const195.out;
    }
    group let100<"static"=1> {
      __y5.in = const180.out;
      __y5.write_en = 1'd1;
      let100[done] = __y5.done;
    }
    group let101<"static"=1> {
      __x5.in = const182.out;
      __x5.write_en = 1'd1;
      let101[done] = __x5.done;
    }
    group let102<"static"=1> {
      __sum_4.in = fp_const10.out;
      __sum_4.write_en = 1'd1;
      let102[done] = __sum_4.done;
    }
    group let103<"static"=1> {
      __k6.in = const184.out;
      __k6.write_en = 1'd1;
      let103[done] = __k6.done;
    }
    group let104<"static"=1> {
      __dy4.in = const186.out;
      __dy4.write_en = 1'd1;
      let104[done] = __dy4.done;
    }
    group let105<"static"=1> {
      __dx4.in = const188.out;
      __dx4.write_en = 1'd1;
      let105[done] = __dx4.done;
    }
    group let106<"static"=4> {
      bin_read0_0.in = mult_pipe14.out;
      bin_read0_0.write_en = mult_pipe14.done;
      let106[done] = bin_read0_0.done;
      mult_pipe14.left = const190.out;
      mult_pipe14.right = __y5.out;
      mult_pipe14.go = !mult_pipe14.done ? 1'd1;
    }
    group let107<"static"=1> {
      __kernel_y_4.in = add63.out;
      __kernel_y_4.write_en = 1'd1;
      let107[done] = __kernel_y_4.done;
      add63.left = bin_read0_0.out;
      add63.right = __dy4.out;
    }
    group let108<"static"=4> {
      bin_read1_0.in = mult_pipe15.out;
      bin_read1_0.write_en = mult_pipe15.done;
      let108[done] = bin_read1_0.done;
      mult_pipe15.left = const191.out;
      mult_pipe15.right = __x5.out;
      mult_pipe15.go = !mult_pipe15.done ? 1'd1;
    }
    group let109<"static"=1> {
      __kernel_x_4.in = add64.out;
      __kernel_x_4.write_en = 1'd1;
      let109[done] = __kernel_x_4.done;
      add64.left = bin_read1_0.out;
      add64.right = __dx4.out;
    }
    group let110<"static"=1> {
      __padded_tensor_val_4.in = fp_const11.out;
      __padded_tensor_val_4.write_en = 1'd1;
      let110[done] = __padded_tensor_val_4.done;
    }
    group let111<"static"=2> {
      data_read0_0.in = data.read_data;
      data_read0_0.write_en = data.read_done;
      let111[done] = data_read0_0.done;
      data.addr3 = slice63.out;
      slice63.in = sub9.out;
      sub9.left = __kernel_x_4.out;
      sub9.right = const197.out;
      data.addr2 = slice62.out;
      slice62.in = sub8.out;
      sub8.left = __kernel_y_4.out;
      sub8.right = const196.out;
      data.addr1 = slice61.out;
      slice61.in = __k6.out;
      data.addr0 = slice60.out;
      slice60.in = __b5.out;
      data.read_en = 1'd1;
    }
    group let112<"static"=2> {
      x_12_read0_0.in = x_12.read_data;
      x_12_read0_0.write_en = x_12.read_done;
      let112[done] = x_12_read0_0.done;
      x_12.addr3 = slice67.out;
      slice67.in = __dx4.out;
      x_12.addr2 = slice66.out;
      slice66.in = __dy4.out;
      x_12.addr1 = slice65.out;
      slice65.in = __k6.out;
      x_12.addr0 = slice64.out;
      slice64.in = __c5.out;
      x_12.read_en = 1'd1;
    }
    group let113<"static"=4> {
      bin_read2_0.in = mult_pipe16.out;
      bin_read2_0.write_en = mult_pipe16.done;
      let113[done] = bin_read2_0.done;
      mult_pipe16.left = __padded_tensor_val_4.out;
      mult_pipe16.right = x_12_read0_0.out;
      mult_pipe16.go = !mult_pipe16.done ? 1'd1;
    }
    group let98<"static"=1> {
      __b5.in = const176.out;
      __b5.write_en = 1'd1;
      let98[done] = __b5.done;
    }
    group let99<"static"=1> {
      __c5.in = const178.out;
      __c5.write_en = 1'd1;
      let99[done] = __c5.done;
    }
    group upd67<"static"=1> {
      __padded_tensor_val_4.write_en = 1'd1;
      __padded_tensor_val_4.in = data_read0_0.out;
      upd67[done] = __padded_tensor_val_4.done;
    }
    group upd68<"static"=1> {
      __sum_4.write_en = 1'd1;
      add65.left = __sum_4.out;
      add65.right = bin_read2_0.out;
      __sum_4.in = add65.out;
      upd68[done] = __sum_4.done;
    }
    group upd69<"static"=1> {
      __dx4.write_en = 1'd1;
      add66.left = __dx4.out;
      add66.right = const198.out;
      __dx4.in = add66.out;
      upd69[done] = __dx4.done;
    }
    group upd70<"static"=1> {
      __dy4.write_en = 1'd1;
      add67.left = __dy4.out;
      add67.right = const199.out;
      __dy4.in = add67.out;
      upd70[done] = __dy4.done;
    }
    group upd71<"static"=1> {
      __k6.write_en = 1'd1;
      add68.left = __k6.out;
      add68.right = const200.out;
      __k6.in = add68.out;
      upd71[done] = __k6.done;
    }
    group upd72<"static"=1> {
      x_13.addr3 = slice71.out;
      slice71.in = __x5.out;
      x_13.addr2 = slice70.out;
      slice70.in = __y5.out;
      x_13.addr1 = slice69.out;
      slice69.in = __c5.out;
      x_13.addr0 = slice68.out;
      slice68.in = __b5.out;
      x_13.write_en = 1'd1;
      x_13.write_data = __sum_4.out;
      upd72[done] = x_13.write_done;
    }
    group upd73<"static"=1> {
      __x5.write_en = 1'd1;
      add69.left = __x5.out;
      add69.right = const201.out;
      __x5.in = add69.out;
      upd73[done] = __x5.done;
    }
    group upd74<"static"=1> {
      __y5.write_en = 1'd1;
      add70.left = __y5.out;
      add70.right = const202.out;
      __y5.in = add70.out;
      upd74[done] = __y5.done;
    }
    group upd75<"static"=1> {
      __c5.write_en = 1'd1;
      add71.left = __c5.out;
      add71.right = const203.out;
      __c5.in = add71.out;
      upd75[done] = __c5.done;
    }
    group upd76<"static"=1> {
      __b5.write_en = 1'd1;
      add72.left = __b5.out;
      add72.right = const204.out;
      __b5.in = add72.out;
      upd76[done] = __b5.done;
    }
  }
  control {
    seq {
      @pos(91) let98;
      @bound(1) while le46.out with cond52 {
        seq {
          @pos(92) let99;
          @bound(64) while le47.out with cond53 {
            seq {
              @pos(93) let100;
              @bound(224) while le48.out with cond54 {
                seq {
                  @pos(94) let101;
                  @bound(224) while le49.out with cond55 {
                    seq {
                      @pos(95) let102;
                      @pos(96) let103;
                      @bound(3) while le50.out with cond56 {
                        seq {
                          @pos(97) let104;
                          @bound(3) while le51.out with cond57 {
                            seq {
                              @pos(98) let105;
                              @bound(3) while le52.out with cond58 {
                                seq {
                                  par {
                                    seq {
                                      let106;
                                      let107;
                                    }
                                    seq {
                                      let108;
                                      let109;
                                    }
                                  }
                                  @pos(99) let110;
                                  if and14.out with cond59 {
                                    seq {
                                      @pos(100) let111;
                                      @pos(101) upd67;
                                    }
                                  }
                                  @pos(102) let112;
                                  let113;
                                  upd68;
                                  @pos(98) upd69;
                                }
                              }
                              @pos(97) upd70;
                            }
                          }
                          @pos(96) upd71;
                        }
                      }
                      @pos(103) upd72;
                      @pos(94) upd73;
                    }
                  }
                  @pos(93) upd74;
                }
              }
              @pos(92) upd75;
            }
          }
          @pos(91) upd76;
        }
      }
    }
  }
}
component bias_add_1x64x224x224() -> () {
  cells {
    ref x_13 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    ref x_14 = seq_mem_d1(32,64,7);
    ref x_15 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    __i4 = std_reg(1);
    __j4 = std_reg(7);
    __k7 = std_reg(8);
    __l2 = std_reg(8);
    add73 = std_fp_sadd(32,16,16);
    add74 = std_add(8);
    add75 = std_add(8);
    add76 = std_add(7);
    add77 = std_add(1);
    const205 = std_const(1,0);
    const206 = std_const(1,0);
    const207 = std_const(7,0);
    const208 = std_const(7,63);
    const209 = std_const(8,0);
    const210 = std_const(8,223);
    const211 = std_const(8,0);
    const212 = std_const(8,223);
    const213 = std_const(8,1);
    const214 = std_const(8,1);
    const215 = std_const(7,1);
    const216 = std_const(1,1);
    le53 = std_le(1);
    le54 = std_le(7);
    le55 = std_le(8);
    le56 = std_le(8);
    x_13_read0_0 = std_reg(32);
    x_14_read0_0 = std_reg(32);
  }
  wires {
    comb group cond60 {
      le53.left = __i4.out;
      le53.right = const206.out;
    }
    comb group cond61 {
      le54.left = __j4.out;
      le54.right = const208.out;
    }
    comb group cond62 {
      le55.left = __k7.out;
      le55.right = const210.out;
    }
    comb group cond63 {
      le56.left = __l2.out;
      le56.right = const212.out;
    }
    group let114<"static"=1> {
      __i4.in = const205.out;
      __i4.write_en = 1'd1;
      let114[done] = __i4.done;
    }
    group let115<"static"=1> {
      __j4.in = const207.out;
      __j4.write_en = 1'd1;
      let115[done] = __j4.done;
    }
    group let116<"static"=1> {
      __k7.in = const209.out;
      __k7.write_en = 1'd1;
      let116[done] = __k7.done;
    }
    group let117<"static"=1> {
      __l2.in = const211.out;
      __l2.write_en = 1'd1;
      let117[done] = __l2.done;
    }
    group let118<"static"=2> {
      x_13_read0_0.in = x_13.read_data;
      x_13_read0_0.write_en = x_13.read_done;
      let118[done] = x_13_read0_0.done;
      x_13.addr3 = __l2.out;
      x_13.addr2 = __k7.out;
      x_13.addr1 = __j4.out;
      x_13.addr0 = __i4.out;
      x_13.read_en = 1'd1;
    }
    group let119<"static"=2> {
      x_14_read0_0.in = x_14.read_data;
      x_14_read0_0.write_en = x_14.read_done;
      let119[done] = x_14_read0_0.done;
      x_14.addr0 = __j4.out;
      x_14.read_en = 1'd1;
    }
    group upd77<"static"=1> {
      x_15.addr3 = __l2.out;
      x_15.addr2 = __k7.out;
      x_15.addr1 = __j4.out;
      x_15.addr0 = __i4.out;
      x_15.write_en = 1'd1;
      add73.left = x_13_read0_0.out;
      add73.right = x_14_read0_0.out;
      x_15.write_data = add73.out;
      upd77[done] = x_15.write_done;
    }
    group upd78<"static"=1> {
      __l2.write_en = 1'd1;
      add74.left = __l2.out;
      add74.right = const213.out;
      __l2.in = add74.out;
      upd78[done] = __l2.done;
    }
    group upd79<"static"=1> {
      __k7.write_en = 1'd1;
      add75.left = __k7.out;
      add75.right = const214.out;
      __k7.in = add75.out;
      upd79[done] = __k7.done;
    }
    group upd80<"static"=1> {
      __j4.write_en = 1'd1;
      add76.left = __j4.out;
      add76.right = const215.out;
      __j4.in = add76.out;
      upd80[done] = __j4.done;
    }
    group upd81<"static"=1> {
      __i4.write_en = 1'd1;
      add77.left = __i4.out;
      add77.right = const216.out;
      __i4.in = add77.out;
      upd81[done] = __i4.done;
    }
  }
  control {
    seq {
      @pos(104) let114;
      @bound(1) while le53.out with cond60 {
        seq {
          @pos(105) let115;
          @bound(64) while le54.out with cond61 {
            seq {
              @pos(106) let116;
              @bound(224) while le55.out with cond62 {
                seq {
                  @pos(107) let117;
                  @bound(224) while le56.out with cond63 {
                    seq {
                      par {
                        @pos(108) let118;
                        @pos(109) let119;
                      }
                      @pos(110) upd77;
                      @pos(107) upd78;
                    }
                  }
                  @pos(106) upd79;
                }
              }
              @pos(105) upd80;
            }
          }
          @pos(104) upd81;
        }
      }
    }
  }
}
component relu_1x512x28x28() -> () {
  cells {
    ref x_53 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    ref x_54 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    __i5 = std_reg(1);
    __j5 = std_reg(10);
    __k8 = std_reg(5);
    __l3 = std_reg(5);
    add78 = std_add(5);
    add79 = std_add(5);
    add80 = std_add(10);
    add81 = std_add(1);
    const217 = std_const(1,0);
    const218 = std_const(1,0);
    const219 = std_const(10,0);
    const220 = std_const(10,511);
    const221 = std_const(5,0);
    const222 = std_const(5,27);
    const223 = std_const(5,0);
    const224 = std_const(5,27);
    const225 = std_const(5,1);
    const226 = std_const(5,1);
    const227 = std_const(10,1);
    const228 = std_const(1,1);
    fp_const12 = std_const(32,0);
    fp_const13 = std_const(32,0);
    gt2 = std_fp_sgt(32,16,16);
    le57 = std_le(1);
    le58 = std_le(10);
    le59 = std_le(5);
    le60 = std_le(5);
    x_53_read0_0 = std_reg(32);
    x_53_read1_0 = std_reg(32);
  }
  wires {
    comb group cond64 {
      le57.left = __i5.out;
      le57.right = const218.out;
    }
    comb group cond65 {
      le58.left = __j5.out;
      le58.right = const220.out;
    }
    comb group cond66 {
      le59.left = __k8.out;
      le59.right = const222.out;
    }
    comb group cond67 {
      le60.left = __l3.out;
      le60.right = const224.out;
    }
    comb group cond68 {
      gt2.left = x_53_read0_0.out;
      gt2.right = fp_const12.out;
    }
    group let120<"static"=1> {
      __i5.in = const217.out;
      __i5.write_en = 1'd1;
      let120[done] = __i5.done;
    }
    group let121<"static"=1> {
      __j5.in = const219.out;
      __j5.write_en = 1'd1;
      let121[done] = __j5.done;
    }
    group let122<"static"=1> {
      __k8.in = const221.out;
      __k8.write_en = 1'd1;
      let122[done] = __k8.done;
    }
    group let123<"static"=1> {
      __l3.in = const223.out;
      __l3.write_en = 1'd1;
      let123[done] = __l3.done;
    }
    group let124<"static"=2> {
      x_53_read0_0.in = x_53.read_data;
      x_53_read0_0.write_en = x_53.read_done;
      let124[done] = x_53_read0_0.done;
      x_53.addr3 = __l3.out;
      x_53.addr2 = __k8.out;
      x_53.addr1 = __j5.out;
      x_53.addr0 = __i5.out;
      x_53.read_en = 1'd1;
    }
    group let125<"static"=2> {
      x_53_read1_0.in = x_53.read_data;
      x_53_read1_0.write_en = x_53.read_done;
      let125[done] = x_53_read1_0.done;
      x_53.addr3 = __l3.out;
      x_53.addr2 = __k8.out;
      x_53.addr1 = __j5.out;
      x_53.addr0 = __i5.out;
      x_53.read_en = 1'd1;
    }
    group upd82<"static"=1> {
      x_54.addr3 = __l3.out;
      x_54.addr2 = __k8.out;
      x_54.addr1 = __j5.out;
      x_54.addr0 = __i5.out;
      x_54.write_en = 1'd1;
      x_54.write_data = x_53_read1_0.out;
      upd82[done] = x_54.write_done;
    }
    group upd83<"static"=1> {
      x_54.addr3 = __l3.out;
      x_54.addr2 = __k8.out;
      x_54.addr1 = __j5.out;
      x_54.addr0 = __i5.out;
      x_54.write_en = 1'd1;
      x_54.write_data = fp_const13.out;
      upd83[done] = x_54.write_done;
    }
    group upd84<"static"=1> {
      __l3.write_en = 1'd1;
      add78.left = __l3.out;
      add78.right = const225.out;
      __l3.in = add78.out;
      upd84[done] = __l3.done;
    }
    group upd85<"static"=1> {
      __k8.write_en = 1'd1;
      add79.left = __k8.out;
      add79.right = const226.out;
      __k8.in = add79.out;
      upd85[done] = __k8.done;
    }
    group upd86<"static"=1> {
      __j5.write_en = 1'd1;
      add80.left = __j5.out;
      add80.right = const227.out;
      __j5.in = add80.out;
      upd86[done] = __j5.done;
    }
    group upd87<"static"=1> {
      __i5.write_en = 1'd1;
      add81.left = __i5.out;
      add81.right = const228.out;
      __i5.in = add81.out;
      upd87[done] = __i5.done;
    }
  }
  control {
    seq {
      @pos(111) let120;
      @bound(1) while le57.out with cond64 {
        seq {
          @pos(112) let121;
          @bound(512) while le58.out with cond65 {
            seq {
              @pos(113) let122;
              @bound(28) while le59.out with cond66 {
                seq {
                  @pos(114) let123;
                  @bound(28) while le60.out with cond67 {
                    seq {
                      @pos(115) let124;
                      if gt2.out with cond68 {
                        seq {
                          @pos(116) let125;
                          @pos(117) upd82;
                        }
                      } else {
                        @pos(118) upd83;
                      }
                      @pos(114) upd84;
                    }
                  }
                  @pos(113) upd85;
                }
              }
              @pos(112) upd86;
            }
          }
          @pos(111) upd87;
        }
      }
    }
  }
}
component bias_add_1x512x14x14() -> () {
  cells {
    ref x_67 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    ref x_68 = seq_mem_d1(32,512,10);
    ref x_69 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    __i6 = std_reg(1);
    __j6 = std_reg(10);
    __k9 = std_reg(4);
    __l4 = std_reg(4);
    add82 = std_fp_sadd(32,16,16);
    add83 = std_add(4);
    add84 = std_add(4);
    add85 = std_add(10);
    add86 = std_add(1);
    const229 = std_const(1,0);
    const230 = std_const(1,0);
    const231 = std_const(10,0);
    const232 = std_const(10,511);
    const233 = std_const(4,0);
    const234 = std_const(4,13);
    const235 = std_const(4,0);
    const236 = std_const(4,13);
    const237 = std_const(4,1);
    const238 = std_const(4,1);
    const239 = std_const(10,1);
    const240 = std_const(1,1);
    le61 = std_le(1);
    le62 = std_le(10);
    le63 = std_le(4);
    le64 = std_le(4);
    x_67_read0_0 = std_reg(32);
    x_68_read0_0 = std_reg(32);
  }
  wires {
    comb group cond69 {
      le61.left = __i6.out;
      le61.right = const230.out;
    }
    comb group cond70 {
      le62.left = __j6.out;
      le62.right = const232.out;
    }
    comb group cond71 {
      le63.left = __k9.out;
      le63.right = const234.out;
    }
    comb group cond72 {
      le64.left = __l4.out;
      le64.right = const236.out;
    }
    group let126<"static"=1> {
      __i6.in = const229.out;
      __i6.write_en = 1'd1;
      let126[done] = __i6.done;
    }
    group let127<"static"=1> {
      __j6.in = const231.out;
      __j6.write_en = 1'd1;
      let127[done] = __j6.done;
    }
    group let128<"static"=1> {
      __k9.in = const233.out;
      __k9.write_en = 1'd1;
      let128[done] = __k9.done;
    }
    group let129<"static"=1> {
      __l4.in = const235.out;
      __l4.write_en = 1'd1;
      let129[done] = __l4.done;
    }
    group let130<"static"=2> {
      x_67_read0_0.in = x_67.read_data;
      x_67_read0_0.write_en = x_67.read_done;
      let130[done] = x_67_read0_0.done;
      x_67.addr3 = __l4.out;
      x_67.addr2 = __k9.out;
      x_67.addr1 = __j6.out;
      x_67.addr0 = __i6.out;
      x_67.read_en = 1'd1;
    }
    group let131<"static"=2> {
      x_68_read0_0.in = x_68.read_data;
      x_68_read0_0.write_en = x_68.read_done;
      let131[done] = x_68_read0_0.done;
      x_68.addr0 = __j6.out;
      x_68.read_en = 1'd1;
    }
    group upd88<"static"=1> {
      x_69.addr3 = __l4.out;
      x_69.addr2 = __k9.out;
      x_69.addr1 = __j6.out;
      x_69.addr0 = __i6.out;
      x_69.write_en = 1'd1;
      add82.left = x_67_read0_0.out;
      add82.right = x_68_read0_0.out;
      x_69.write_data = add82.out;
      upd88[done] = x_69.write_done;
    }
    group upd89<"static"=1> {
      __l4.write_en = 1'd1;
      add83.left = __l4.out;
      add83.right = const237.out;
      __l4.in = add83.out;
      upd89[done] = __l4.done;
    }
    group upd90<"static"=1> {
      __k9.write_en = 1'd1;
      add84.left = __k9.out;
      add84.right = const238.out;
      __k9.in = add84.out;
      upd90[done] = __k9.done;
    }
    group upd91<"static"=1> {
      __j6.write_en = 1'd1;
      add85.left = __j6.out;
      add85.right = const239.out;
      __j6.in = add85.out;
      upd91[done] = __j6.done;
    }
    group upd92<"static"=1> {
      __i6.write_en = 1'd1;
      add86.left = __i6.out;
      add86.right = const240.out;
      __i6.in = add86.out;
      upd92[done] = __i6.done;
    }
  }
  control {
    seq {
      @pos(119) let126;
      @bound(1) while le61.out with cond69 {
        seq {
          @pos(120) let127;
          @bound(512) while le62.out with cond70 {
            seq {
              @pos(121) let128;
              @bound(14) while le63.out with cond71 {
                seq {
                  @pos(122) let129;
                  @bound(14) while le64.out with cond72 {
                    seq {
                      par {
                        @pos(123) let130;
                        @pos(124) let131;
                      }
                      @pos(125) upd88;
                      @pos(122) upd89;
                    }
                  }
                  @pos(121) upd90;
                }
              }
              @pos(120) upd91;
            }
          }
          @pos(119) upd92;
        }
      }
    }
  }
}
component max_pool2d_1x64x112x112() -> () {
  cells {
    ref x_21 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    ref x_22 = seq_mem_d4(32,1,64,112,112,1,7,7,7);
    __b6 = std_reg(32);
    __c6 = std_reg(32);
    __current_1 = std_reg(32);
    __m1 = std_reg(32);
    __max_1 = std_reg(32);
    __n1 = std_reg(32);
    __pool_x_1 = std_reg(32);
    __pool_y_1 = std_reg(32);
    __stride_x_1 = std_reg(32);
    __stride_y_1 = std_reg(32);
    __x6 = std_reg(32);
    __y6 = std_reg(32);
    add87 = std_add(32);
    add88 = std_add(32);
    add89 = std_add(32);
    add90 = std_add(32);
    add91 = std_add(32);
    add92 = std_add(32);
    add93 = std_add(32);
    add94 = std_add(32);
    bin_read6_0 = std_reg(32);
    bin_read7_0 = std_reg(32);
    const241 = std_const(32,0);
    const242 = std_const(32,0);
    const243 = std_const(32,0);
    const244 = std_const(32,63);
    const245 = std_const(32,0);
    const246 = std_const(32,111);
    const247 = std_const(32,0);
    const248 = std_const(32,111);
    const249 = std_const(32,2);
    const250 = std_const(32,2);
    const251 = std_const(32,0);
    const252 = std_const(32,1);
    const253 = std_const(32,0);
    const254 = std_const(32,1);
    const255 = std_const(32,1);
    const256 = std_const(32,1);
    const257 = std_const(32,1);
    const258 = std_const(32,1);
    const259 = std_const(32,1);
    const260 = std_const(32,1);
    gt3 = std_fp_sgt(32,16,16);
    le65 = std_le(32);
    le66 = std_le(32);
    le67 = std_le(32);
    le68 = std_le(32);
    le69 = std_le(32);
    le70 = std_le(32);
    mult_pipe17 = std_mult_pipe(32);
    mult_pipe18 = std_mult_pipe(32);
    slice72 = std_slice(32,1);
    slice73 = std_slice(32,7);
    slice74 = std_slice(32,8);
    slice75 = std_slice(32,8);
    slice76 = std_slice(32,1);
    slice77 = std_slice(32,7);
    slice78 = std_slice(32,8);
    slice79 = std_slice(32,8);
    slice80 = std_slice(32,1);
    slice81 = std_slice(32,7);
    slice82 = std_slice(32,7);
    slice83 = std_slice(32,7);
  }
  wires {
    comb group cond73 {
      le65.left = __b6.out;
      le65.right = const242.out;
    }
    comb group cond74 {
      le66.left = __c6.out;
      le66.right = const244.out;
    }
    comb group cond75 {
      le67.left = __y6.out;
      le67.right = const246.out;
    }
    comb group cond76 {
      le68.left = __x6.out;
      le68.right = const248.out;
    }
    comb group cond77 {
      le69.left = __m1.out;
      le69.right = const252.out;
    }
    comb group cond78 {
      le70.left = __n1.out;
      le70.right = const254.out;
    }
    comb group cond79 {
      gt3.left = __current_1.out;
      gt3.right = __max_1.out;
    }
    group let132<"static"=1> {
      __b6.in = const241.out;
      __b6.write_en = 1'd1;
      let132[done] = __b6.done;
    }
    group let133<"static"=1> {
      __c6.in = const243.out;
      __c6.write_en = 1'd1;
      let133[done] = __c6.done;
    }
    group let134<"static"=1> {
      __y6.in = const245.out;
      __y6.write_en = 1'd1;
      let134[done] = __y6.done;
    }
    group let135<"static"=1> {
      __x6.in = const247.out;
      __x6.write_en = 1'd1;
      let135[done] = __x6.done;
    }
    group let136<"static"=4> {
      bin_read6_0.in = mult_pipe17.out;
      bin_read6_0.write_en = mult_pipe17.done;
      let136[done] = bin_read6_0.done;
      mult_pipe17.left = __y6.out;
      mult_pipe17.right = const249.out;
      mult_pipe17.go = !mult_pipe17.done ? 1'd1;
    }
    group let137<"static"=1> {
      __stride_y_1.in = bin_read6_0.out;
      __stride_y_1.write_en = 1'd1;
      let137[done] = __stride_y_1.done;
    }
    group let138<"static"=4> {
      bin_read7_0.in = mult_pipe18.out;
      bin_read7_0.write_en = mult_pipe18.done;
      let138[done] = bin_read7_0.done;
      mult_pipe18.left = __x6.out;
      mult_pipe18.right = const250.out;
      mult_pipe18.go = !mult_pipe18.done ? 1'd1;
    }
    group let139<"static"=1> {
      __stride_x_1.in = bin_read7_0.out;
      __stride_x_1.write_en = 1'd1;
      let139[done] = __stride_x_1.done;
    }
    group let140<"static"=2> {
      __max_1.in = x_21.read_data;
      __max_1.write_en = x_21.read_done;
      let140[done] = __max_1.done;
      x_21.addr3 = slice75.out;
      slice75.in = __stride_x_1.out;
      x_21.addr2 = slice74.out;
      slice74.in = __stride_y_1.out;
      x_21.addr1 = slice73.out;
      slice73.in = __c6.out;
      x_21.addr0 = slice72.out;
      slice72.in = __b6.out;
      x_21.read_en = 1'd1;
    }
    group let141<"static"=1> {
      __m1.in = const251.out;
      __m1.write_en = 1'd1;
      let141[done] = __m1.done;
    }
    group let142<"static"=1> {
      __n1.in = const253.out;
      __n1.write_en = 1'd1;
      let142[done] = __n1.done;
    }
    group let143<"static"=1> {
      __pool_y_1.in = add87.out;
      __pool_y_1.write_en = 1'd1;
      let143[done] = __pool_y_1.done;
      add87.left = __stride_y_1.out;
      add87.right = __m1.out;
    }
    group let144<"static"=1> {
      __pool_x_1.in = add88.out;
      __pool_x_1.write_en = 1'd1;
      let144[done] = __pool_x_1.done;
      add88.left = __stride_x_1.out;
      add88.right = __n1.out;
    }
    group let145<"static"=2> {
      __current_1.in = x_21.read_data;
      __current_1.write_en = x_21.read_done;
      let145[done] = __current_1.done;
      x_21.addr3 = slice79.out;
      slice79.in = __pool_x_1.out;
      x_21.addr2 = slice78.out;
      slice78.in = __pool_y_1.out;
      x_21.addr1 = slice77.out;
      slice77.in = __c6.out;
      x_21.addr0 = slice76.out;
      slice76.in = __b6.out;
      x_21.read_en = 1'd1;
    }
    group upd100<"static"=1> {
      __b6.write_en = 1'd1;
      add94.left = __b6.out;
      add94.right = const260.out;
      __b6.in = add94.out;
      upd100[done] = __b6.done;
    }
    group upd93<"static"=1> {
      __max_1.write_en = 1'd1;
      __max_1.in = __current_1.out;
      upd93[done] = __max_1.done;
    }
    group upd94<"static"=1> {
      __n1.write_en = 1'd1;
      add89.left = __n1.out;
      add89.right = const255.out;
      __n1.in = add89.out;
      upd94[done] = __n1.done;
    }
    group upd95<"static"=1> {
      __m1.write_en = 1'd1;
      add90.left = __m1.out;
      add90.right = const256.out;
      __m1.in = add90.out;
      upd95[done] = __m1.done;
    }
    group upd96<"static"=1> {
      x_22.addr3 = slice83.out;
      slice83.in = __x6.out;
      x_22.addr2 = slice82.out;
      slice82.in = __y6.out;
      x_22.addr1 = slice81.out;
      slice81.in = __c6.out;
      x_22.addr0 = slice80.out;
      slice80.in = __b6.out;
      x_22.write_en = 1'd1;
      x_22.write_data = __max_1.out;
      upd96[done] = x_22.write_done;
    }
    group upd97<"static"=1> {
      __x6.write_en = 1'd1;
      add91.left = __x6.out;
      add91.right = const257.out;
      __x6.in = add91.out;
      upd97[done] = __x6.done;
    }
    group upd98<"static"=1> {
      __y6.write_en = 1'd1;
      add92.left = __y6.out;
      add92.right = const258.out;
      __y6.in = add92.out;
      upd98[done] = __y6.done;
    }
    group upd99<"static"=1> {
      __c6.write_en = 1'd1;
      add93.left = __c6.out;
      add93.right = const259.out;
      __c6.in = add93.out;
      upd99[done] = __c6.done;
    }
  }
  control {
    seq {
      @pos(126) let132;
      @bound(1) while le65.out with cond73 {
        seq {
          @pos(127) let133;
          @bound(64) while le66.out with cond74 {
            seq {
              @pos(128) let134;
              @bound(112) while le67.out with cond75 {
                seq {
                  @pos(129) let135;
                  @bound(112) while le68.out with cond76 {
                    seq {
                      par {
                        seq {
                          let136;
                          let137;
                        }
                        seq {
                          let138;
                          let139;
                        }
                      }
                      @pos(130) let140;
                      @pos(131) let141;
                      @bound(2) while le69.out with cond77 {
                        seq {
                          @pos(132) let142;
                          @bound(2) while le70.out with cond78 {
                            seq {
                              par {
                                @pos(133) let143;
                                @pos(134) let144;
                              }
                              @pos(135) let145;
                              if gt3.out with cond79 {
                                @pos(136) upd93;
                              }
                              @pos(132) upd94;
                            }
                          }
                          @pos(131) upd95;
                        }
                      }
                      @pos(137) upd96;
                      @pos(129) upd97;
                    }
                  }
                  @pos(128) upd98;
                }
              }
              @pos(127) upd99;
            }
          }
          @pos(126) upd100;
        }
      }
    }
  }
}
component conv2d_1x256x56x56_1() -> () {
  cells {
    ref x_38 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    ref x_39 = seq_mem_d4(32,256,256,3,3,9,9,2,2);
    ref x_40 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    __b7 = std_reg(32);
    __c7 = std_reg(32);
    __dx5 = std_reg(32);
    __dy5 = std_reg(32);
    __k10 = std_reg(32);
    __kernel_x_5 = std_reg(32);
    __kernel_y_5 = std_reg(32);
    __padded_tensor_val_5 = std_reg(32);
    __sum_5 = std_reg(32);
    __x7 = std_reg(32);
    __y7 = std_reg(32);
    add100 = std_add(32);
    add101 = std_add(32);
    add102 = std_add(32);
    add103 = std_add(32);
    add104 = std_add(32);
    add95 = std_add(32);
    add96 = std_add(32);
    add97 = std_fp_sadd(32,16,16);
    add98 = std_add(32);
    add99 = std_add(32);
    and15 = std_and(1);
    and16 = std_and(1);
    and17 = std_and(1);
    bin_read19_0 = std_reg(32);
    bin_read20_0 = std_reg(32);
    bin_read21_0 = std_reg(32);
    const261 = std_const(32,0);
    const262 = std_const(32,0);
    const263 = std_const(32,0);
    const264 = std_const(32,255);
    const265 = std_const(32,0);
    const266 = std_const(32,55);
    const267 = std_const(32,0);
    const268 = std_const(32,55);
    const269 = std_const(32,0);
    const270 = std_const(32,255);
    const271 = std_const(32,0);
    const272 = std_const(32,2);
    const273 = std_const(32,0);
    const274 = std_const(32,2);
    const275 = std_const(32,1);
    const276 = std_const(32,1);
    const277 = std_const(32,1);
    const278 = std_const(32,57);
    const279 = std_const(32,1);
    const280 = std_const(32,57);
    const281 = std_const(32,1);
    const282 = std_const(32,1);
    const283 = std_const(32,1);
    const284 = std_const(32,1);
    const285 = std_const(32,1);
    const286 = std_const(32,1);
    const287 = std_const(32,1);
    const288 = std_const(32,1);
    const289 = std_const(32,1);
    fp_const14 = std_const(32,0);
    fp_const15 = std_const(32,0);
    ge10 = std_ge(32);
    ge11 = std_ge(32);
    le71 = std_le(32);
    le72 = std_le(32);
    le73 = std_le(32);
    le74 = std_le(32);
    le75 = std_le(32);
    le76 = std_le(32);
    le77 = std_le(32);
    lt10 = std_lt(32);
    lt11 = std_lt(32);
    mult_pipe19 = std_mult_pipe(32);
    mult_pipe20 = std_mult_pipe(32);
    mult_pipe21 = std_fp_smult_pipe(32,16,16);
    slice84 = std_slice(32,1);
    slice85 = std_slice(32,9);
    slice86 = std_slice(32,6);
    slice87 = std_slice(32,6);
    slice88 = std_slice(32,9);
    slice89 = std_slice(32,9);
    slice90 = std_slice(32,2);
    slice91 = std_slice(32,2);
    slice92 = std_slice(32,1);
    slice93 = std_slice(32,9);
    slice94 = std_slice(32,6);
    slice95 = std_slice(32,6);
    sub10 = std_sub(32);
    sub11 = std_sub(32);
    x_38_read0_0 = std_reg(32);
    x_39_read0_0 = std_reg(32);
  }
  wires {
    comb group cond80 {
      le71.left = __b7.out;
      le71.right = const262.out;
    }
    comb group cond81 {
      le72.left = __c7.out;
      le72.right = const264.out;
    }
    comb group cond82 {
      le73.left = __y7.out;
      le73.right = const266.out;
    }
    comb group cond83 {
      le74.left = __x7.out;
      le74.right = const268.out;
    }
    comb group cond84 {
      le75.left = __k10.out;
      le75.right = const270.out;
    }
    comb group cond85 {
      le76.left = __dy5.out;
      le76.right = const272.out;
    }
    comb group cond86 {
      le77.left = __dx5.out;
      le77.right = const274.out;
    }
    comb group cond87 {
      and17.left = and16.out;
      and17.right = lt11.out;
      and16.left = and15.out;
      and16.right = ge11.out;
      and15.left = ge10.out;
      and15.right = lt10.out;
      ge10.left = __kernel_y_5.out;
      ge10.right = const277.out;
      lt10.left = __kernel_y_5.out;
      lt10.right = const278.out;
      ge11.left = __kernel_x_5.out;
      ge11.right = const279.out;
      lt11.left = __kernel_x_5.out;
      lt11.right = const280.out;
    }
    group let146<"static"=1> {
      __b7.in = const261.out;
      __b7.write_en = 1'd1;
      let146[done] = __b7.done;
    }
    group let147<"static"=1> {
      __c7.in = const263.out;
      __c7.write_en = 1'd1;
      let147[done] = __c7.done;
    }
    group let148<"static"=1> {
      __y7.in = const265.out;
      __y7.write_en = 1'd1;
      let148[done] = __y7.done;
    }
    group let149<"static"=1> {
      __x7.in = const267.out;
      __x7.write_en = 1'd1;
      let149[done] = __x7.done;
    }
    group let150<"static"=1> {
      __sum_5.in = fp_const14.out;
      __sum_5.write_en = 1'd1;
      let150[done] = __sum_5.done;
    }
    group let151<"static"=1> {
      __k10.in = const269.out;
      __k10.write_en = 1'd1;
      let151[done] = __k10.done;
    }
    group let152<"static"=1> {
      __dy5.in = const271.out;
      __dy5.write_en = 1'd1;
      let152[done] = __dy5.done;
    }
    group let153<"static"=1> {
      __dx5.in = const273.out;
      __dx5.write_en = 1'd1;
      let153[done] = __dx5.done;
    }
    group let154<"static"=4> {
      bin_read19_0.in = mult_pipe19.out;
      bin_read19_0.write_en = mult_pipe19.done;
      let154[done] = bin_read19_0.done;
      mult_pipe19.left = const275.out;
      mult_pipe19.right = __y7.out;
      mult_pipe19.go = !mult_pipe19.done ? 1'd1;
    }
    group let155<"static"=1> {
      __kernel_y_5.in = add95.out;
      __kernel_y_5.write_en = 1'd1;
      let155[done] = __kernel_y_5.done;
      add95.left = bin_read19_0.out;
      add95.right = __dy5.out;
    }
    group let156<"static"=4> {
      bin_read20_0.in = mult_pipe20.out;
      bin_read20_0.write_en = mult_pipe20.done;
      let156[done] = bin_read20_0.done;
      mult_pipe20.left = const276.out;
      mult_pipe20.right = __x7.out;
      mult_pipe20.go = !mult_pipe20.done ? 1'd1;
    }
    group let157<"static"=1> {
      __kernel_x_5.in = add96.out;
      __kernel_x_5.write_en = 1'd1;
      let157[done] = __kernel_x_5.done;
      add96.left = bin_read20_0.out;
      add96.right = __dx5.out;
    }
    group let158<"static"=1> {
      __padded_tensor_val_5.in = fp_const15.out;
      __padded_tensor_val_5.write_en = 1'd1;
      let158[done] = __padded_tensor_val_5.done;
    }
    group let159<"static"=2> {
      x_38_read0_0.in = x_38.read_data;
      x_38_read0_0.write_en = x_38.read_done;
      let159[done] = x_38_read0_0.done;
      x_38.addr3 = slice87.out;
      slice87.in = sub11.out;
      sub11.left = __kernel_x_5.out;
      sub11.right = const282.out;
      x_38.addr2 = slice86.out;
      slice86.in = sub10.out;
      sub10.left = __kernel_y_5.out;
      sub10.right = const281.out;
      x_38.addr1 = slice85.out;
      slice85.in = __k10.out;
      x_38.addr0 = slice84.out;
      slice84.in = __b7.out;
      x_38.read_en = 1'd1;
    }
    group let160<"static"=2> {
      x_39_read0_0.in = x_39.read_data;
      x_39_read0_0.write_en = x_39.read_done;
      let160[done] = x_39_read0_0.done;
      x_39.addr3 = slice91.out;
      slice91.in = __dx5.out;
      x_39.addr2 = slice90.out;
      slice90.in = __dy5.out;
      x_39.addr1 = slice89.out;
      slice89.in = __k10.out;
      x_39.addr0 = slice88.out;
      slice88.in = __c7.out;
      x_39.read_en = 1'd1;
    }
    group let161<"static"=4> {
      bin_read21_0.in = mult_pipe21.out;
      bin_read21_0.write_en = mult_pipe21.done;
      let161[done] = bin_read21_0.done;
      mult_pipe21.left = __padded_tensor_val_5.out;
      mult_pipe21.right = x_39_read0_0.out;
      mult_pipe21.go = !mult_pipe21.done ? 1'd1;
    }
    group upd101<"static"=1> {
      __padded_tensor_val_5.write_en = 1'd1;
      __padded_tensor_val_5.in = x_38_read0_0.out;
      upd101[done] = __padded_tensor_val_5.done;
    }
    group upd102<"static"=1> {
      __sum_5.write_en = 1'd1;
      add97.left = __sum_5.out;
      add97.right = bin_read21_0.out;
      __sum_5.in = add97.out;
      upd102[done] = __sum_5.done;
    }
    group upd103<"static"=1> {
      __dx5.write_en = 1'd1;
      add98.left = __dx5.out;
      add98.right = const283.out;
      __dx5.in = add98.out;
      upd103[done] = __dx5.done;
    }
    group upd104<"static"=1> {
      __dy5.write_en = 1'd1;
      add99.left = __dy5.out;
      add99.right = const284.out;
      __dy5.in = add99.out;
      upd104[done] = __dy5.done;
    }
    group upd105<"static"=1> {
      __k10.write_en = 1'd1;
      add100.left = __k10.out;
      add100.right = const285.out;
      __k10.in = add100.out;
      upd105[done] = __k10.done;
    }
    group upd106<"static"=1> {
      x_40.addr3 = slice95.out;
      slice95.in = __x7.out;
      x_40.addr2 = slice94.out;
      slice94.in = __y7.out;
      x_40.addr1 = slice93.out;
      slice93.in = __c7.out;
      x_40.addr0 = slice92.out;
      slice92.in = __b7.out;
      x_40.write_en = 1'd1;
      x_40.write_data = __sum_5.out;
      upd106[done] = x_40.write_done;
    }
    group upd107<"static"=1> {
      __x7.write_en = 1'd1;
      add101.left = __x7.out;
      add101.right = const286.out;
      __x7.in = add101.out;
      upd107[done] = __x7.done;
    }
    group upd108<"static"=1> {
      __y7.write_en = 1'd1;
      add102.left = __y7.out;
      add102.right = const287.out;
      __y7.in = add102.out;
      upd108[done] = __y7.done;
    }
    group upd109<"static"=1> {
      __c7.write_en = 1'd1;
      add103.left = __c7.out;
      add103.right = const288.out;
      __c7.in = add103.out;
      upd109[done] = __c7.done;
    }
    group upd110<"static"=1> {
      __b7.write_en = 1'd1;
      add104.left = __b7.out;
      add104.right = const289.out;
      __b7.in = add104.out;
      upd110[done] = __b7.done;
    }
  }
  control {
    seq {
      @pos(138) let146;
      @bound(1) while le71.out with cond80 {
        seq {
          @pos(139) let147;
          @bound(256) while le72.out with cond81 {
            seq {
              @pos(140) let148;
              @bound(56) while le73.out with cond82 {
                seq {
                  @pos(141) let149;
                  @bound(56) while le74.out with cond83 {
                    seq {
                      @pos(142) let150;
                      @pos(143) let151;
                      @bound(256) while le75.out with cond84 {
                        seq {
                          @pos(144) let152;
                          @bound(3) while le76.out with cond85 {
                            seq {
                              @pos(145) let153;
                              @bound(3) while le77.out with cond86 {
                                seq {
                                  par {
                                    seq {
                                      let154;
                                      let155;
                                    }
                                    seq {
                                      let156;
                                      let157;
                                    }
                                  }
                                  @pos(146) let158;
                                  if and17.out with cond87 {
                                    seq {
                                      @pos(147) let159;
                                      @pos(148) upd101;
                                    }
                                  }
                                  @pos(149) let160;
                                  let161;
                                  upd102;
                                  @pos(145) upd103;
                                }
                              }
                              @pos(144) upd104;
                            }
                          }
                          @pos(143) upd105;
                        }
                      }
                      @pos(150) upd106;
                      @pos(141) upd107;
                    }
                  }
                  @pos(140) upd108;
                }
              }
              @pos(139) upd109;
            }
          }
          @pos(138) upd110;
        }
      }
    }
  }
}
component relu_1x128x112x112() -> () {
  cells {
    ref x_26 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    ref x_27 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    __i7 = std_reg(1);
    __j7 = std_reg(8);
    __k11 = std_reg(7);
    __l5 = std_reg(7);
    add105 = std_add(7);
    add106 = std_add(7);
    add107 = std_add(8);
    add108 = std_add(1);
    const290 = std_const(1,0);
    const291 = std_const(1,0);
    const292 = std_const(8,0);
    const293 = std_const(8,127);
    const294 = std_const(7,0);
    const295 = std_const(7,111);
    const296 = std_const(7,0);
    const297 = std_const(7,111);
    const298 = std_const(7,1);
    const299 = std_const(7,1);
    const300 = std_const(8,1);
    const301 = std_const(1,1);
    fp_const16 = std_const(32,0);
    fp_const17 = std_const(32,0);
    gt4 = std_fp_sgt(32,16,16);
    le78 = std_le(1);
    le79 = std_le(8);
    le80 = std_le(7);
    le81 = std_le(7);
    x_26_read0_0 = std_reg(32);
    x_26_read1_0 = std_reg(32);
  }
  wires {
    comb group cond88 {
      le78.left = __i7.out;
      le78.right = const291.out;
    }
    comb group cond89 {
      le79.left = __j7.out;
      le79.right = const293.out;
    }
    comb group cond90 {
      le80.left = __k11.out;
      le80.right = const295.out;
    }
    comb group cond91 {
      le81.left = __l5.out;
      le81.right = const297.out;
    }
    comb group cond92 {
      gt4.left = x_26_read0_0.out;
      gt4.right = fp_const16.out;
    }
    group let162<"static"=1> {
      __i7.in = const290.out;
      __i7.write_en = 1'd1;
      let162[done] = __i7.done;
    }
    group let163<"static"=1> {
      __j7.in = const292.out;
      __j7.write_en = 1'd1;
      let163[done] = __j7.done;
    }
    group let164<"static"=1> {
      __k11.in = const294.out;
      __k11.write_en = 1'd1;
      let164[done] = __k11.done;
    }
    group let165<"static"=1> {
      __l5.in = const296.out;
      __l5.write_en = 1'd1;
      let165[done] = __l5.done;
    }
    group let166<"static"=2> {
      x_26_read0_0.in = x_26.read_data;
      x_26_read0_0.write_en = x_26.read_done;
      let166[done] = x_26_read0_0.done;
      x_26.addr3 = __l5.out;
      x_26.addr2 = __k11.out;
      x_26.addr1 = __j7.out;
      x_26.addr0 = __i7.out;
      x_26.read_en = 1'd1;
    }
    group let167<"static"=2> {
      x_26_read1_0.in = x_26.read_data;
      x_26_read1_0.write_en = x_26.read_done;
      let167[done] = x_26_read1_0.done;
      x_26.addr3 = __l5.out;
      x_26.addr2 = __k11.out;
      x_26.addr1 = __j7.out;
      x_26.addr0 = __i7.out;
      x_26.read_en = 1'd1;
    }
    group upd111<"static"=1> {
      x_27.addr3 = __l5.out;
      x_27.addr2 = __k11.out;
      x_27.addr1 = __j7.out;
      x_27.addr0 = __i7.out;
      x_27.write_en = 1'd1;
      x_27.write_data = x_26_read1_0.out;
      upd111[done] = x_27.write_done;
    }
    group upd112<"static"=1> {
      x_27.addr3 = __l5.out;
      x_27.addr2 = __k11.out;
      x_27.addr1 = __j7.out;
      x_27.addr0 = __i7.out;
      x_27.write_en = 1'd1;
      x_27.write_data = fp_const17.out;
      upd112[done] = x_27.write_done;
    }
    group upd113<"static"=1> {
      __l5.write_en = 1'd1;
      add105.left = __l5.out;
      add105.right = const298.out;
      __l5.in = add105.out;
      upd113[done] = __l5.done;
    }
    group upd114<"static"=1> {
      __k11.write_en = 1'd1;
      add106.left = __k11.out;
      add106.right = const299.out;
      __k11.in = add106.out;
      upd114[done] = __k11.done;
    }
    group upd115<"static"=1> {
      __j7.write_en = 1'd1;
      add107.left = __j7.out;
      add107.right = const300.out;
      __j7.in = add107.out;
      upd115[done] = __j7.done;
    }
    group upd116<"static"=1> {
      __i7.write_en = 1'd1;
      add108.left = __i7.out;
      add108.right = const301.out;
      __i7.in = add108.out;
      upd116[done] = __i7.done;
    }
  }
  control {
    seq {
      @pos(151) let162;
      @bound(1) while le78.out with cond88 {
        seq {
          @pos(152) let163;
          @bound(128) while le79.out with cond89 {
            seq {
              @pos(153) let164;
              @bound(112) while le80.out with cond90 {
                seq {
                  @pos(154) let165;
                  @bound(112) while le81.out with cond91 {
                    seq {
                      @pos(155) let166;
                      if gt4.out with cond92 {
                        seq {
                          @pos(156) let167;
                          @pos(157) upd111;
                        }
                      } else {
                        @pos(158) upd112;
                      }
                      @pos(154) upd113;
                    }
                  }
                  @pos(153) upd114;
                }
              }
              @pos(152) upd115;
            }
          }
          @pos(151) upd116;
        }
      }
    }
  }
}
component max_pool2d_1x512x14x14() -> () {
  cells {
    ref x_64 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    ref x_65 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    __b8 = std_reg(32);
    __c8 = std_reg(32);
    __current_2 = std_reg(32);
    __m2 = std_reg(32);
    __max_2 = std_reg(32);
    __n2 = std_reg(32);
    __pool_x_2 = std_reg(32);
    __pool_y_2 = std_reg(32);
    __stride_x_2 = std_reg(32);
    __stride_y_2 = std_reg(32);
    __x8 = std_reg(32);
    __y8 = std_reg(32);
    add109 = std_add(32);
    add110 = std_add(32);
    add111 = std_add(32);
    add112 = std_add(32);
    add113 = std_add(32);
    add114 = std_add(32);
    add115 = std_add(32);
    add116 = std_add(32);
    bin_read30_0 = std_reg(32);
    bin_read31_0 = std_reg(32);
    const302 = std_const(32,0);
    const303 = std_const(32,0);
    const304 = std_const(32,0);
    const305 = std_const(32,511);
    const306 = std_const(32,0);
    const307 = std_const(32,13);
    const308 = std_const(32,0);
    const309 = std_const(32,13);
    const310 = std_const(32,2);
    const311 = std_const(32,2);
    const312 = std_const(32,0);
    const313 = std_const(32,1);
    const314 = std_const(32,0);
    const315 = std_const(32,1);
    const316 = std_const(32,1);
    const317 = std_const(32,1);
    const318 = std_const(32,1);
    const319 = std_const(32,1);
    const320 = std_const(32,1);
    const321 = std_const(32,1);
    gt5 = std_fp_sgt(32,16,16);
    le82 = std_le(32);
    le83 = std_le(32);
    le84 = std_le(32);
    le85 = std_le(32);
    le86 = std_le(32);
    le87 = std_le(32);
    mult_pipe22 = std_mult_pipe(32);
    mult_pipe23 = std_mult_pipe(32);
    slice100 = std_slice(32,1);
    slice101 = std_slice(32,10);
    slice102 = std_slice(32,5);
    slice103 = std_slice(32,5);
    slice104 = std_slice(32,1);
    slice105 = std_slice(32,10);
    slice106 = std_slice(32,4);
    slice107 = std_slice(32,4);
    slice96 = std_slice(32,1);
    slice97 = std_slice(32,10);
    slice98 = std_slice(32,5);
    slice99 = std_slice(32,5);
  }
  wires {
    comb group cond93 {
      le82.left = __b8.out;
      le82.right = const303.out;
    }
    comb group cond94 {
      le83.left = __c8.out;
      le83.right = const305.out;
    }
    comb group cond95 {
      le84.left = __y8.out;
      le84.right = const307.out;
    }
    comb group cond96 {
      le85.left = __x8.out;
      le85.right = const309.out;
    }
    comb group cond97 {
      le86.left = __m2.out;
      le86.right = const313.out;
    }
    comb group cond98 {
      le87.left = __n2.out;
      le87.right = const315.out;
    }
    comb group cond99 {
      gt5.left = __current_2.out;
      gt5.right = __max_2.out;
    }
    group let168<"static"=1> {
      __b8.in = const302.out;
      __b8.write_en = 1'd1;
      let168[done] = __b8.done;
    }
    group let169<"static"=1> {
      __c8.in = const304.out;
      __c8.write_en = 1'd1;
      let169[done] = __c8.done;
    }
    group let170<"static"=1> {
      __y8.in = const306.out;
      __y8.write_en = 1'd1;
      let170[done] = __y8.done;
    }
    group let171<"static"=1> {
      __x8.in = const308.out;
      __x8.write_en = 1'd1;
      let171[done] = __x8.done;
    }
    group let172<"static"=4> {
      bin_read30_0.in = mult_pipe22.out;
      bin_read30_0.write_en = mult_pipe22.done;
      let172[done] = bin_read30_0.done;
      mult_pipe22.left = __y8.out;
      mult_pipe22.right = const310.out;
      mult_pipe22.go = !mult_pipe22.done ? 1'd1;
    }
    group let173<"static"=1> {
      __stride_y_2.in = bin_read30_0.out;
      __stride_y_2.write_en = 1'd1;
      let173[done] = __stride_y_2.done;
    }
    group let174<"static"=4> {
      bin_read31_0.in = mult_pipe23.out;
      bin_read31_0.write_en = mult_pipe23.done;
      let174[done] = bin_read31_0.done;
      mult_pipe23.left = __x8.out;
      mult_pipe23.right = const311.out;
      mult_pipe23.go = !mult_pipe23.done ? 1'd1;
    }
    group let175<"static"=1> {
      __stride_x_2.in = bin_read31_0.out;
      __stride_x_2.write_en = 1'd1;
      let175[done] = __stride_x_2.done;
    }
    group let176<"static"=2> {
      __max_2.in = x_64.read_data;
      __max_2.write_en = x_64.read_done;
      let176[done] = __max_2.done;
      x_64.addr3 = slice99.out;
      slice99.in = __stride_x_2.out;
      x_64.addr2 = slice98.out;
      slice98.in = __stride_y_2.out;
      x_64.addr1 = slice97.out;
      slice97.in = __c8.out;
      x_64.addr0 = slice96.out;
      slice96.in = __b8.out;
      x_64.read_en = 1'd1;
    }
    group let177<"static"=1> {
      __m2.in = const312.out;
      __m2.write_en = 1'd1;
      let177[done] = __m2.done;
    }
    group let178<"static"=1> {
      __n2.in = const314.out;
      __n2.write_en = 1'd1;
      let178[done] = __n2.done;
    }
    group let179<"static"=1> {
      __pool_y_2.in = add109.out;
      __pool_y_2.write_en = 1'd1;
      let179[done] = __pool_y_2.done;
      add109.left = __stride_y_2.out;
      add109.right = __m2.out;
    }
    group let180<"static"=1> {
      __pool_x_2.in = add110.out;
      __pool_x_2.write_en = 1'd1;
      let180[done] = __pool_x_2.done;
      add110.left = __stride_x_2.out;
      add110.right = __n2.out;
    }
    group let181<"static"=2> {
      __current_2.in = x_64.read_data;
      __current_2.write_en = x_64.read_done;
      let181[done] = __current_2.done;
      x_64.addr3 = slice103.out;
      slice103.in = __pool_x_2.out;
      x_64.addr2 = slice102.out;
      slice102.in = __pool_y_2.out;
      x_64.addr1 = slice101.out;
      slice101.in = __c8.out;
      x_64.addr0 = slice100.out;
      slice100.in = __b8.out;
      x_64.read_en = 1'd1;
    }
    group upd117<"static"=1> {
      __max_2.write_en = 1'd1;
      __max_2.in = __current_2.out;
      upd117[done] = __max_2.done;
    }
    group upd118<"static"=1> {
      __n2.write_en = 1'd1;
      add111.left = __n2.out;
      add111.right = const316.out;
      __n2.in = add111.out;
      upd118[done] = __n2.done;
    }
    group upd119<"static"=1> {
      __m2.write_en = 1'd1;
      add112.left = __m2.out;
      add112.right = const317.out;
      __m2.in = add112.out;
      upd119[done] = __m2.done;
    }
    group upd120<"static"=1> {
      x_65.addr3 = slice107.out;
      slice107.in = __x8.out;
      x_65.addr2 = slice106.out;
      slice106.in = __y8.out;
      x_65.addr1 = slice105.out;
      slice105.in = __c8.out;
      x_65.addr0 = slice104.out;
      slice104.in = __b8.out;
      x_65.write_en = 1'd1;
      x_65.write_data = __max_2.out;
      upd120[done] = x_65.write_done;
    }
    group upd121<"static"=1> {
      __x8.write_en = 1'd1;
      add113.left = __x8.out;
      add113.right = const318.out;
      __x8.in = add113.out;
      upd121[done] = __x8.done;
    }
    group upd122<"static"=1> {
      __y8.write_en = 1'd1;
      add114.left = __y8.out;
      add114.right = const319.out;
      __y8.in = add114.out;
      upd122[done] = __y8.done;
    }
    group upd123<"static"=1> {
      __c8.write_en = 1'd1;
      add115.left = __c8.out;
      add115.right = const320.out;
      __c8.in = add115.out;
      upd123[done] = __c8.done;
    }
    group upd124<"static"=1> {
      __b8.write_en = 1'd1;
      add116.left = __b8.out;
      add116.right = const321.out;
      __b8.in = add116.out;
      upd124[done] = __b8.done;
    }
  }
  control {
    seq {
      @pos(159) let168;
      @bound(1) while le82.out with cond93 {
        seq {
          @pos(160) let169;
          @bound(512) while le83.out with cond94 {
            seq {
              @pos(161) let170;
              @bound(14) while le84.out with cond95 {
                seq {
                  @pos(162) let171;
                  @bound(14) while le85.out with cond96 {
                    seq {
                      par {
                        seq {
                          let172;
                          let173;
                        }
                        seq {
                          let174;
                          let175;
                        }
                      }
                      @pos(163) let176;
                      @pos(164) let177;
                      @bound(2) while le86.out with cond97 {
                        seq {
                          @pos(165) let178;
                          @bound(2) while le87.out with cond98 {
                            seq {
                              par {
                                @pos(166) let179;
                                @pos(167) let180;
                              }
                              @pos(168) let181;
                              if gt5.out with cond99 {
                                @pos(169) upd117;
                              }
                              @pos(165) upd118;
                            }
                          }
                          @pos(164) upd119;
                        }
                      }
                      @pos(170) upd120;
                      @pos(162) upd121;
                    }
                  }
                  @pos(161) upd122;
                }
              }
              @pos(160) upd123;
            }
          }
          @pos(159) upd124;
        }
      }
    }
  }
}
component max_pool2d_1x512x7x7() -> () {
  cells {
    ref x_80 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    ref x_81 = seq_mem_d4(32,1,512,7,7,1,10,3,3);
    __b9 = std_reg(32);
    __c9 = std_reg(32);
    __current_3 = std_reg(32);
    __m3 = std_reg(32);
    __max_3 = std_reg(32);
    __n3 = std_reg(32);
    __pool_x_3 = std_reg(32);
    __pool_y_3 = std_reg(32);
    __stride_x_3 = std_reg(32);
    __stride_y_3 = std_reg(32);
    __x9 = std_reg(32);
    __y9 = std_reg(32);
    add117 = std_add(32);
    add118 = std_add(32);
    add119 = std_add(32);
    add120 = std_add(32);
    add121 = std_add(32);
    add122 = std_add(32);
    add123 = std_add(32);
    add124 = std_add(32);
    bin_read35_0 = std_reg(32);
    bin_read36_0 = std_reg(32);
    const322 = std_const(32,0);
    const323 = std_const(32,0);
    const324 = std_const(32,0);
    const325 = std_const(32,511);
    const326 = std_const(32,0);
    const327 = std_const(32,6);
    const328 = std_const(32,0);
    const329 = std_const(32,6);
    const330 = std_const(32,2);
    const331 = std_const(32,2);
    const332 = std_const(32,0);
    const333 = std_const(32,1);
    const334 = std_const(32,0);
    const335 = std_const(32,1);
    const336 = std_const(32,1);
    const337 = std_const(32,1);
    const338 = std_const(32,1);
    const339 = std_const(32,1);
    const340 = std_const(32,1);
    const341 = std_const(32,1);
    gt6 = std_fp_sgt(32,16,16);
    le88 = std_le(32);
    le89 = std_le(32);
    le90 = std_le(32);
    le91 = std_le(32);
    le92 = std_le(32);
    le93 = std_le(32);
    mult_pipe24 = std_mult_pipe(32);
    mult_pipe25 = std_mult_pipe(32);
    slice108 = std_slice(32,1);
    slice109 = std_slice(32,10);
    slice110 = std_slice(32,4);
    slice111 = std_slice(32,4);
    slice112 = std_slice(32,1);
    slice113 = std_slice(32,10);
    slice114 = std_slice(32,4);
    slice115 = std_slice(32,4);
    slice116 = std_slice(32,1);
    slice117 = std_slice(32,10);
    slice118 = std_slice(32,3);
    slice119 = std_slice(32,3);
  }
  wires {
    comb group cond100 {
      le88.left = __b9.out;
      le88.right = const323.out;
    }
    comb group cond101 {
      le89.left = __c9.out;
      le89.right = const325.out;
    }
    comb group cond102 {
      le90.left = __y9.out;
      le90.right = const327.out;
    }
    comb group cond103 {
      le91.left = __x9.out;
      le91.right = const329.out;
    }
    comb group cond104 {
      le92.left = __m3.out;
      le92.right = const333.out;
    }
    comb group cond105 {
      le93.left = __n3.out;
      le93.right = const335.out;
    }
    comb group cond106 {
      gt6.left = __current_3.out;
      gt6.right = __max_3.out;
    }
    group let182<"static"=1> {
      __b9.in = const322.out;
      __b9.write_en = 1'd1;
      let182[done] = __b9.done;
    }
    group let183<"static"=1> {
      __c9.in = const324.out;
      __c9.write_en = 1'd1;
      let183[done] = __c9.done;
    }
    group let184<"static"=1> {
      __y9.in = const326.out;
      __y9.write_en = 1'd1;
      let184[done] = __y9.done;
    }
    group let185<"static"=1> {
      __x9.in = const328.out;
      __x9.write_en = 1'd1;
      let185[done] = __x9.done;
    }
    group let186<"static"=4> {
      bin_read35_0.in = mult_pipe24.out;
      bin_read35_0.write_en = mult_pipe24.done;
      let186[done] = bin_read35_0.done;
      mult_pipe24.left = __y9.out;
      mult_pipe24.right = const330.out;
      mult_pipe24.go = !mult_pipe24.done ? 1'd1;
    }
    group let187<"static"=1> {
      __stride_y_3.in = bin_read35_0.out;
      __stride_y_3.write_en = 1'd1;
      let187[done] = __stride_y_3.done;
    }
    group let188<"static"=4> {
      bin_read36_0.in = mult_pipe25.out;
      bin_read36_0.write_en = mult_pipe25.done;
      let188[done] = bin_read36_0.done;
      mult_pipe25.left = __x9.out;
      mult_pipe25.right = const331.out;
      mult_pipe25.go = !mult_pipe25.done ? 1'd1;
    }
    group let189<"static"=1> {
      __stride_x_3.in = bin_read36_0.out;
      __stride_x_3.write_en = 1'd1;
      let189[done] = __stride_x_3.done;
    }
    group let190<"static"=2> {
      __max_3.in = x_80.read_data;
      __max_3.write_en = x_80.read_done;
      let190[done] = __max_3.done;
      x_80.addr3 = slice111.out;
      slice111.in = __stride_x_3.out;
      x_80.addr2 = slice110.out;
      slice110.in = __stride_y_3.out;
      x_80.addr1 = slice109.out;
      slice109.in = __c9.out;
      x_80.addr0 = slice108.out;
      slice108.in = __b9.out;
      x_80.read_en = 1'd1;
    }
    group let191<"static"=1> {
      __m3.in = const332.out;
      __m3.write_en = 1'd1;
      let191[done] = __m3.done;
    }
    group let192<"static"=1> {
      __n3.in = const334.out;
      __n3.write_en = 1'd1;
      let192[done] = __n3.done;
    }
    group let193<"static"=1> {
      __pool_y_3.in = add117.out;
      __pool_y_3.write_en = 1'd1;
      let193[done] = __pool_y_3.done;
      add117.left = __stride_y_3.out;
      add117.right = __m3.out;
    }
    group let194<"static"=1> {
      __pool_x_3.in = add118.out;
      __pool_x_3.write_en = 1'd1;
      let194[done] = __pool_x_3.done;
      add118.left = __stride_x_3.out;
      add118.right = __n3.out;
    }
    group let195<"static"=2> {
      __current_3.in = x_80.read_data;
      __current_3.write_en = x_80.read_done;
      let195[done] = __current_3.done;
      x_80.addr3 = slice115.out;
      slice115.in = __pool_x_3.out;
      x_80.addr2 = slice114.out;
      slice114.in = __pool_y_3.out;
      x_80.addr1 = slice113.out;
      slice113.in = __c9.out;
      x_80.addr0 = slice112.out;
      slice112.in = __b9.out;
      x_80.read_en = 1'd1;
    }
    group upd125<"static"=1> {
      __max_3.write_en = 1'd1;
      __max_3.in = __current_3.out;
      upd125[done] = __max_3.done;
    }
    group upd126<"static"=1> {
      __n3.write_en = 1'd1;
      add119.left = __n3.out;
      add119.right = const336.out;
      __n3.in = add119.out;
      upd126[done] = __n3.done;
    }
    group upd127<"static"=1> {
      __m3.write_en = 1'd1;
      add120.left = __m3.out;
      add120.right = const337.out;
      __m3.in = add120.out;
      upd127[done] = __m3.done;
    }
    group upd128<"static"=1> {
      x_81.addr3 = slice119.out;
      slice119.in = __x9.out;
      x_81.addr2 = slice118.out;
      slice118.in = __y9.out;
      x_81.addr1 = slice117.out;
      slice117.in = __c9.out;
      x_81.addr0 = slice116.out;
      slice116.in = __b9.out;
      x_81.write_en = 1'd1;
      x_81.write_data = __max_3.out;
      upd128[done] = x_81.write_done;
    }
    group upd129<"static"=1> {
      __x9.write_en = 1'd1;
      add121.left = __x9.out;
      add121.right = const338.out;
      __x9.in = add121.out;
      upd129[done] = __x9.done;
    }
    group upd130<"static"=1> {
      __y9.write_en = 1'd1;
      add122.left = __y9.out;
      add122.right = const339.out;
      __y9.in = add122.out;
      upd130[done] = __y9.done;
    }
    group upd131<"static"=1> {
      __c9.write_en = 1'd1;
      add123.left = __c9.out;
      add123.right = const340.out;
      __c9.in = add123.out;
      upd131[done] = __c9.done;
    }
    group upd132<"static"=1> {
      __b9.write_en = 1'd1;
      add124.left = __b9.out;
      add124.right = const341.out;
      __b9.in = add124.out;
      upd132[done] = __b9.done;
    }
  }
  control {
    seq {
      @pos(171) let182;
      @bound(1) while le88.out with cond100 {
        seq {
          @pos(172) let183;
          @bound(512) while le89.out with cond101 {
            seq {
              @pos(173) let184;
              @bound(7) while le90.out with cond102 {
                seq {
                  @pos(174) let185;
                  @bound(7) while le91.out with cond103 {
                    seq {
                      par {
                        seq {
                          let186;
                          let187;
                        }
                        seq {
                          let188;
                          let189;
                        }
                      }
                      @pos(175) let190;
                      @pos(176) let191;
                      @bound(2) while le92.out with cond104 {
                        seq {
                          @pos(177) let192;
                          @bound(2) while le93.out with cond105 {
                            seq {
                              par {
                                @pos(178) let193;
                                @pos(179) let194;
                              }
                              @pos(180) let195;
                              if gt6.out with cond106 {
                                @pos(181) upd125;
                              }
                              @pos(177) upd126;
                            }
                          }
                          @pos(176) upd127;
                        }
                      }
                      @pos(182) upd128;
                      @pos(174) upd129;
                    }
                  }
                  @pos(173) upd130;
                }
              }
              @pos(172) upd131;
            }
          }
          @pos(171) upd132;
        }
      }
    }
  }
}
component conv2d_1x512x14x14() -> () {
  cells {
    ref x_65 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    ref x_66 = seq_mem_d4(32,512,512,3,3,10,10,2,2);
    ref x_67 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    __b10 = std_reg(32);
    __c10 = std_reg(32);
    __dx6 = std_reg(32);
    __dy6 = std_reg(32);
    __k12 = std_reg(32);
    __kernel_x_6 = std_reg(32);
    __kernel_y_6 = std_reg(32);
    __padded_tensor_val_6 = std_reg(32);
    __sum_6 = std_reg(32);
    __x10 = std_reg(32);
    __y10 = std_reg(32);
    add125 = std_add(32);
    add126 = std_add(32);
    add127 = std_fp_sadd(32,16,16);
    add128 = std_add(32);
    add129 = std_add(32);
    add130 = std_add(32);
    add131 = std_add(32);
    add132 = std_add(32);
    add133 = std_add(32);
    add134 = std_add(32);
    and18 = std_and(1);
    and19 = std_and(1);
    and20 = std_and(1);
    bin_read32_0 = std_reg(32);
    bin_read33_0 = std_reg(32);
    bin_read34_0 = std_reg(32);
    const342 = std_const(32,0);
    const343 = std_const(32,0);
    const344 = std_const(32,0);
    const345 = std_const(32,511);
    const346 = std_const(32,0);
    const347 = std_const(32,13);
    const348 = std_const(32,0);
    const349 = std_const(32,13);
    const350 = std_const(32,0);
    const351 = std_const(32,511);
    const352 = std_const(32,0);
    const353 = std_const(32,2);
    const354 = std_const(32,0);
    const355 = std_const(32,2);
    const356 = std_const(32,1);
    const357 = std_const(32,1);
    const358 = std_const(32,1);
    const359 = std_const(32,15);
    const360 = std_const(32,1);
    const361 = std_const(32,15);
    const362 = std_const(32,1);
    const363 = std_const(32,1);
    const364 = std_const(32,1);
    const365 = std_const(32,1);
    const366 = std_const(32,1);
    const367 = std_const(32,1);
    const368 = std_const(32,1);
    const369 = std_const(32,1);
    const370 = std_const(32,1);
    fp_const18 = std_const(32,0);
    fp_const19 = std_const(32,0);
    ge12 = std_ge(32);
    ge13 = std_ge(32);
    le100 = std_le(32);
    le94 = std_le(32);
    le95 = std_le(32);
    le96 = std_le(32);
    le97 = std_le(32);
    le98 = std_le(32);
    le99 = std_le(32);
    lt12 = std_lt(32);
    lt13 = std_lt(32);
    mult_pipe26 = std_mult_pipe(32);
    mult_pipe27 = std_mult_pipe(32);
    mult_pipe28 = std_fp_smult_pipe(32,16,16);
    slice120 = std_slice(32,1);
    slice121 = std_slice(32,10);
    slice122 = std_slice(32,4);
    slice123 = std_slice(32,4);
    slice124 = std_slice(32,10);
    slice125 = std_slice(32,10);
    slice126 = std_slice(32,2);
    slice127 = std_slice(32,2);
    slice128 = std_slice(32,1);
    slice129 = std_slice(32,10);
    slice130 = std_slice(32,4);
    slice131 = std_slice(32,4);
    sub12 = std_sub(32);
    sub13 = std_sub(32);
    x_65_read0_0 = std_reg(32);
    x_66_read0_0 = std_reg(32);
  }
  wires {
    comb group cond107 {
      le94.left = __b10.out;
      le94.right = const343.out;
    }
    comb group cond108 {
      le95.left = __c10.out;
      le95.right = const345.out;
    }
    comb group cond109 {
      le96.left = __y10.out;
      le96.right = const347.out;
    }
    comb group cond110 {
      le97.left = __x10.out;
      le97.right = const349.out;
    }
    comb group cond111 {
      le98.left = __k12.out;
      le98.right = const351.out;
    }
    comb group cond112 {
      le99.left = __dy6.out;
      le99.right = const353.out;
    }
    comb group cond113 {
      le100.left = __dx6.out;
      le100.right = const355.out;
    }
    comb group cond114 {
      and20.left = and19.out;
      and20.right = lt13.out;
      and19.left = and18.out;
      and19.right = ge13.out;
      and18.left = ge12.out;
      and18.right = lt12.out;
      ge12.left = __kernel_y_6.out;
      ge12.right = const358.out;
      lt12.left = __kernel_y_6.out;
      lt12.right = const359.out;
      ge13.left = __kernel_x_6.out;
      ge13.right = const360.out;
      lt13.left = __kernel_x_6.out;
      lt13.right = const361.out;
    }
    group let196<"static"=1> {
      __b10.in = const342.out;
      __b10.write_en = 1'd1;
      let196[done] = __b10.done;
    }
    group let197<"static"=1> {
      __c10.in = const344.out;
      __c10.write_en = 1'd1;
      let197[done] = __c10.done;
    }
    group let198<"static"=1> {
      __y10.in = const346.out;
      __y10.write_en = 1'd1;
      let198[done] = __y10.done;
    }
    group let199<"static"=1> {
      __x10.in = const348.out;
      __x10.write_en = 1'd1;
      let199[done] = __x10.done;
    }
    group let200<"static"=1> {
      __sum_6.in = fp_const18.out;
      __sum_6.write_en = 1'd1;
      let200[done] = __sum_6.done;
    }
    group let201<"static"=1> {
      __k12.in = const350.out;
      __k12.write_en = 1'd1;
      let201[done] = __k12.done;
    }
    group let202<"static"=1> {
      __dy6.in = const352.out;
      __dy6.write_en = 1'd1;
      let202[done] = __dy6.done;
    }
    group let203<"static"=1> {
      __dx6.in = const354.out;
      __dx6.write_en = 1'd1;
      let203[done] = __dx6.done;
    }
    group let204<"static"=4> {
      bin_read32_0.in = mult_pipe26.out;
      bin_read32_0.write_en = mult_pipe26.done;
      let204[done] = bin_read32_0.done;
      mult_pipe26.left = const356.out;
      mult_pipe26.right = __y10.out;
      mult_pipe26.go = !mult_pipe26.done ? 1'd1;
    }
    group let205<"static"=1> {
      __kernel_y_6.in = add125.out;
      __kernel_y_6.write_en = 1'd1;
      let205[done] = __kernel_y_6.done;
      add125.left = bin_read32_0.out;
      add125.right = __dy6.out;
    }
    group let206<"static"=4> {
      bin_read33_0.in = mult_pipe27.out;
      bin_read33_0.write_en = mult_pipe27.done;
      let206[done] = bin_read33_0.done;
      mult_pipe27.left = const357.out;
      mult_pipe27.right = __x10.out;
      mult_pipe27.go = !mult_pipe27.done ? 1'd1;
    }
    group let207<"static"=1> {
      __kernel_x_6.in = add126.out;
      __kernel_x_6.write_en = 1'd1;
      let207[done] = __kernel_x_6.done;
      add126.left = bin_read33_0.out;
      add126.right = __dx6.out;
    }
    group let208<"static"=1> {
      __padded_tensor_val_6.in = fp_const19.out;
      __padded_tensor_val_6.write_en = 1'd1;
      let208[done] = __padded_tensor_val_6.done;
    }
    group let209<"static"=2> {
      x_65_read0_0.in = x_65.read_data;
      x_65_read0_0.write_en = x_65.read_done;
      let209[done] = x_65_read0_0.done;
      x_65.addr3 = slice123.out;
      slice123.in = sub13.out;
      sub13.left = __kernel_x_6.out;
      sub13.right = const363.out;
      x_65.addr2 = slice122.out;
      slice122.in = sub12.out;
      sub12.left = __kernel_y_6.out;
      sub12.right = const362.out;
      x_65.addr1 = slice121.out;
      slice121.in = __k12.out;
      x_65.addr0 = slice120.out;
      slice120.in = __b10.out;
      x_65.read_en = 1'd1;
    }
    group let210<"static"=2> {
      x_66_read0_0.in = x_66.read_data;
      x_66_read0_0.write_en = x_66.read_done;
      let210[done] = x_66_read0_0.done;
      x_66.addr3 = slice127.out;
      slice127.in = __dx6.out;
      x_66.addr2 = slice126.out;
      slice126.in = __dy6.out;
      x_66.addr1 = slice125.out;
      slice125.in = __k12.out;
      x_66.addr0 = slice124.out;
      slice124.in = __c10.out;
      x_66.read_en = 1'd1;
    }
    group let211<"static"=4> {
      bin_read34_0.in = mult_pipe28.out;
      bin_read34_0.write_en = mult_pipe28.done;
      let211[done] = bin_read34_0.done;
      mult_pipe28.left = __padded_tensor_val_6.out;
      mult_pipe28.right = x_66_read0_0.out;
      mult_pipe28.go = !mult_pipe28.done ? 1'd1;
    }
    group upd133<"static"=1> {
      __padded_tensor_val_6.write_en = 1'd1;
      __padded_tensor_val_6.in = x_65_read0_0.out;
      upd133[done] = __padded_tensor_val_6.done;
    }
    group upd134<"static"=1> {
      __sum_6.write_en = 1'd1;
      add127.left = __sum_6.out;
      add127.right = bin_read34_0.out;
      __sum_6.in = add127.out;
      upd134[done] = __sum_6.done;
    }
    group upd135<"static"=1> {
      __dx6.write_en = 1'd1;
      add128.left = __dx6.out;
      add128.right = const364.out;
      __dx6.in = add128.out;
      upd135[done] = __dx6.done;
    }
    group upd136<"static"=1> {
      __dy6.write_en = 1'd1;
      add129.left = __dy6.out;
      add129.right = const365.out;
      __dy6.in = add129.out;
      upd136[done] = __dy6.done;
    }
    group upd137<"static"=1> {
      __k12.write_en = 1'd1;
      add130.left = __k12.out;
      add130.right = const366.out;
      __k12.in = add130.out;
      upd137[done] = __k12.done;
    }
    group upd138<"static"=1> {
      x_67.addr3 = slice131.out;
      slice131.in = __x10.out;
      x_67.addr2 = slice130.out;
      slice130.in = __y10.out;
      x_67.addr1 = slice129.out;
      slice129.in = __c10.out;
      x_67.addr0 = slice128.out;
      slice128.in = __b10.out;
      x_67.write_en = 1'd1;
      x_67.write_data = __sum_6.out;
      upd138[done] = x_67.write_done;
    }
    group upd139<"static"=1> {
      __x10.write_en = 1'd1;
      add131.left = __x10.out;
      add131.right = const367.out;
      __x10.in = add131.out;
      upd139[done] = __x10.done;
    }
    group upd140<"static"=1> {
      __y10.write_en = 1'd1;
      add132.left = __y10.out;
      add132.right = const368.out;
      __y10.in = add132.out;
      upd140[done] = __y10.done;
    }
    group upd141<"static"=1> {
      __c10.write_en = 1'd1;
      add133.left = __c10.out;
      add133.right = const369.out;
      __c10.in = add133.out;
      upd141[done] = __c10.done;
    }
    group upd142<"static"=1> {
      __b10.write_en = 1'd1;
      add134.left = __b10.out;
      add134.right = const370.out;
      __b10.in = add134.out;
      upd142[done] = __b10.done;
    }
  }
  control {
    seq {
      @pos(183) let196;
      @bound(1) while le94.out with cond107 {
        seq {
          @pos(184) let197;
          @bound(512) while le95.out with cond108 {
            seq {
              @pos(185) let198;
              @bound(14) while le96.out with cond109 {
                seq {
                  @pos(186) let199;
                  @bound(14) while le97.out with cond110 {
                    seq {
                      @pos(187) let200;
                      @pos(188) let201;
                      @bound(512) while le98.out with cond111 {
                        seq {
                          @pos(189) let202;
                          @bound(3) while le99.out with cond112 {
                            seq {
                              @pos(190) let203;
                              @bound(3) while le100.out with cond113 {
                                seq {
                                  par {
                                    seq {
                                      let204;
                                      let205;
                                    }
                                    seq {
                                      let206;
                                      let207;
                                    }
                                  }
                                  @pos(191) let208;
                                  if and20.out with cond114 {
                                    seq {
                                      @pos(192) let209;
                                      @pos(193) upd133;
                                    }
                                  }
                                  @pos(194) let210;
                                  let211;
                                  upd134;
                                  @pos(190) upd135;
                                }
                              }
                              @pos(189) upd136;
                            }
                          }
                          @pos(188) upd137;
                        }
                      }
                      @pos(195) upd138;
                      @pos(186) upd139;
                    }
                  }
                  @pos(185) upd140;
                }
              }
              @pos(184) upd141;
            }
          }
          @pos(183) upd142;
        }
      }
    }
  }
}
component dense_1x4096() -> () {
  cells {
    ref x_82 = seq_mem_d2(32,1,25088,1,15);
    ref x_83 = seq_mem_d2(32,4096,25088,13,15);
    ref x_84 = seq_mem_d2(32,1,4096,1,13);
    __i8 = std_reg(1);
    __j8 = std_reg(13);
    __k13 = std_reg(15);
    __product_0 = std_reg(32);
    add135 = std_fp_sadd(32,16,16);
    add136 = std_add(15);
    add137 = std_add(13);
    add138 = std_add(1);
    bin_read37_0 = std_reg(32);
    const371 = std_const(1,0);
    const372 = std_const(1,0);
    const373 = std_const(13,0);
    const374 = std_const(13,4095);
    const375 = std_const(15,0);
    const376 = std_const(15,25087);
    const377 = std_const(15,1);
    const378 = std_const(13,1);
    const379 = std_const(1,1);
    le101 = std_le(1);
    le102 = std_le(13);
    le103 = std_le(15);
    mult_pipe29 = std_fp_smult_pipe(32,16,16);
    red_read00 = std_reg(32);
    x_82_read0_0 = std_reg(32);
    x_83_read0_0 = std_reg(32);
  }
  wires {
    comb group cond115 {
      le101.left = __i8.out;
      le101.right = const372.out;
    }
    comb group cond116 {
      le102.left = __j8.out;
      le102.right = const374.out;
    }
    comb group cond117 {
      le103.left = __k13.out;
      le103.right = const376.out;
    }
    group let212<"static"=1> {
      __i8.in = const371.out;
      __i8.write_en = 1'd1;
      let212[done] = __i8.done;
    }
    group let213<"static"=1> {
      __j8.in = const373.out;
      __j8.write_en = 1'd1;
      let213[done] = __j8.done;
    }
    group let214<"static"=1> {
      __k13.in = const375.out;
      __k13.write_en = 1'd1;
      let214[done] = __k13.done;
    }
    group let215<"static"=2> {
      x_82_read0_0.in = x_82.read_data;
      x_82_read0_0.write_en = x_82.read_done;
      let215[done] = x_82_read0_0.done;
      x_82.addr1 = __k13.out;
      x_82.addr0 = __i8.out;
      x_82.read_en = 1'd1;
    }
    group let216<"static"=2> {
      x_83_read0_0.in = x_83.read_data;
      x_83_read0_0.write_en = x_83.read_done;
      let216[done] = x_83_read0_0.done;
      x_83.addr1 = __k13.out;
      x_83.addr0 = __j8.out;
      x_83.read_en = 1'd1;
    }
    group let217<"static"=4> {
      bin_read37_0.in = mult_pipe29.out;
      bin_read37_0.write_en = mult_pipe29.done;
      let217[done] = bin_read37_0.done;
      mult_pipe29.left = x_82_read0_0.out;
      mult_pipe29.right = x_83_read0_0.out;
      mult_pipe29.go = !mult_pipe29.done ? 1'd1;
    }
    group let218<"static"=1> {
      __product_0.in = bin_read37_0.out;
      __product_0.write_en = 1'd1;
      let218[done] = __product_0.done;
    }
    group let219<"static"=2> {
      red_read00.in = x_84.read_data;
      red_read00.write_en = x_84.read_done;
      let219[done] = red_read00.done;
      x_84.addr1 = __j8.out;
      x_84.addr0 = __i8.out;
      x_84.read_en = 1'd1;
    }
    group upd143<"static"=1> {
      x_84.addr1 = __j8.out;
      x_84.addr0 = __i8.out;
      x_84.write_en = 1'd1;
      add135.left = red_read00.out;
      add135.right = __product_0.out;
      x_84.write_data = add135.out;
      upd143[done] = x_84.write_done;
    }
    group upd144<"static"=1> {
      __k13.write_en = 1'd1;
      add136.left = __k13.out;
      add136.right = const377.out;
      __k13.in = add136.out;
      upd144[done] = __k13.done;
    }
    group upd145<"static"=1> {
      __j8.write_en = 1'd1;
      add137.left = __j8.out;
      add137.right = const378.out;
      __j8.in = add137.out;
      upd145[done] = __j8.done;
    }
    group upd146<"static"=1> {
      __i8.write_en = 1'd1;
      add138.left = __i8.out;
      add138.right = const379.out;
      __i8.in = add138.out;
      upd146[done] = __i8.done;
    }
  }
  control {
    seq {
      @pos(196) let212;
      @bound(1) while le101.out with cond115 {
        seq {
          @pos(197) let213;
          @bound(4096) while le102.out with cond116 {
            seq {
              @pos(198) let214;
              @bound(25088) while le103.out with cond117 {
                seq {
                  par {
                    @pos(199) let215;
                    @pos(200) let216;
                  }
                  let217;
                  let218;
                  let219;
                  upd143;
                  @pos(198) upd144;
                }
              }
              @pos(197) upd145;
            }
          }
          @pos(196) upd146;
        }
      }
    }
  }
}
component conv2d_1x128x112x112() -> () {
  cells {
    ref x_22 = seq_mem_d4(32,1,64,112,112,1,7,7,7);
    ref x_23 = seq_mem_d4(32,128,64,3,3,8,7,2,2);
    ref x_24 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    __b11 = std_reg(32);
    __c11 = std_reg(32);
    __dx7 = std_reg(32);
    __dy7 = std_reg(32);
    __k14 = std_reg(32);
    __kernel_x_7 = std_reg(32);
    __kernel_y_7 = std_reg(32);
    __padded_tensor_val_7 = std_reg(32);
    __sum_7 = std_reg(32);
    __x11 = std_reg(32);
    __y11 = std_reg(32);
    add139 = std_add(32);
    add140 = std_add(32);
    add141 = std_fp_sadd(32,16,16);
    add142 = std_add(32);
    add143 = std_add(32);
    add144 = std_add(32);
    add145 = std_add(32);
    add146 = std_add(32);
    add147 = std_add(32);
    add148 = std_add(32);
    and21 = std_and(1);
    and22 = std_and(1);
    and23 = std_and(1);
    bin_read10_0 = std_reg(32);
    bin_read8_0 = std_reg(32);
    bin_read9_0 = std_reg(32);
    const380 = std_const(32,0);
    const381 = std_const(32,0);
    const382 = std_const(32,0);
    const383 = std_const(32,127);
    const384 = std_const(32,0);
    const385 = std_const(32,111);
    const386 = std_const(32,0);
    const387 = std_const(32,111);
    const388 = std_const(32,0);
    const389 = std_const(32,63);
    const390 = std_const(32,0);
    const391 = std_const(32,2);
    const392 = std_const(32,0);
    const393 = std_const(32,2);
    const394 = std_const(32,1);
    const395 = std_const(32,1);
    const396 = std_const(32,1);
    const397 = std_const(32,113);
    const398 = std_const(32,1);
    const399 = std_const(32,113);
    const400 = std_const(32,1);
    const401 = std_const(32,1);
    const402 = std_const(32,1);
    const403 = std_const(32,1);
    const404 = std_const(32,1);
    const405 = std_const(32,1);
    const406 = std_const(32,1);
    const407 = std_const(32,1);
    const408 = std_const(32,1);
    fp_const20 = std_const(32,0);
    fp_const21 = std_const(32,0);
    ge14 = std_ge(32);
    ge15 = std_ge(32);
    le104 = std_le(32);
    le105 = std_le(32);
    le106 = std_le(32);
    le107 = std_le(32);
    le108 = std_le(32);
    le109 = std_le(32);
    le110 = std_le(32);
    lt14 = std_lt(32);
    lt15 = std_lt(32);
    mult_pipe30 = std_mult_pipe(32);
    mult_pipe31 = std_mult_pipe(32);
    mult_pipe32 = std_fp_smult_pipe(32,16,16);
    slice132 = std_slice(32,1);
    slice133 = std_slice(32,7);
    slice134 = std_slice(32,7);
    slice135 = std_slice(32,7);
    slice136 = std_slice(32,8);
    slice137 = std_slice(32,7);
    slice138 = std_slice(32,2);
    slice139 = std_slice(32,2);
    slice140 = std_slice(32,1);
    slice141 = std_slice(32,8);
    slice142 = std_slice(32,7);
    slice143 = std_slice(32,7);
    sub14 = std_sub(32);
    sub15 = std_sub(32);
    x_22_read0_0 = std_reg(32);
    x_23_read0_0 = std_reg(32);
  }
  wires {
    comb group cond118 {
      le104.left = __b11.out;
      le104.right = const381.out;
    }
    comb group cond119 {
      le105.left = __c11.out;
      le105.right = const383.out;
    }
    comb group cond120 {
      le106.left = __y11.out;
      le106.right = const385.out;
    }
    comb group cond121 {
      le107.left = __x11.out;
      le107.right = const387.out;
    }
    comb group cond122 {
      le108.left = __k14.out;
      le108.right = const389.out;
    }
    comb group cond123 {
      le109.left = __dy7.out;
      le109.right = const391.out;
    }
    comb group cond124 {
      le110.left = __dx7.out;
      le110.right = const393.out;
    }
    comb group cond125 {
      and23.left = and22.out;
      and23.right = lt15.out;
      and22.left = and21.out;
      and22.right = ge15.out;
      and21.left = ge14.out;
      and21.right = lt14.out;
      ge14.left = __kernel_y_7.out;
      ge14.right = const396.out;
      lt14.left = __kernel_y_7.out;
      lt14.right = const397.out;
      ge15.left = __kernel_x_7.out;
      ge15.right = const398.out;
      lt15.left = __kernel_x_7.out;
      lt15.right = const399.out;
    }
    group let220<"static"=1> {
      __b11.in = const380.out;
      __b11.write_en = 1'd1;
      let220[done] = __b11.done;
    }
    group let221<"static"=1> {
      __c11.in = const382.out;
      __c11.write_en = 1'd1;
      let221[done] = __c11.done;
    }
    group let222<"static"=1> {
      __y11.in = const384.out;
      __y11.write_en = 1'd1;
      let222[done] = __y11.done;
    }
    group let223<"static"=1> {
      __x11.in = const386.out;
      __x11.write_en = 1'd1;
      let223[done] = __x11.done;
    }
    group let224<"static"=1> {
      __sum_7.in = fp_const20.out;
      __sum_7.write_en = 1'd1;
      let224[done] = __sum_7.done;
    }
    group let225<"static"=1> {
      __k14.in = const388.out;
      __k14.write_en = 1'd1;
      let225[done] = __k14.done;
    }
    group let226<"static"=1> {
      __dy7.in = const390.out;
      __dy7.write_en = 1'd1;
      let226[done] = __dy7.done;
    }
    group let227<"static"=1> {
      __dx7.in = const392.out;
      __dx7.write_en = 1'd1;
      let227[done] = __dx7.done;
    }
    group let228<"static"=4> {
      bin_read8_0.in = mult_pipe30.out;
      bin_read8_0.write_en = mult_pipe30.done;
      let228[done] = bin_read8_0.done;
      mult_pipe30.left = const394.out;
      mult_pipe30.right = __y11.out;
      mult_pipe30.go = !mult_pipe30.done ? 1'd1;
    }
    group let229<"static"=1> {
      __kernel_y_7.in = add139.out;
      __kernel_y_7.write_en = 1'd1;
      let229[done] = __kernel_y_7.done;
      add139.left = bin_read8_0.out;
      add139.right = __dy7.out;
    }
    group let230<"static"=4> {
      bin_read9_0.in = mult_pipe31.out;
      bin_read9_0.write_en = mult_pipe31.done;
      let230[done] = bin_read9_0.done;
      mult_pipe31.left = const395.out;
      mult_pipe31.right = __x11.out;
      mult_pipe31.go = !mult_pipe31.done ? 1'd1;
    }
    group let231<"static"=1> {
      __kernel_x_7.in = add140.out;
      __kernel_x_7.write_en = 1'd1;
      let231[done] = __kernel_x_7.done;
      add140.left = bin_read9_0.out;
      add140.right = __dx7.out;
    }
    group let232<"static"=1> {
      __padded_tensor_val_7.in = fp_const21.out;
      __padded_tensor_val_7.write_en = 1'd1;
      let232[done] = __padded_tensor_val_7.done;
    }
    group let233<"static"=2> {
      x_22_read0_0.in = x_22.read_data;
      x_22_read0_0.write_en = x_22.read_done;
      let233[done] = x_22_read0_0.done;
      x_22.addr3 = slice135.out;
      slice135.in = sub15.out;
      sub15.left = __kernel_x_7.out;
      sub15.right = const401.out;
      x_22.addr2 = slice134.out;
      slice134.in = sub14.out;
      sub14.left = __kernel_y_7.out;
      sub14.right = const400.out;
      x_22.addr1 = slice133.out;
      slice133.in = __k14.out;
      x_22.addr0 = slice132.out;
      slice132.in = __b11.out;
      x_22.read_en = 1'd1;
    }
    group let234<"static"=2> {
      x_23_read0_0.in = x_23.read_data;
      x_23_read0_0.write_en = x_23.read_done;
      let234[done] = x_23_read0_0.done;
      x_23.addr3 = slice139.out;
      slice139.in = __dx7.out;
      x_23.addr2 = slice138.out;
      slice138.in = __dy7.out;
      x_23.addr1 = slice137.out;
      slice137.in = __k14.out;
      x_23.addr0 = slice136.out;
      slice136.in = __c11.out;
      x_23.read_en = 1'd1;
    }
    group let235<"static"=4> {
      bin_read10_0.in = mult_pipe32.out;
      bin_read10_0.write_en = mult_pipe32.done;
      let235[done] = bin_read10_0.done;
      mult_pipe32.left = __padded_tensor_val_7.out;
      mult_pipe32.right = x_23_read0_0.out;
      mult_pipe32.go = !mult_pipe32.done ? 1'd1;
    }
    group upd147<"static"=1> {
      __padded_tensor_val_7.write_en = 1'd1;
      __padded_tensor_val_7.in = x_22_read0_0.out;
      upd147[done] = __padded_tensor_val_7.done;
    }
    group upd148<"static"=1> {
      __sum_7.write_en = 1'd1;
      add141.left = __sum_7.out;
      add141.right = bin_read10_0.out;
      __sum_7.in = add141.out;
      upd148[done] = __sum_7.done;
    }
    group upd149<"static"=1> {
      __dx7.write_en = 1'd1;
      add142.left = __dx7.out;
      add142.right = const402.out;
      __dx7.in = add142.out;
      upd149[done] = __dx7.done;
    }
    group upd150<"static"=1> {
      __dy7.write_en = 1'd1;
      add143.left = __dy7.out;
      add143.right = const403.out;
      __dy7.in = add143.out;
      upd150[done] = __dy7.done;
    }
    group upd151<"static"=1> {
      __k14.write_en = 1'd1;
      add144.left = __k14.out;
      add144.right = const404.out;
      __k14.in = add144.out;
      upd151[done] = __k14.done;
    }
    group upd152<"static"=1> {
      x_24.addr3 = slice143.out;
      slice143.in = __x11.out;
      x_24.addr2 = slice142.out;
      slice142.in = __y11.out;
      x_24.addr1 = slice141.out;
      slice141.in = __c11.out;
      x_24.addr0 = slice140.out;
      slice140.in = __b11.out;
      x_24.write_en = 1'd1;
      x_24.write_data = __sum_7.out;
      upd152[done] = x_24.write_done;
    }
    group upd153<"static"=1> {
      __x11.write_en = 1'd1;
      add145.left = __x11.out;
      add145.right = const405.out;
      __x11.in = add145.out;
      upd153[done] = __x11.done;
    }
    group upd154<"static"=1> {
      __y11.write_en = 1'd1;
      add146.left = __y11.out;
      add146.right = const406.out;
      __y11.in = add146.out;
      upd154[done] = __y11.done;
    }
    group upd155<"static"=1> {
      __c11.write_en = 1'd1;
      add147.left = __c11.out;
      add147.right = const407.out;
      __c11.in = add147.out;
      upd155[done] = __c11.done;
    }
    group upd156<"static"=1> {
      __b11.write_en = 1'd1;
      add148.left = __b11.out;
      add148.right = const408.out;
      __b11.in = add148.out;
      upd156[done] = __b11.done;
    }
  }
  control {
    seq {
      @pos(201) let220;
      @bound(1) while le104.out with cond118 {
        seq {
          @pos(202) let221;
          @bound(128) while le105.out with cond119 {
            seq {
              @pos(203) let222;
              @bound(112) while le106.out with cond120 {
                seq {
                  @pos(204) let223;
                  @bound(112) while le107.out with cond121 {
                    seq {
                      @pos(205) let224;
                      @pos(206) let225;
                      @bound(64) while le108.out with cond122 {
                        seq {
                          @pos(207) let226;
                          @bound(3) while le109.out with cond123 {
                            seq {
                              @pos(208) let227;
                              @bound(3) while le110.out with cond124 {
                                seq {
                                  par {
                                    seq {
                                      let228;
                                      let229;
                                    }
                                    seq {
                                      let230;
                                      let231;
                                    }
                                  }
                                  @pos(209) let232;
                                  if and23.out with cond125 {
                                    seq {
                                      @pos(210) let233;
                                      @pos(211) upd147;
                                    }
                                  }
                                  @pos(212) let234;
                                  let235;
                                  upd148;
                                  @pos(208) upd149;
                                }
                              }
                              @pos(207) upd150;
                            }
                          }
                          @pos(206) upd151;
                        }
                      }
                      @pos(213) upd152;
                      @pos(204) upd153;
                    }
                  }
                  @pos(203) upd154;
                }
              }
              @pos(202) upd155;
            }
          }
          @pos(201) upd156;
        }
      }
    }
  }
}
component dense_1x4096_1() -> () {
  cells {
    ref x_88 = seq_mem_d2(32,1,4096,1,13);
    ref x_89 = seq_mem_d2(32,4096,4096,13,13);
    ref x_90 = seq_mem_d2(32,1,4096,1,13);
    __i9 = std_reg(1);
    __j9 = std_reg(13);
    __k15 = std_reg(13);
    __product_1 = std_reg(32);
    add149 = std_fp_sadd(32,16,16);
    add150 = std_add(13);
    add151 = std_add(13);
    add152 = std_add(1);
    bin_read38_0 = std_reg(32);
    const409 = std_const(1,0);
    const410 = std_const(1,0);
    const411 = std_const(13,0);
    const412 = std_const(13,4095);
    const413 = std_const(13,0);
    const414 = std_const(13,4095);
    const415 = std_const(13,1);
    const416 = std_const(13,1);
    const417 = std_const(1,1);
    le111 = std_le(1);
    le112 = std_le(13);
    le113 = std_le(13);
    mult_pipe33 = std_fp_smult_pipe(32,16,16);
    red_read10 = std_reg(32);
    x_88_read0_0 = std_reg(32);
    x_89_read0_0 = std_reg(32);
  }
  wires {
    comb group cond126 {
      le111.left = __i9.out;
      le111.right = const410.out;
    }
    comb group cond127 {
      le112.left = __j9.out;
      le112.right = const412.out;
    }
    comb group cond128 {
      le113.left = __k15.out;
      le113.right = const414.out;
    }
    group let236<"static"=1> {
      __i9.in = const409.out;
      __i9.write_en = 1'd1;
      let236[done] = __i9.done;
    }
    group let237<"static"=1> {
      __j9.in = const411.out;
      __j9.write_en = 1'd1;
      let237[done] = __j9.done;
    }
    group let238<"static"=1> {
      __k15.in = const413.out;
      __k15.write_en = 1'd1;
      let238[done] = __k15.done;
    }
    group let239<"static"=2> {
      x_88_read0_0.in = x_88.read_data;
      x_88_read0_0.write_en = x_88.read_done;
      let239[done] = x_88_read0_0.done;
      x_88.addr1 = __k15.out;
      x_88.addr0 = __i9.out;
      x_88.read_en = 1'd1;
    }
    group let240<"static"=2> {
      x_89_read0_0.in = x_89.read_data;
      x_89_read0_0.write_en = x_89.read_done;
      let240[done] = x_89_read0_0.done;
      x_89.addr1 = __k15.out;
      x_89.addr0 = __j9.out;
      x_89.read_en = 1'd1;
    }
    group let241<"static"=4> {
      bin_read38_0.in = mult_pipe33.out;
      bin_read38_0.write_en = mult_pipe33.done;
      let241[done] = bin_read38_0.done;
      mult_pipe33.left = x_88_read0_0.out;
      mult_pipe33.right = x_89_read0_0.out;
      mult_pipe33.go = !mult_pipe33.done ? 1'd1;
    }
    group let242<"static"=1> {
      __product_1.in = bin_read38_0.out;
      __product_1.write_en = 1'd1;
      let242[done] = __product_1.done;
    }
    group let243<"static"=2> {
      red_read10.in = x_90.read_data;
      red_read10.write_en = x_90.read_done;
      let243[done] = red_read10.done;
      x_90.addr1 = __j9.out;
      x_90.addr0 = __i9.out;
      x_90.read_en = 1'd1;
    }
    group upd157<"static"=1> {
      x_90.addr1 = __j9.out;
      x_90.addr0 = __i9.out;
      x_90.write_en = 1'd1;
      add149.left = red_read10.out;
      add149.right = __product_1.out;
      x_90.write_data = add149.out;
      upd157[done] = x_90.write_done;
    }
    group upd158<"static"=1> {
      __k15.write_en = 1'd1;
      add150.left = __k15.out;
      add150.right = const415.out;
      __k15.in = add150.out;
      upd158[done] = __k15.done;
    }
    group upd159<"static"=1> {
      __j9.write_en = 1'd1;
      add151.left = __j9.out;
      add151.right = const416.out;
      __j9.in = add151.out;
      upd159[done] = __j9.done;
    }
    group upd160<"static"=1> {
      __i9.write_en = 1'd1;
      add152.left = __i9.out;
      add152.right = const417.out;
      __i9.in = add152.out;
      upd160[done] = __i9.done;
    }
  }
  control {
    seq {
      @pos(214) let236;
      @bound(1) while le111.out with cond126 {
        seq {
          @pos(215) let237;
          @bound(4096) while le112.out with cond127 {
            seq {
              @pos(216) let238;
              @bound(4096) while le113.out with cond128 {
                seq {
                  par {
                    @pos(217) let239;
                    @pos(218) let240;
                  }
                  let241;
                  let242;
                  let243;
                  upd157;
                  @pos(216) upd158;
                }
              }
              @pos(215) upd159;
            }
          }
          @pos(214) upd160;
        }
      }
    }
  }
}
component relu_1x4096() -> () {
  cells {
    ref x_86 = seq_mem_d2(32,1,4096,1,13);
    ref x_87 = seq_mem_d2(32,1,4096,1,13);
    __i10 = std_reg(1);
    __j10 = std_reg(13);
    add153 = std_add(13);
    add154 = std_add(1);
    const418 = std_const(1,0);
    const419 = std_const(1,0);
    const420 = std_const(13,0);
    const421 = std_const(13,4095);
    const422 = std_const(13,1);
    const423 = std_const(1,1);
    fp_const22 = std_const(32,0);
    fp_const23 = std_const(32,0);
    gt7 = std_fp_sgt(32,16,16);
    le114 = std_le(1);
    le115 = std_le(13);
    x_86_read0_0 = std_reg(32);
    x_86_read1_0 = std_reg(32);
  }
  wires {
    comb group cond129 {
      le114.left = __i10.out;
      le114.right = const419.out;
    }
    comb group cond130 {
      le115.left = __j10.out;
      le115.right = const421.out;
    }
    comb group cond131 {
      gt7.left = x_86_read0_0.out;
      gt7.right = fp_const22.out;
    }
    group let244<"static"=1> {
      __i10.in = const418.out;
      __i10.write_en = 1'd1;
      let244[done] = __i10.done;
    }
    group let245<"static"=1> {
      __j10.in = const420.out;
      __j10.write_en = 1'd1;
      let245[done] = __j10.done;
    }
    group let246<"static"=2> {
      x_86_read0_0.in = x_86.read_data;
      x_86_read0_0.write_en = x_86.read_done;
      let246[done] = x_86_read0_0.done;
      x_86.addr1 = __j10.out;
      x_86.addr0 = __i10.out;
      x_86.read_en = 1'd1;
    }
    group let247<"static"=2> {
      x_86_read1_0.in = x_86.read_data;
      x_86_read1_0.write_en = x_86.read_done;
      let247[done] = x_86_read1_0.done;
      x_86.addr1 = __j10.out;
      x_86.addr0 = __i10.out;
      x_86.read_en = 1'd1;
    }
    group upd161<"static"=1> {
      x_87.addr1 = __j10.out;
      x_87.addr0 = __i10.out;
      x_87.write_en = 1'd1;
      x_87.write_data = x_86_read1_0.out;
      upd161[done] = x_87.write_done;
    }
    group upd162<"static"=1> {
      x_87.addr1 = __j10.out;
      x_87.addr0 = __i10.out;
      x_87.write_en = 1'd1;
      x_87.write_data = fp_const23.out;
      upd162[done] = x_87.write_done;
    }
    group upd163<"static"=1> {
      __j10.write_en = 1'd1;
      add153.left = __j10.out;
      add153.right = const422.out;
      __j10.in = add153.out;
      upd163[done] = __j10.done;
    }
    group upd164<"static"=1> {
      __i10.write_en = 1'd1;
      add154.left = __i10.out;
      add154.right = const423.out;
      __i10.in = add154.out;
      upd164[done] = __i10.done;
    }
  }
  control {
    seq {
      @pos(219) let244;
      @bound(1) while le114.out with cond129 {
        seq {
          @pos(220) let245;
          @bound(4096) while le115.out with cond130 {
            seq {
              @pos(221) let246;
              if gt7.out with cond131 {
                seq {
                  @pos(222) let247;
                  @pos(223) upd161;
                }
              } else {
                @pos(224) upd162;
              }
              @pos(220) upd163;
            }
          }
          @pos(219) upd164;
        }
      }
    }
  }
}
component relu_1x64x224x224() -> () {
  cells {
    ref x_15 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    ref x_16 = seq_mem_d4(32,1,64,224,224,1,7,8,8);
    __i11 = std_reg(1);
    __j11 = std_reg(7);
    __k16 = std_reg(8);
    __l6 = std_reg(8);
    add155 = std_add(8);
    add156 = std_add(8);
    add157 = std_add(7);
    add158 = std_add(1);
    const424 = std_const(1,0);
    const425 = std_const(1,0);
    const426 = std_const(7,0);
    const427 = std_const(7,63);
    const428 = std_const(8,0);
    const429 = std_const(8,223);
    const430 = std_const(8,0);
    const431 = std_const(8,223);
    const432 = std_const(8,1);
    const433 = std_const(8,1);
    const434 = std_const(7,1);
    const435 = std_const(1,1);
    fp_const24 = std_const(32,0);
    fp_const25 = std_const(32,0);
    gt8 = std_fp_sgt(32,16,16);
    le116 = std_le(1);
    le117 = std_le(7);
    le118 = std_le(8);
    le119 = std_le(8);
    x_15_read0_0 = std_reg(32);
    x_15_read1_0 = std_reg(32);
  }
  wires {
    comb group cond132 {
      le116.left = __i11.out;
      le116.right = const425.out;
    }
    comb group cond133 {
      le117.left = __j11.out;
      le117.right = const427.out;
    }
    comb group cond134 {
      le118.left = __k16.out;
      le118.right = const429.out;
    }
    comb group cond135 {
      le119.left = __l6.out;
      le119.right = const431.out;
    }
    comb group cond136 {
      gt8.left = x_15_read0_0.out;
      gt8.right = fp_const24.out;
    }
    group let248<"static"=1> {
      __i11.in = const424.out;
      __i11.write_en = 1'd1;
      let248[done] = __i11.done;
    }
    group let249<"static"=1> {
      __j11.in = const426.out;
      __j11.write_en = 1'd1;
      let249[done] = __j11.done;
    }
    group let250<"static"=1> {
      __k16.in = const428.out;
      __k16.write_en = 1'd1;
      let250[done] = __k16.done;
    }
    group let251<"static"=1> {
      __l6.in = const430.out;
      __l6.write_en = 1'd1;
      let251[done] = __l6.done;
    }
    group let252<"static"=2> {
      x_15_read0_0.in = x_15.read_data;
      x_15_read0_0.write_en = x_15.read_done;
      let252[done] = x_15_read0_0.done;
      x_15.addr3 = __l6.out;
      x_15.addr2 = __k16.out;
      x_15.addr1 = __j11.out;
      x_15.addr0 = __i11.out;
      x_15.read_en = 1'd1;
    }
    group let253<"static"=2> {
      x_15_read1_0.in = x_15.read_data;
      x_15_read1_0.write_en = x_15.read_done;
      let253[done] = x_15_read1_0.done;
      x_15.addr3 = __l6.out;
      x_15.addr2 = __k16.out;
      x_15.addr1 = __j11.out;
      x_15.addr0 = __i11.out;
      x_15.read_en = 1'd1;
    }
    group upd165<"static"=1> {
      x_16.addr3 = __l6.out;
      x_16.addr2 = __k16.out;
      x_16.addr1 = __j11.out;
      x_16.addr0 = __i11.out;
      x_16.write_en = 1'd1;
      x_16.write_data = x_15_read1_0.out;
      upd165[done] = x_16.write_done;
    }
    group upd166<"static"=1> {
      x_16.addr3 = __l6.out;
      x_16.addr2 = __k16.out;
      x_16.addr1 = __j11.out;
      x_16.addr0 = __i11.out;
      x_16.write_en = 1'd1;
      x_16.write_data = fp_const25.out;
      upd166[done] = x_16.write_done;
    }
    group upd167<"static"=1> {
      __l6.write_en = 1'd1;
      add155.left = __l6.out;
      add155.right = const432.out;
      __l6.in = add155.out;
      upd167[done] = __l6.done;
    }
    group upd168<"static"=1> {
      __k16.write_en = 1'd1;
      add156.left = __k16.out;
      add156.right = const433.out;
      __k16.in = add156.out;
      upd168[done] = __k16.done;
    }
    group upd169<"static"=1> {
      __j11.write_en = 1'd1;
      add157.left = __j11.out;
      add157.right = const434.out;
      __j11.in = add157.out;
      upd169[done] = __j11.done;
    }
    group upd170<"static"=1> {
      __i11.write_en = 1'd1;
      add158.left = __i11.out;
      add158.right = const435.out;
      __i11.in = add158.out;
      upd170[done] = __i11.done;
    }
  }
  control {
    seq {
      @pos(225) let248;
      @bound(1) while le116.out with cond132 {
        seq {
          @pos(226) let249;
          @bound(64) while le117.out with cond133 {
            seq {
              @pos(227) let250;
              @bound(224) while le118.out with cond134 {
                seq {
                  @pos(228) let251;
                  @bound(224) while le119.out with cond135 {
                    seq {
                      @pos(229) let252;
                      if gt8.out with cond136 {
                        seq {
                          @pos(230) let253;
                          @pos(231) upd165;
                        }
                      } else {
                        @pos(232) upd166;
                      }
                      @pos(228) upd167;
                    }
                  }
                  @pos(227) upd168;
                }
              }
              @pos(226) upd169;
            }
          }
          @pos(225) upd170;
        }
      }
    }
  }
}
component dense_1x1000() -> () {
  cells {
    ref x_94 = seq_mem_d2(32,1,4096,1,13);
    ref x_95 = seq_mem_d2(32,1000,4096,10,13);
    ref x_96 = seq_mem_d2(32,1,1000,1,10);
    __i12 = std_reg(1);
    __j12 = std_reg(10);
    __k17 = std_reg(13);
    __product_2 = std_reg(32);
    add159 = std_fp_sadd(32,16,16);
    add160 = std_add(13);
    add161 = std_add(10);
    add162 = std_add(1);
    bin_read39_0 = std_reg(32);
    const436 = std_const(1,0);
    const437 = std_const(1,0);
    const438 = std_const(10,0);
    const439 = std_const(10,999);
    const440 = std_const(13,0);
    const441 = std_const(13,4095);
    const442 = std_const(13,1);
    const443 = std_const(10,1);
    const444 = std_const(1,1);
    le120 = std_le(1);
    le121 = std_le(10);
    le122 = std_le(13);
    mult_pipe34 = std_fp_smult_pipe(32,16,16);
    red_read20 = std_reg(32);
    x_94_read0_0 = std_reg(32);
    x_95_read0_0 = std_reg(32);
  }
  wires {
    comb group cond137 {
      le120.left = __i12.out;
      le120.right = const437.out;
    }
    comb group cond138 {
      le121.left = __j12.out;
      le121.right = const439.out;
    }
    comb group cond139 {
      le122.left = __k17.out;
      le122.right = const441.out;
    }
    group let254<"static"=1> {
      __i12.in = const436.out;
      __i12.write_en = 1'd1;
      let254[done] = __i12.done;
    }
    group let255<"static"=1> {
      __j12.in = const438.out;
      __j12.write_en = 1'd1;
      let255[done] = __j12.done;
    }
    group let256<"static"=1> {
      __k17.in = const440.out;
      __k17.write_en = 1'd1;
      let256[done] = __k17.done;
    }
    group let257<"static"=2> {
      x_94_read0_0.in = x_94.read_data;
      x_94_read0_0.write_en = x_94.read_done;
      let257[done] = x_94_read0_0.done;
      x_94.addr1 = __k17.out;
      x_94.addr0 = __i12.out;
      x_94.read_en = 1'd1;
    }
    group let258<"static"=2> {
      x_95_read0_0.in = x_95.read_data;
      x_95_read0_0.write_en = x_95.read_done;
      let258[done] = x_95_read0_0.done;
      x_95.addr1 = __k17.out;
      x_95.addr0 = __j12.out;
      x_95.read_en = 1'd1;
    }
    group let259<"static"=4> {
      bin_read39_0.in = mult_pipe34.out;
      bin_read39_0.write_en = mult_pipe34.done;
      let259[done] = bin_read39_0.done;
      mult_pipe34.left = x_94_read0_0.out;
      mult_pipe34.right = x_95_read0_0.out;
      mult_pipe34.go = !mult_pipe34.done ? 1'd1;
    }
    group let260<"static"=1> {
      __product_2.in = bin_read39_0.out;
      __product_2.write_en = 1'd1;
      let260[done] = __product_2.done;
    }
    group let261<"static"=2> {
      red_read20.in = x_96.read_data;
      red_read20.write_en = x_96.read_done;
      let261[done] = red_read20.done;
      x_96.addr1 = __j12.out;
      x_96.addr0 = __i12.out;
      x_96.read_en = 1'd1;
    }
    group upd171<"static"=1> {
      x_96.addr1 = __j12.out;
      x_96.addr0 = __i12.out;
      x_96.write_en = 1'd1;
      add159.left = red_read20.out;
      add159.right = __product_2.out;
      x_96.write_data = add159.out;
      upd171[done] = x_96.write_done;
    }
    group upd172<"static"=1> {
      __k17.write_en = 1'd1;
      add160.left = __k17.out;
      add160.right = const442.out;
      __k17.in = add160.out;
      upd172[done] = __k17.done;
    }
    group upd173<"static"=1> {
      __j12.write_en = 1'd1;
      add161.left = __j12.out;
      add161.right = const443.out;
      __j12.in = add161.out;
      upd173[done] = __j12.done;
    }
    group upd174<"static"=1> {
      __i12.write_en = 1'd1;
      add162.left = __i12.out;
      add162.right = const444.out;
      __i12.in = add162.out;
      upd174[done] = __i12.done;
    }
  }
  control {
    seq {
      @pos(233) let254;
      @bound(1) while le120.out with cond137 {
        seq {
          @pos(234) let255;
          @bound(1000) while le121.out with cond138 {
            seq {
              @pos(235) let256;
              @bound(4096) while le122.out with cond139 {
                seq {
                  par {
                    @pos(236) let257;
                    @pos(237) let258;
                  }
                  let259;
                  let260;
                  let261;
                  upd171;
                  @pos(235) upd172;
                }
              }
              @pos(234) upd173;
            }
          }
          @pos(233) upd174;
        }
      }
    }
  }
}
component relu_1x512x14x14() -> () {
  cells {
    ref x_69 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    ref x_70 = seq_mem_d4(32,1,512,14,14,1,10,4,4);
    __i13 = std_reg(1);
    __j13 = std_reg(10);
    __k18 = std_reg(4);
    __l7 = std_reg(4);
    add163 = std_add(4);
    add164 = std_add(4);
    add165 = std_add(10);
    add166 = std_add(1);
    const445 = std_const(1,0);
    const446 = std_const(1,0);
    const447 = std_const(10,0);
    const448 = std_const(10,511);
    const449 = std_const(4,0);
    const450 = std_const(4,13);
    const451 = std_const(4,0);
    const452 = std_const(4,13);
    const453 = std_const(4,1);
    const454 = std_const(4,1);
    const455 = std_const(10,1);
    const456 = std_const(1,1);
    fp_const26 = std_const(32,0);
    fp_const27 = std_const(32,0);
    gt9 = std_fp_sgt(32,16,16);
    le123 = std_le(1);
    le124 = std_le(10);
    le125 = std_le(4);
    le126 = std_le(4);
    x_69_read0_0 = std_reg(32);
    x_69_read1_0 = std_reg(32);
  }
  wires {
    comb group cond140 {
      le123.left = __i13.out;
      le123.right = const446.out;
    }
    comb group cond141 {
      le124.left = __j13.out;
      le124.right = const448.out;
    }
    comb group cond142 {
      le125.left = __k18.out;
      le125.right = const450.out;
    }
    comb group cond143 {
      le126.left = __l7.out;
      le126.right = const452.out;
    }
    comb group cond144 {
      gt9.left = x_69_read0_0.out;
      gt9.right = fp_const26.out;
    }
    group let262<"static"=1> {
      __i13.in = const445.out;
      __i13.write_en = 1'd1;
      let262[done] = __i13.done;
    }
    group let263<"static"=1> {
      __j13.in = const447.out;
      __j13.write_en = 1'd1;
      let263[done] = __j13.done;
    }
    group let264<"static"=1> {
      __k18.in = const449.out;
      __k18.write_en = 1'd1;
      let264[done] = __k18.done;
    }
    group let265<"static"=1> {
      __l7.in = const451.out;
      __l7.write_en = 1'd1;
      let265[done] = __l7.done;
    }
    group let266<"static"=2> {
      x_69_read0_0.in = x_69.read_data;
      x_69_read0_0.write_en = x_69.read_done;
      let266[done] = x_69_read0_0.done;
      x_69.addr3 = __l7.out;
      x_69.addr2 = __k18.out;
      x_69.addr1 = __j13.out;
      x_69.addr0 = __i13.out;
      x_69.read_en = 1'd1;
    }
    group let267<"static"=2> {
      x_69_read1_0.in = x_69.read_data;
      x_69_read1_0.write_en = x_69.read_done;
      let267[done] = x_69_read1_0.done;
      x_69.addr3 = __l7.out;
      x_69.addr2 = __k18.out;
      x_69.addr1 = __j13.out;
      x_69.addr0 = __i13.out;
      x_69.read_en = 1'd1;
    }
    group upd175<"static"=1> {
      x_70.addr3 = __l7.out;
      x_70.addr2 = __k18.out;
      x_70.addr1 = __j13.out;
      x_70.addr0 = __i13.out;
      x_70.write_en = 1'd1;
      x_70.write_data = x_69_read1_0.out;
      upd175[done] = x_70.write_done;
    }
    group upd176<"static"=1> {
      x_70.addr3 = __l7.out;
      x_70.addr2 = __k18.out;
      x_70.addr1 = __j13.out;
      x_70.addr0 = __i13.out;
      x_70.write_en = 1'd1;
      x_70.write_data = fp_const27.out;
      upd176[done] = x_70.write_done;
    }
    group upd177<"static"=1> {
      __l7.write_en = 1'd1;
      add163.left = __l7.out;
      add163.right = const453.out;
      __l7.in = add163.out;
      upd177[done] = __l7.done;
    }
    group upd178<"static"=1> {
      __k18.write_en = 1'd1;
      add164.left = __k18.out;
      add164.right = const454.out;
      __k18.in = add164.out;
      upd178[done] = __k18.done;
    }
    group upd179<"static"=1> {
      __j13.write_en = 1'd1;
      add165.left = __j13.out;
      add165.right = const455.out;
      __j13.in = add165.out;
      upd179[done] = __j13.done;
    }
    group upd180<"static"=1> {
      __i13.write_en = 1'd1;
      add166.left = __i13.out;
      add166.right = const456.out;
      __i13.in = add166.out;
      upd180[done] = __i13.done;
    }
  }
  control {
    seq {
      @pos(238) let262;
      @bound(1) while le123.out with cond140 {
        seq {
          @pos(239) let263;
          @bound(512) while le124.out with cond141 {
            seq {
              @pos(240) let264;
              @bound(14) while le125.out with cond142 {
                seq {
                  @pos(241) let265;
                  @bound(14) while le126.out with cond143 {
                    seq {
                      @pos(242) let266;
                      if gt9.out with cond144 {
                        seq {
                          @pos(243) let267;
                          @pos(244) upd175;
                        }
                      } else {
                        @pos(245) upd176;
                      }
                      @pos(241) upd177;
                    }
                  }
                  @pos(240) upd178;
                }
              }
              @pos(239) upd179;
            }
          }
          @pos(238) upd180;
        }
      }
    }
  }
}
component bias_add_1x512x28x28() -> () {
  cells {
    ref x_51 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    ref x_52 = seq_mem_d1(32,512,10);
    ref x_53 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    __i14 = std_reg(1);
    __j14 = std_reg(10);
    __k19 = std_reg(5);
    __l8 = std_reg(5);
    add167 = std_fp_sadd(32,16,16);
    add168 = std_add(5);
    add169 = std_add(5);
    add170 = std_add(10);
    add171 = std_add(1);
    const457 = std_const(1,0);
    const458 = std_const(1,0);
    const459 = std_const(10,0);
    const460 = std_const(10,511);
    const461 = std_const(5,0);
    const462 = std_const(5,27);
    const463 = std_const(5,0);
    const464 = std_const(5,27);
    const465 = std_const(5,1);
    const466 = std_const(5,1);
    const467 = std_const(10,1);
    const468 = std_const(1,1);
    le127 = std_le(1);
    le128 = std_le(10);
    le129 = std_le(5);
    le130 = std_le(5);
    x_51_read0_0 = std_reg(32);
    x_52_read0_0 = std_reg(32);
  }
  wires {
    comb group cond145 {
      le127.left = __i14.out;
      le127.right = const458.out;
    }
    comb group cond146 {
      le128.left = __j14.out;
      le128.right = const460.out;
    }
    comb group cond147 {
      le129.left = __k19.out;
      le129.right = const462.out;
    }
    comb group cond148 {
      le130.left = __l8.out;
      le130.right = const464.out;
    }
    group let268<"static"=1> {
      __i14.in = const457.out;
      __i14.write_en = 1'd1;
      let268[done] = __i14.done;
    }
    group let269<"static"=1> {
      __j14.in = const459.out;
      __j14.write_en = 1'd1;
      let269[done] = __j14.done;
    }
    group let270<"static"=1> {
      __k19.in = const461.out;
      __k19.write_en = 1'd1;
      let270[done] = __k19.done;
    }
    group let271<"static"=1> {
      __l8.in = const463.out;
      __l8.write_en = 1'd1;
      let271[done] = __l8.done;
    }
    group let272<"static"=2> {
      x_51_read0_0.in = x_51.read_data;
      x_51_read0_0.write_en = x_51.read_done;
      let272[done] = x_51_read0_0.done;
      x_51.addr3 = __l8.out;
      x_51.addr2 = __k19.out;
      x_51.addr1 = __j14.out;
      x_51.addr0 = __i14.out;
      x_51.read_en = 1'd1;
    }
    group let273<"static"=2> {
      x_52_read0_0.in = x_52.read_data;
      x_52_read0_0.write_en = x_52.read_done;
      let273[done] = x_52_read0_0.done;
      x_52.addr0 = __j14.out;
      x_52.read_en = 1'd1;
    }
    group upd181<"static"=1> {
      x_53.addr3 = __l8.out;
      x_53.addr2 = __k19.out;
      x_53.addr1 = __j14.out;
      x_53.addr0 = __i14.out;
      x_53.write_en = 1'd1;
      add167.left = x_51_read0_0.out;
      add167.right = x_52_read0_0.out;
      x_53.write_data = add167.out;
      upd181[done] = x_53.write_done;
    }
    group upd182<"static"=1> {
      __l8.write_en = 1'd1;
      add168.left = __l8.out;
      add168.right = const465.out;
      __l8.in = add168.out;
      upd182[done] = __l8.done;
    }
    group upd183<"static"=1> {
      __k19.write_en = 1'd1;
      add169.left = __k19.out;
      add169.right = const466.out;
      __k19.in = add169.out;
      upd183[done] = __k19.done;
    }
    group upd184<"static"=1> {
      __j14.write_en = 1'd1;
      add170.left = __j14.out;
      add170.right = const467.out;
      __j14.in = add170.out;
      upd184[done] = __j14.done;
    }
    group upd185<"static"=1> {
      __i14.write_en = 1'd1;
      add171.left = __i14.out;
      add171.right = const468.out;
      __i14.in = add171.out;
      upd185[done] = __i14.done;
    }
  }
  control {
    seq {
      @pos(246) let268;
      @bound(1) while le127.out with cond145 {
        seq {
          @pos(247) let269;
          @bound(512) while le128.out with cond146 {
            seq {
              @pos(248) let270;
              @bound(28) while le129.out with cond147 {
                seq {
                  @pos(249) let271;
                  @bound(28) while le130.out with cond148 {
                    seq {
                      par {
                        @pos(250) let272;
                        @pos(251) let273;
                      }
                      @pos(252) upd181;
                      @pos(249) upd182;
                    }
                  }
                  @pos(248) upd183;
                }
              }
              @pos(247) upd184;
            }
          }
          @pos(246) upd185;
        }
      }
    }
  }
}
component max_pool2d_1x128x56x56() -> () {
  cells {
    ref x_32 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    ref x_33 = seq_mem_d4(32,1,128,56,56,1,8,6,6);
    __b12 = std_reg(32);
    __c12 = std_reg(32);
    __current_4 = std_reg(32);
    __m4 = std_reg(32);
    __max_4 = std_reg(32);
    __n4 = std_reg(32);
    __pool_x_4 = std_reg(32);
    __pool_y_4 = std_reg(32);
    __stride_x_4 = std_reg(32);
    __stride_y_4 = std_reg(32);
    __x12 = std_reg(32);
    __y12 = std_reg(32);
    add172 = std_add(32);
    add173 = std_add(32);
    add174 = std_add(32);
    add175 = std_add(32);
    add176 = std_add(32);
    add177 = std_add(32);
    add178 = std_add(32);
    add179 = std_add(32);
    bin_read14_0 = std_reg(32);
    bin_read15_0 = std_reg(32);
    const469 = std_const(32,0);
    const470 = std_const(32,0);
    const471 = std_const(32,0);
    const472 = std_const(32,127);
    const473 = std_const(32,0);
    const474 = std_const(32,55);
    const475 = std_const(32,0);
    const476 = std_const(32,55);
    const477 = std_const(32,2);
    const478 = std_const(32,2);
    const479 = std_const(32,0);
    const480 = std_const(32,1);
    const481 = std_const(32,0);
    const482 = std_const(32,1);
    const483 = std_const(32,1);
    const484 = std_const(32,1);
    const485 = std_const(32,1);
    const486 = std_const(32,1);
    const487 = std_const(32,1);
    const488 = std_const(32,1);
    gt10 = std_fp_sgt(32,16,16);
    le131 = std_le(32);
    le132 = std_le(32);
    le133 = std_le(32);
    le134 = std_le(32);
    le135 = std_le(32);
    le136 = std_le(32);
    mult_pipe35 = std_mult_pipe(32);
    mult_pipe36 = std_mult_pipe(32);
    slice144 = std_slice(32,1);
    slice145 = std_slice(32,8);
    slice146 = std_slice(32,7);
    slice147 = std_slice(32,7);
    slice148 = std_slice(32,1);
    slice149 = std_slice(32,8);
    slice150 = std_slice(32,7);
    slice151 = std_slice(32,7);
    slice152 = std_slice(32,1);
    slice153 = std_slice(32,8);
    slice154 = std_slice(32,6);
    slice155 = std_slice(32,6);
  }
  wires {
    comb group cond149 {
      le131.left = __b12.out;
      le131.right = const470.out;
    }
    comb group cond150 {
      le132.left = __c12.out;
      le132.right = const472.out;
    }
    comb group cond151 {
      le133.left = __y12.out;
      le133.right = const474.out;
    }
    comb group cond152 {
      le134.left = __x12.out;
      le134.right = const476.out;
    }
    comb group cond153 {
      le135.left = __m4.out;
      le135.right = const480.out;
    }
    comb group cond154 {
      le136.left = __n4.out;
      le136.right = const482.out;
    }
    comb group cond155 {
      gt10.left = __current_4.out;
      gt10.right = __max_4.out;
    }
    group let274<"static"=1> {
      __b12.in = const469.out;
      __b12.write_en = 1'd1;
      let274[done] = __b12.done;
    }
    group let275<"static"=1> {
      __c12.in = const471.out;
      __c12.write_en = 1'd1;
      let275[done] = __c12.done;
    }
    group let276<"static"=1> {
      __y12.in = const473.out;
      __y12.write_en = 1'd1;
      let276[done] = __y12.done;
    }
    group let277<"static"=1> {
      __x12.in = const475.out;
      __x12.write_en = 1'd1;
      let277[done] = __x12.done;
    }
    group let278<"static"=4> {
      bin_read14_0.in = mult_pipe35.out;
      bin_read14_0.write_en = mult_pipe35.done;
      let278[done] = bin_read14_0.done;
      mult_pipe35.left = __y12.out;
      mult_pipe35.right = const477.out;
      mult_pipe35.go = !mult_pipe35.done ? 1'd1;
    }
    group let279<"static"=1> {
      __stride_y_4.in = bin_read14_0.out;
      __stride_y_4.write_en = 1'd1;
      let279[done] = __stride_y_4.done;
    }
    group let280<"static"=4> {
      bin_read15_0.in = mult_pipe36.out;
      bin_read15_0.write_en = mult_pipe36.done;
      let280[done] = bin_read15_0.done;
      mult_pipe36.left = __x12.out;
      mult_pipe36.right = const478.out;
      mult_pipe36.go = !mult_pipe36.done ? 1'd1;
    }
    group let281<"static"=1> {
      __stride_x_4.in = bin_read15_0.out;
      __stride_x_4.write_en = 1'd1;
      let281[done] = __stride_x_4.done;
    }
    group let282<"static"=2> {
      __max_4.in = x_32.read_data;
      __max_4.write_en = x_32.read_done;
      let282[done] = __max_4.done;
      x_32.addr3 = slice147.out;
      slice147.in = __stride_x_4.out;
      x_32.addr2 = slice146.out;
      slice146.in = __stride_y_4.out;
      x_32.addr1 = slice145.out;
      slice145.in = __c12.out;
      x_32.addr0 = slice144.out;
      slice144.in = __b12.out;
      x_32.read_en = 1'd1;
    }
    group let283<"static"=1> {
      __m4.in = const479.out;
      __m4.write_en = 1'd1;
      let283[done] = __m4.done;
    }
    group let284<"static"=1> {
      __n4.in = const481.out;
      __n4.write_en = 1'd1;
      let284[done] = __n4.done;
    }
    group let285<"static"=1> {
      __pool_y_4.in = add172.out;
      __pool_y_4.write_en = 1'd1;
      let285[done] = __pool_y_4.done;
      add172.left = __stride_y_4.out;
      add172.right = __m4.out;
    }
    group let286<"static"=1> {
      __pool_x_4.in = add173.out;
      __pool_x_4.write_en = 1'd1;
      let286[done] = __pool_x_4.done;
      add173.left = __stride_x_4.out;
      add173.right = __n4.out;
    }
    group let287<"static"=2> {
      __current_4.in = x_32.read_data;
      __current_4.write_en = x_32.read_done;
      let287[done] = __current_4.done;
      x_32.addr3 = slice151.out;
      slice151.in = __pool_x_4.out;
      x_32.addr2 = slice150.out;
      slice150.in = __pool_y_4.out;
      x_32.addr1 = slice149.out;
      slice149.in = __c12.out;
      x_32.addr0 = slice148.out;
      slice148.in = __b12.out;
      x_32.read_en = 1'd1;
    }
    group upd186<"static"=1> {
      __max_4.write_en = 1'd1;
      __max_4.in = __current_4.out;
      upd186[done] = __max_4.done;
    }
    group upd187<"static"=1> {
      __n4.write_en = 1'd1;
      add174.left = __n4.out;
      add174.right = const483.out;
      __n4.in = add174.out;
      upd187[done] = __n4.done;
    }
    group upd188<"static"=1> {
      __m4.write_en = 1'd1;
      add175.left = __m4.out;
      add175.right = const484.out;
      __m4.in = add175.out;
      upd188[done] = __m4.done;
    }
    group upd189<"static"=1> {
      x_33.addr3 = slice155.out;
      slice155.in = __x12.out;
      x_33.addr2 = slice154.out;
      slice154.in = __y12.out;
      x_33.addr1 = slice153.out;
      slice153.in = __c12.out;
      x_33.addr0 = slice152.out;
      slice152.in = __b12.out;
      x_33.write_en = 1'd1;
      x_33.write_data = __max_4.out;
      upd189[done] = x_33.write_done;
    }
    group upd190<"static"=1> {
      __x12.write_en = 1'd1;
      add176.left = __x12.out;
      add176.right = const485.out;
      __x12.in = add176.out;
      upd190[done] = __x12.done;
    }
    group upd191<"static"=1> {
      __y12.write_en = 1'd1;
      add177.left = __y12.out;
      add177.right = const486.out;
      __y12.in = add177.out;
      upd191[done] = __y12.done;
    }
    group upd192<"static"=1> {
      __c12.write_en = 1'd1;
      add178.left = __c12.out;
      add178.right = const487.out;
      __c12.in = add178.out;
      upd192[done] = __c12.done;
    }
    group upd193<"static"=1> {
      __b12.write_en = 1'd1;
      add179.left = __b12.out;
      add179.right = const488.out;
      __b12.in = add179.out;
      upd193[done] = __b12.done;
    }
  }
  control {
    seq {
      @pos(253) let274;
      @bound(1) while le131.out with cond149 {
        seq {
          @pos(254) let275;
          @bound(128) while le132.out with cond150 {
            seq {
              @pos(255) let276;
              @bound(56) while le133.out with cond151 {
                seq {
                  @pos(256) let277;
                  @bound(56) while le134.out with cond152 {
                    seq {
                      par {
                        seq {
                          let278;
                          let279;
                        }
                        seq {
                          let280;
                          let281;
                        }
                      }
                      @pos(257) let282;
                      @pos(258) let283;
                      @bound(2) while le135.out with cond153 {
                        seq {
                          @pos(259) let284;
                          @bound(2) while le136.out with cond154 {
                            seq {
                              par {
                                @pos(260) let285;
                                @pos(261) let286;
                              }
                              @pos(262) let287;
                              if gt10.out with cond155 {
                                @pos(263) upd186;
                              }
                              @pos(259) upd187;
                            }
                          }
                          @pos(258) upd188;
                        }
                      }
                      @pos(264) upd189;
                      @pos(256) upd190;
                    }
                  }
                  @pos(255) upd191;
                }
              }
              @pos(254) upd192;
            }
          }
          @pos(253) upd193;
        }
      }
    }
  }
}
component add_1x4096() -> () {
  cells {
    ref x_84 = seq_mem_d2(32,1,4096,1,13);
    ref x_85 = seq_mem_d1(32,4096,13);
    ref x_86 = seq_mem_d2(32,1,4096,1,13);
    __i15 = std_reg(1);
    __j15 = std_reg(13);
    add180 = std_fp_sadd(32,16,16);
    add181 = std_add(13);
    add182 = std_add(1);
    const489 = std_const(1,0);
    const490 = std_const(1,0);
    const491 = std_const(13,0);
    const492 = std_const(13,4095);
    const493 = std_const(13,1);
    const494 = std_const(1,1);
    le137 = std_le(1);
    le138 = std_le(13);
    x_84_read0_0 = std_reg(32);
    x_85_read0_0 = std_reg(32);
  }
  wires {
    comb group cond156 {
      le137.left = __i15.out;
      le137.right = const490.out;
    }
    comb group cond157 {
      le138.left = __j15.out;
      le138.right = const492.out;
    }
    group let288<"static"=1> {
      __i15.in = const489.out;
      __i15.write_en = 1'd1;
      let288[done] = __i15.done;
    }
    group let289<"static"=1> {
      __j15.in = const491.out;
      __j15.write_en = 1'd1;
      let289[done] = __j15.done;
    }
    group let290<"static"=2> {
      x_84_read0_0.in = x_84.read_data;
      x_84_read0_0.write_en = x_84.read_done;
      let290[done] = x_84_read0_0.done;
      x_84.addr1 = __j15.out;
      x_84.addr0 = __i15.out;
      x_84.read_en = 1'd1;
    }
    group let291<"static"=2> {
      x_85_read0_0.in = x_85.read_data;
      x_85_read0_0.write_en = x_85.read_done;
      let291[done] = x_85_read0_0.done;
      x_85.addr0 = __j15.out;
      x_85.read_en = 1'd1;
    }
    group upd194<"static"=1> {
      x_86.addr1 = __j15.out;
      x_86.addr0 = __i15.out;
      x_86.write_en = 1'd1;
      add180.left = x_84_read0_0.out;
      add180.right = x_85_read0_0.out;
      x_86.write_data = add180.out;
      upd194[done] = x_86.write_done;
    }
    group upd195<"static"=1> {
      __j15.write_en = 1'd1;
      add181.left = __j15.out;
      add181.right = const493.out;
      __j15.in = add181.out;
      upd195[done] = __j15.done;
    }
    group upd196<"static"=1> {
      __i15.write_en = 1'd1;
      add182.left = __i15.out;
      add182.right = const494.out;
      __i15.in = add182.out;
      upd196[done] = __i15.done;
    }
  }
  control {
    seq {
      @pos(265) let288;
      @bound(1) while le137.out with cond156 {
        seq {
          @pos(266) let289;
          @bound(4096) while le138.out with cond157 {
            seq {
              par {
                @pos(267) let290;
                @pos(268) let291;
              }
              @pos(269) upd194;
              @pos(266) upd195;
            }
          }
          @pos(265) upd196;
        }
      }
    }
  }
}
component bias_add_1x128x112x112() -> () {
  cells {
    ref x_24 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    ref x_25 = seq_mem_d1(32,128,8);
    ref x_26 = seq_mem_d4(32,1,128,112,112,1,8,7,7);
    __i16 = std_reg(1);
    __j16 = std_reg(8);
    __k20 = std_reg(7);
    __l9 = std_reg(7);
    add183 = std_fp_sadd(32,16,16);
    add184 = std_add(7);
    add185 = std_add(7);
    add186 = std_add(8);
    add187 = std_add(1);
    const495 = std_const(1,0);
    const496 = std_const(1,0);
    const497 = std_const(8,0);
    const498 = std_const(8,127);
    const499 = std_const(7,0);
    const500 = std_const(7,111);
    const501 = std_const(7,0);
    const502 = std_const(7,111);
    const503 = std_const(7,1);
    const504 = std_const(7,1);
    const505 = std_const(8,1);
    const506 = std_const(1,1);
    le139 = std_le(1);
    le140 = std_le(8);
    le141 = std_le(7);
    le142 = std_le(7);
    x_24_read0_0 = std_reg(32);
    x_25_read0_0 = std_reg(32);
  }
  wires {
    comb group cond158 {
      le139.left = __i16.out;
      le139.right = const496.out;
    }
    comb group cond159 {
      le140.left = __j16.out;
      le140.right = const498.out;
    }
    comb group cond160 {
      le141.left = __k20.out;
      le141.right = const500.out;
    }
    comb group cond161 {
      le142.left = __l9.out;
      le142.right = const502.out;
    }
    group let292<"static"=1> {
      __i16.in = const495.out;
      __i16.write_en = 1'd1;
      let292[done] = __i16.done;
    }
    group let293<"static"=1> {
      __j16.in = const497.out;
      __j16.write_en = 1'd1;
      let293[done] = __j16.done;
    }
    group let294<"static"=1> {
      __k20.in = const499.out;
      __k20.write_en = 1'd1;
      let294[done] = __k20.done;
    }
    group let295<"static"=1> {
      __l9.in = const501.out;
      __l9.write_en = 1'd1;
      let295[done] = __l9.done;
    }
    group let296<"static"=2> {
      x_24_read0_0.in = x_24.read_data;
      x_24_read0_0.write_en = x_24.read_done;
      let296[done] = x_24_read0_0.done;
      x_24.addr3 = __l9.out;
      x_24.addr2 = __k20.out;
      x_24.addr1 = __j16.out;
      x_24.addr0 = __i16.out;
      x_24.read_en = 1'd1;
    }
    group let297<"static"=2> {
      x_25_read0_0.in = x_25.read_data;
      x_25_read0_0.write_en = x_25.read_done;
      let297[done] = x_25_read0_0.done;
      x_25.addr0 = __j16.out;
      x_25.read_en = 1'd1;
    }
    group upd197<"static"=1> {
      x_26.addr3 = __l9.out;
      x_26.addr2 = __k20.out;
      x_26.addr1 = __j16.out;
      x_26.addr0 = __i16.out;
      x_26.write_en = 1'd1;
      add183.left = x_24_read0_0.out;
      add183.right = x_25_read0_0.out;
      x_26.write_data = add183.out;
      upd197[done] = x_26.write_done;
    }
    group upd198<"static"=1> {
      __l9.write_en = 1'd1;
      add184.left = __l9.out;
      add184.right = const503.out;
      __l9.in = add184.out;
      upd198[done] = __l9.done;
    }
    group upd199<"static"=1> {
      __k20.write_en = 1'd1;
      add185.left = __k20.out;
      add185.right = const504.out;
      __k20.in = add185.out;
      upd199[done] = __k20.done;
    }
    group upd200<"static"=1> {
      __j16.write_en = 1'd1;
      add186.left = __j16.out;
      add186.right = const505.out;
      __j16.in = add186.out;
      upd200[done] = __j16.done;
    }
    group upd201<"static"=1> {
      __i16.write_en = 1'd1;
      add187.left = __i16.out;
      add187.right = const506.out;
      __i16.in = add187.out;
      upd201[done] = __i16.done;
    }
  }
  control {
    seq {
      @pos(270) let292;
      @bound(1) while le139.out with cond158 {
        seq {
          @pos(271) let293;
          @bound(128) while le140.out with cond159 {
            seq {
              @pos(272) let294;
              @bound(112) while le141.out with cond160 {
                seq {
                  @pos(273) let295;
                  @bound(112) while le142.out with cond161 {
                    seq {
                      par {
                        @pos(274) let296;
                        @pos(275) let297;
                      }
                      @pos(276) upd197;
                      @pos(273) upd198;
                    }
                  }
                  @pos(272) upd199;
                }
              }
              @pos(271) upd200;
            }
          }
          @pos(270) upd201;
        }
      }
    }
  }
}
component bias_add_1x256x56x56() -> () {
  cells {
    ref x_35 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    ref x_36 = seq_mem_d1(32,256,9);
    ref x_37 = seq_mem_d4(32,1,256,56,56,1,9,6,6);
    __i17 = std_reg(1);
    __j17 = std_reg(9);
    __k21 = std_reg(6);
    __l10 = std_reg(6);
    add188 = std_fp_sadd(32,16,16);
    add189 = std_add(6);
    add190 = std_add(6);
    add191 = std_add(9);
    add192 = std_add(1);
    const507 = std_const(1,0);
    const508 = std_const(1,0);
    const509 = std_const(9,0);
    const510 = std_const(9,255);
    const511 = std_const(6,0);
    const512 = std_const(6,55);
    const513 = std_const(6,0);
    const514 = std_const(6,55);
    const515 = std_const(6,1);
    const516 = std_const(6,1);
    const517 = std_const(9,1);
    const518 = std_const(1,1);
    le143 = std_le(1);
    le144 = std_le(9);
    le145 = std_le(6);
    le146 = std_le(6);
    x_35_read0_0 = std_reg(32);
    x_36_read0_0 = std_reg(32);
  }
  wires {
    comb group cond162 {
      le143.left = __i17.out;
      le143.right = const508.out;
    }
    comb group cond163 {
      le144.left = __j17.out;
      le144.right = const510.out;
    }
    comb group cond164 {
      le145.left = __k21.out;
      le145.right = const512.out;
    }
    comb group cond165 {
      le146.left = __l10.out;
      le146.right = const514.out;
    }
    group let298<"static"=1> {
      __i17.in = const507.out;
      __i17.write_en = 1'd1;
      let298[done] = __i17.done;
    }
    group let299<"static"=1> {
      __j17.in = const509.out;
      __j17.write_en = 1'd1;
      let299[done] = __j17.done;
    }
    group let300<"static"=1> {
      __k21.in = const511.out;
      __k21.write_en = 1'd1;
      let300[done] = __k21.done;
    }
    group let301<"static"=1> {
      __l10.in = const513.out;
      __l10.write_en = 1'd1;
      let301[done] = __l10.done;
    }
    group let302<"static"=2> {
      x_35_read0_0.in = x_35.read_data;
      x_35_read0_0.write_en = x_35.read_done;
      let302[done] = x_35_read0_0.done;
      x_35.addr3 = __l10.out;
      x_35.addr2 = __k21.out;
      x_35.addr1 = __j17.out;
      x_35.addr0 = __i17.out;
      x_35.read_en = 1'd1;
    }
    group let303<"static"=2> {
      x_36_read0_0.in = x_36.read_data;
      x_36_read0_0.write_en = x_36.read_done;
      let303[done] = x_36_read0_0.done;
      x_36.addr0 = __j17.out;
      x_36.read_en = 1'd1;
    }
    group upd202<"static"=1> {
      x_37.addr3 = __l10.out;
      x_37.addr2 = __k21.out;
      x_37.addr1 = __j17.out;
      x_37.addr0 = __i17.out;
      x_37.write_en = 1'd1;
      add188.left = x_35_read0_0.out;
      add188.right = x_36_read0_0.out;
      x_37.write_data = add188.out;
      upd202[done] = x_37.write_done;
    }
    group upd203<"static"=1> {
      __l10.write_en = 1'd1;
      add189.left = __l10.out;
      add189.right = const515.out;
      __l10.in = add189.out;
      upd203[done] = __l10.done;
    }
    group upd204<"static"=1> {
      __k21.write_en = 1'd1;
      add190.left = __k21.out;
      add190.right = const516.out;
      __k21.in = add190.out;
      upd204[done] = __k21.done;
    }
    group upd205<"static"=1> {
      __j17.write_en = 1'd1;
      add191.left = __j17.out;
      add191.right = const517.out;
      __j17.in = add191.out;
      upd205[done] = __j17.done;
    }
    group upd206<"static"=1> {
      __i17.write_en = 1'd1;
      add192.left = __i17.out;
      add192.right = const518.out;
      __i17.in = add192.out;
      upd206[done] = __i17.done;
    }
  }
  control {
    seq {
      @pos(277) let298;
      @bound(1) while le143.out with cond162 {
        seq {
          @pos(278) let299;
          @bound(256) while le144.out with cond163 {
            seq {
              @pos(279) let300;
              @bound(56) while le145.out with cond164 {
                seq {
                  @pos(280) let301;
                  @bound(56) while le146.out with cond165 {
                    seq {
                      par {
                        @pos(281) let302;
                        @pos(282) let303;
                      }
                      @pos(283) upd202;
                      @pos(280) upd203;
                    }
                  }
                  @pos(279) upd204;
                }
              }
              @pos(278) upd205;
            }
          }
          @pos(277) upd206;
        }
      }
    }
  }
}
component conv2d_1x512x28x28_1() -> () {
  cells {
    ref x_54 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    ref x_55 = seq_mem_d4(32,512,512,3,3,10,10,2,2);
    ref x_56 = seq_mem_d4(32,1,512,28,28,1,10,5,5);
    __b13 = std_reg(32);
    __c13 = std_reg(32);
    __dx8 = std_reg(32);
    __dy8 = std_reg(32);
    __k22 = std_reg(32);
    __kernel_x_8 = std_reg(32);
    __kernel_y_8 = std_reg(32);
    __padded_tensor_val_8 = std_reg(32);
    __sum_8 = std_reg(32);
    __x13 = std_reg(32);
    __y13 = std_reg(32);
    add193 = std_add(32);
    add194 = std_add(32);
    add195 = std_fp_sadd(32,16,16);
    add196 = std_add(32);
    add197 = std_add(32);
    add198 = std_add(32);
    add199 = std_add(32);
    add200 = std_add(32);
    add201 = std_add(32);
    add202 = std_add(32);
    and24 = std_and(1);
    and25 = std_and(1);
    and26 = std_and(1);
    bin_read27_0 = std_reg(32);
    bin_read28_0 = std_reg(32);
    bin_read29_0 = std_reg(32);
    const519 = std_const(32,0);
    const520 = std_const(32,0);
    const521 = std_const(32,0);
    const522 = std_const(32,511);
    const523 = std_const(32,0);
    const524 = std_const(32,27);
    const525 = std_const(32,0);
    const526 = std_const(32,27);
    const527 = std_const(32,0);
    const528 = std_const(32,511);
    const529 = std_const(32,0);
    const530 = std_const(32,2);
    const531 = std_const(32,0);
    const532 = std_const(32,2);
    const533 = std_const(32,1);
    const534 = std_const(32,1);
    const535 = std_const(32,1);
    const536 = std_const(32,29);
    const537 = std_const(32,1);
    const538 = std_const(32,29);
    const539 = std_const(32,1);
    const540 = std_const(32,1);
    const541 = std_const(32,1);
    const542 = std_const(32,1);
    const543 = std_const(32,1);
    const544 = std_const(32,1);
    const545 = std_const(32,1);
    const546 = std_const(32,1);
    const547 = std_const(32,1);
    fp_const28 = std_const(32,0);
    fp_const29 = std_const(32,0);
    ge16 = std_ge(32);
    ge17 = std_ge(32);
    le147 = std_le(32);
    le148 = std_le(32);
    le149 = std_le(32);
    le150 = std_le(32);
    le151 = std_le(32);
    le152 = std_le(32);
    le153 = std_le(32);
    lt16 = std_lt(32);
    lt17 = std_lt(32);
    mult_pipe37 = std_mult_pipe(32);
    mult_pipe38 = std_mult_pipe(32);
    mult_pipe39 = std_fp_smult_pipe(32,16,16);
    slice156 = std_slice(32,1);
    slice157 = std_slice(32,10);
    slice158 = std_slice(32,5);
    slice159 = std_slice(32,5);
    slice160 = std_slice(32,10);
    slice161 = std_slice(32,10);
    slice162 = std_slice(32,2);
    slice163 = std_slice(32,2);
    slice164 = std_slice(32,1);
    slice165 = std_slice(32,10);
    slice166 = std_slice(32,5);
    slice167 = std_slice(32,5);
    sub16 = std_sub(32);
    sub17 = std_sub(32);
    x_54_read0_0 = std_reg(32);
    x_55_read0_0 = std_reg(32);
  }
  wires {
    comb group cond166 {
      le147.left = __b13.out;
      le147.right = const520.out;
    }
    comb group cond167 {
      le148.left = __c13.out;
      le148.right = const522.out;
    }
    comb group cond168 {
      le149.left = __y13.out;
      le149.right = const524.out;
    }
    comb group cond169 {
      le150.left = __x13.out;
      le150.right = const526.out;
    }
    comb group cond170 {
      le151.left = __k22.out;
      le151.right = const528.out;
    }
    comb group cond171 {
      le152.left = __dy8.out;
      le152.right = const530.out;
    }
    comb group cond172 {
      le153.left = __dx8.out;
      le153.right = const532.out;
    }
    comb group cond173 {
      and26.left = and25.out;
      and26.right = lt17.out;
      and25.left = and24.out;
      and25.right = ge17.out;
      and24.left = ge16.out;
      and24.right = lt16.out;
      ge16.left = __kernel_y_8.out;
      ge16.right = const535.out;
      lt16.left = __kernel_y_8.out;
      lt16.right = const536.out;
      ge17.left = __kernel_x_8.out;
      ge17.right = const537.out;
      lt17.left = __kernel_x_8.out;
      lt17.right = const538.out;
    }
    group let304<"static"=1> {
      __b13.in = const519.out;
      __b13.write_en = 1'd1;
      let304[done] = __b13.done;
    }
    group let305<"static"=1> {
      __c13.in = const521.out;
      __c13.write_en = 1'd1;
      let305[done] = __c13.done;
    }
    group let306<"static"=1> {
      __y13.in = const523.out;
      __y13.write_en = 1'd1;
      let306[done] = __y13.done;
    }
    group let307<"static"=1> {
      __x13.in = const525.out;
      __x13.write_en = 1'd1;
      let307[done] = __x13.done;
    }
    group let308<"static"=1> {
      __sum_8.in = fp_const28.out;
      __sum_8.write_en = 1'd1;
      let308[done] = __sum_8.done;
    }
    group let309<"static"=1> {
      __k22.in = const527.out;
      __k22.write_en = 1'd1;
      let309[done] = __k22.done;
    }
    group let310<"static"=1> {
      __dy8.in = const529.out;
      __dy8.write_en = 1'd1;
      let310[done] = __dy8.done;
    }
    group let311<"static"=1> {
      __dx8.in = const531.out;
      __dx8.write_en = 1'd1;
      let311[done] = __dx8.done;
    }
    group let312<"static"=4> {
      bin_read27_0.in = mult_pipe37.out;
      bin_read27_0.write_en = mult_pipe37.done;
      let312[done] = bin_read27_0.done;
      mult_pipe37.left = const533.out;
      mult_pipe37.right = __y13.out;
      mult_pipe37.go = !mult_pipe37.done ? 1'd1;
    }
    group let313<"static"=1> {
      __kernel_y_8.in = add193.out;
      __kernel_y_8.write_en = 1'd1;
      let313[done] = __kernel_y_8.done;
      add193.left = bin_read27_0.out;
      add193.right = __dy8.out;
    }
    group let314<"static"=4> {
      bin_read28_0.in = mult_pipe38.out;
      bin_read28_0.write_en = mult_pipe38.done;
      let314[done] = bin_read28_0.done;
      mult_pipe38.left = const534.out;
      mult_pipe38.right = __x13.out;
      mult_pipe38.go = !mult_pipe38.done ? 1'd1;
    }
    group let315<"static"=1> {
      __kernel_x_8.in = add194.out;
      __kernel_x_8.write_en = 1'd1;
      let315[done] = __kernel_x_8.done;
      add194.left = bin_read28_0.out;
      add194.right = __dx8.out;
    }
    group let316<"static"=1> {
      __padded_tensor_val_8.in = fp_const29.out;
      __padded_tensor_val_8.write_en = 1'd1;
      let316[done] = __padded_tensor_val_8.done;
    }
    group let317<"static"=2> {
      x_54_read0_0.in = x_54.read_data;
      x_54_read0_0.write_en = x_54.read_done;
      let317[done] = x_54_read0_0.done;
      x_54.addr3 = slice159.out;
      slice159.in = sub17.out;
      sub17.left = __kernel_x_8.out;
      sub17.right = const540.out;
      x_54.addr2 = slice158.out;
      slice158.in = sub16.out;
      sub16.left = __kernel_y_8.out;
      sub16.right = const539.out;
      x_54.addr1 = slice157.out;
      slice157.in = __k22.out;
      x_54.addr0 = slice156.out;
      slice156.in = __b13.out;
      x_54.read_en = 1'd1;
    }
    group let318<"static"=2> {
      x_55_read0_0.in = x_55.read_data;
      x_55_read0_0.write_en = x_55.read_done;
      let318[done] = x_55_read0_0.done;
      x_55.addr3 = slice163.out;
      slice163.in = __dx8.out;
      x_55.addr2 = slice162.out;
      slice162.in = __dy8.out;
      x_55.addr1 = slice161.out;
      slice161.in = __k22.out;
      x_55.addr0 = slice160.out;
      slice160.in = __c13.out;
      x_55.read_en = 1'd1;
    }
    group let319<"static"=4> {
      bin_read29_0.in = mult_pipe39.out;
      bin_read29_0.write_en = mult_pipe39.done;
      let319[done] = bin_read29_0.done;
      mult_pipe39.left = __padded_tensor_val_8.out;
      mult_pipe39.right = x_55_read0_0.out;
      mult_pipe39.go = !mult_pipe39.done ? 1'd1;
    }
    group upd207<"static"=1> {
      __padded_tensor_val_8.write_en = 1'd1;
      __padded_tensor_val_8.in = x_54_read0_0.out;
      upd207[done] = __padded_tensor_val_8.done;
    }
    group upd208<"static"=1> {
      __sum_8.write_en = 1'd1;
      add195.left = __sum_8.out;
      add195.right = bin_read29_0.out;
      __sum_8.in = add195.out;
      upd208[done] = __sum_8.done;
    }
    group upd209<"static"=1> {
      __dx8.write_en = 1'd1;
      add196.left = __dx8.out;
      add196.right = const541.out;
      __dx8.in = add196.out;
      upd209[done] = __dx8.done;
    }
    group upd210<"static"=1> {
      __dy8.write_en = 1'd1;
      add197.left = __dy8.out;
      add197.right = const542.out;
      __dy8.in = add197.out;
      upd210[done] = __dy8.done;
    }
    group upd211<"static"=1> {
      __k22.write_en = 1'd1;
      add198.left = __k22.out;
      add198.right = const543.out;
      __k22.in = add198.out;
      upd211[done] = __k22.done;
    }
    group upd212<"static"=1> {
      x_56.addr3 = slice167.out;
      slice167.in = __x13.out;
      x_56.addr2 = slice166.out;
      slice166.in = __y13.out;
      x_56.addr1 = slice165.out;
      slice165.in = __c13.out;
      x_56.addr0 = slice164.out;
      slice164.in = __b13.out;
      x_56.write_en = 1'd1;
      x_56.write_data = __sum_8.out;
      upd212[done] = x_56.write_done;
    }
    group upd213<"static"=1> {
      __x13.write_en = 1'd1;
      add199.left = __x13.out;
      add199.right = const544.out;
      __x13.in = add199.out;
      upd213[done] = __x13.done;
    }
    group upd214<"static"=1> {
      __y13.write_en = 1'd1;
      add200.left = __y13.out;
      add200.right = const545.out;
      __y13.in = add200.out;
      upd214[done] = __y13.done;
    }
    group upd215<"static"=1> {
      __c13.write_en = 1'd1;
      add201.left = __c13.out;
      add201.right = const546.out;
      __c13.in = add201.out;
      upd215[done] = __c13.done;
    }
    group upd216<"static"=1> {
      __b13.write_en = 1'd1;
      add202.left = __b13.out;
      add202.right = const547.out;
      __b13.in = add202.out;
      upd216[done] = __b13.done;
    }
  }
  control {
    seq {
      @pos(284) let304;
      @bound(1) while le147.out with cond166 {
        seq {
          @pos(285) let305;
          @bound(512) while le148.out with cond167 {
            seq {
              @pos(286) let306;
              @bound(28) while le149.out with cond168 {
                seq {
                  @pos(287) let307;
                  @bound(28) while le150.out with cond169 {
                    seq {
                      @pos(288) let308;
                      @pos(289) let309;
                      @bound(512) while le151.out with cond170 {
                        seq {
                          @pos(290) let310;
                          @bound(3) while le152.out with cond171 {
                            seq {
                              @pos(291) let311;
                              @bound(3) while le153.out with cond172 {
                                seq {
                                  par {
                                    seq {
                                      let312;
                                      let313;
                                    }
                                    seq {
                                      let314;
                                      let315;
                                    }
                                  }
                                  @pos(292) let316;
                                  if and26.out with cond173 {
                                    seq {
                                      @pos(293) let317;
                                      @pos(294) upd207;
                                    }
                                  }
                                  @pos(295) let318;
                                  let319;
                                  upd208;
                                  @pos(291) upd209;
                                }
                              }
                              @pos(290) upd210;
                            }
                          }
                          @pos(289) upd211;
                        }
                      }
                      @pos(296) upd212;
                      @pos(287) upd213;
                    }
                  }
                  @pos(286) upd214;
                }
              }
              @pos(285) upd215;
            }
          }
          @pos(284) upd216;
        }
      }
    }
  }
}
component main() -> () {
  cells {
    @external data = seq_mem_d4(32, 1, 3, 224, 224, 1, 2, 8, 8);
    @external x_12 = seq_mem_d4(32, 64, 3, 3, 3, 7, 2, 2, 2);
    @external x_13 = seq_mem_d4(32, 1, 64, 224, 224, 1, 7, 8, 8);
    conv2d_1x64x224x224_ = conv2d_1x64x224x224();
    @external x_14 = seq_mem_d1(32, 64, 7);
    @external x_15 = seq_mem_d4(32, 1, 64, 224, 224, 1, 7, 8, 8);
    bias_add_1x64x224x224_ = bias_add_1x64x224x224();
    @external x_16 = seq_mem_d4(32, 1, 64, 224, 224, 1, 7, 8, 8);
    relu_1x64x224x224_ = relu_1x64x224x224();
    @external x_17 = seq_mem_d4(32, 64, 64, 3, 3, 7, 7, 2, 2);
    @external x_18 = seq_mem_d4(32, 1, 64, 224, 224, 1, 7, 8, 8);
    conv2d_1x64x224x224_1_ = conv2d_1x64x224x224_1();
    @external x_19 = seq_mem_d1(32, 64, 7);
    @external x_20 = seq_mem_d4(32, 1, 64, 224, 224, 1, 7, 8, 8);
    bias_add_1x64x224x224_1 = bias_add_1x64x224x224();
    @external x_21 = seq_mem_d4(32, 1, 64, 224, 224, 1, 7, 8, 8);
    relu_1x64x224x224_1 = relu_1x64x224x224();
    @external x_22 = seq_mem_d4(32, 1, 64, 112, 112, 1, 7, 7, 7);
    max_pool2d_1x64x112x112_ = max_pool2d_1x64x112x112();
    @external x_23 = seq_mem_d4(32, 128, 64, 3, 3, 8, 7, 2, 2);
    @external x_24 = seq_mem_d4(32, 1, 128, 112, 112, 1, 8, 7, 7);
    conv2d_1x128x112x112_ = conv2d_1x128x112x112();
    @external x_25 = seq_mem_d1(32, 128, 8);
    @external x_26 = seq_mem_d4(32, 1, 128, 112, 112, 1, 8, 7, 7);
    bias_add_1x128x112x112_ = bias_add_1x128x112x112();
    @external x_27 = seq_mem_d4(32, 1, 128, 112, 112, 1, 8, 7, 7);
    relu_1x128x112x112_ = relu_1x128x112x112();
    @external x_28 = seq_mem_d4(32, 128, 128, 3, 3, 8, 8, 2, 2);
    @external x_29 = seq_mem_d4(32, 1, 128, 112, 112, 1, 8, 7, 7);
    conv2d_1x128x112x112_1_ = conv2d_1x128x112x112_1();
    @external x_30 = seq_mem_d1(32, 128, 8);
    @external x_31 = seq_mem_d4(32, 1, 128, 112, 112, 1, 8, 7, 7);
    bias_add_1x128x112x112_1 = bias_add_1x128x112x112();
    @external x_32 = seq_mem_d4(32, 1, 128, 112, 112, 1, 8, 7, 7);
    relu_1x128x112x112_1 = relu_1x128x112x112();
    @external x_33 = seq_mem_d4(32, 1, 128, 56, 56, 1, 8, 6, 6);
    max_pool2d_1x128x56x56_ = max_pool2d_1x128x56x56();
    @external x_34 = seq_mem_d4(32, 256, 128, 3, 3, 9, 8, 2, 2);
    @external x_35 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    conv2d_1x256x56x56_ = conv2d_1x256x56x56();
    @external x_36 = seq_mem_d1(32, 256, 9);
    @external x_37 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    bias_add_1x256x56x56_ = bias_add_1x256x56x56();
    @external x_38 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    relu_1x256x56x56_ = relu_1x256x56x56();
    @external x_39 = seq_mem_d4(32, 256, 256, 3, 3, 9, 9, 2, 2);
    @external x_40 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    conv2d_1x256x56x56_1_ = conv2d_1x256x56x56_1();
    @external x_41 = seq_mem_d1(32, 256, 9);
    @external x_42 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    bias_add_1x256x56x56_1 = bias_add_1x256x56x56();
    @external x_43 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    relu_1x256x56x56_1 = relu_1x256x56x56();
    @external x_44 = seq_mem_d4(32, 256, 256, 3, 3, 9, 9, 2, 2);
    @external x_45 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    conv2d_1x256x56x56_1_1 = conv2d_1x256x56x56_1();
    @external x_46 = seq_mem_d1(32, 256, 9);
    @external x_47 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    bias_add_1x256x56x56_2 = bias_add_1x256x56x56();
    @external x_48 = seq_mem_d4(32, 1, 256, 56, 56, 1, 9, 6, 6);
    relu_1x256x56x56_2 = relu_1x256x56x56();
    @external x_49 = seq_mem_d4(32, 1, 256, 28, 28, 1, 9, 5, 5);
    max_pool2d_1x256x28x28_ = max_pool2d_1x256x28x28();
    @external x_50 = seq_mem_d4(32, 512, 256, 3, 3, 10, 9, 2, 2);
    @external x_51 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    conv2d_1x512x28x28_ = conv2d_1x512x28x28();
    @external x_52 = seq_mem_d1(32, 512, 10);
    @external x_53 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    bias_add_1x512x28x28_ = bias_add_1x512x28x28();
    @external x_54 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    relu_1x512x28x28_ = relu_1x512x28x28();
    @external x_55 = seq_mem_d4(32, 512, 512, 3, 3, 10, 10, 2, 2);
    @external x_56 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    conv2d_1x512x28x28_1_ = conv2d_1x512x28x28_1();
    @external x_57 = seq_mem_d1(32, 512, 10);
    @external x_58 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    bias_add_1x512x28x28_1 = bias_add_1x512x28x28();
    @external x_59 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    relu_1x512x28x28_1 = relu_1x512x28x28();
    @external x_60 = seq_mem_d4(32, 512, 512, 3, 3, 10, 10, 2, 2);
    @external x_61 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    conv2d_1x512x28x28_1_1 = conv2d_1x512x28x28_1();
    @external x_62 = seq_mem_d1(32, 512, 10);
    @external x_63 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    bias_add_1x512x28x28_2 = bias_add_1x512x28x28();
    @external x_64 = seq_mem_d4(32, 1, 512, 28, 28, 1, 10, 5, 5);
    relu_1x512x28x28_2 = relu_1x512x28x28();
    @external x_65 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    max_pool2d_1x512x14x14_ = max_pool2d_1x512x14x14();
    @external x_66 = seq_mem_d4(32, 512, 512, 3, 3, 10, 10, 2, 2);
    @external x_67 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    conv2d_1x512x14x14_ = conv2d_1x512x14x14();
    @external x_68 = seq_mem_d1(32, 512, 10);
    @external x_69 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    bias_add_1x512x14x14_ = bias_add_1x512x14x14();
    @external x_70 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    relu_1x512x14x14_ = relu_1x512x14x14();
    @external x_71 = seq_mem_d4(32, 512, 512, 3, 3, 10, 10, 2, 2);
    @external x_72 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    conv2d_1x512x14x14_1 = conv2d_1x512x14x14();
    @external x_73 = seq_mem_d1(32, 512, 10);
    @external x_74 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    bias_add_1x512x14x14_1 = bias_add_1x512x14x14();
    @external x_75 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    relu_1x512x14x14_1 = relu_1x512x14x14();
    @external x_76 = seq_mem_d4(32, 512, 512, 3, 3, 10, 10, 2, 2);
    @external x_77 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    conv2d_1x512x14x14_2 = conv2d_1x512x14x14();
    @external x_78 = seq_mem_d1(32, 512, 10);
    @external x_79 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    bias_add_1x512x14x14_2 = bias_add_1x512x14x14();
    @external x_80 = seq_mem_d4(32, 1, 512, 14, 14, 1, 10, 4, 4);
    relu_1x512x14x14_2 = relu_1x512x14x14();
    @external x_81 = seq_mem_d4(32, 1, 512, 7, 7, 1, 10, 3, 3);
    max_pool2d_1x512x7x7_ = max_pool2d_1x512x7x7();
    @external x_82 = seq_mem_d2(32, 1, 25088, 1, 15);
    batch_flatten_1x25088_ = batch_flatten_1x25088();
    @external x_83 = seq_mem_d2(32, 4096, 25088, 13, 15);
    @external x_84 = seq_mem_d2(32, 1, 4096, 1, 13);
    dense_1x4096_ = dense_1x4096();
    @external x_85 = seq_mem_d1(32, 4096, 13);
    @external x_86 = seq_mem_d2(32, 1, 4096, 1, 13);
    add_1x4096_ = add_1x4096();
    @external x_87 = seq_mem_d2(32, 1, 4096, 1, 13);
    relu_1x4096_ = relu_1x4096();
    @external x_88 = seq_mem_d2(32, 1, 4096, 1, 13);
    batch_flatten_1x4096_ = batch_flatten_1x4096();
    @external x_89 = seq_mem_d2(32, 4096, 4096, 13, 13);
    @external x_90 = seq_mem_d2(32, 1, 4096, 1, 13);
    dense_1x4096_1_ = dense_1x4096_1();
    @external x_91 = seq_mem_d1(32, 4096, 13);
    @external x_92 = seq_mem_d2(32, 1, 4096, 1, 13);
    add_1x4096_1 = add_1x4096();
    @external x_93 = seq_mem_d2(32, 1, 4096, 1, 13);
    relu_1x4096_1 = relu_1x4096();
    @external x_94 = seq_mem_d2(32, 1, 4096, 1, 13);
    batch_flatten_1x4096_1 = batch_flatten_1x4096();
    @external x_95 = seq_mem_d2(32, 1000, 4096, 10, 13);
    @external x_96 = seq_mem_d2(32, 1, 1000, 1, 10);
    dense_1x1000_ = dense_1x1000();
    @external x_97 = seq_mem_d1(32, 1000, 10);
    @external x_98 = seq_mem_d2(32, 1, 1000, 1, 10);
    add_1x1000_ = add_1x1000();
  }
  wires {

  }
  control {
    seq {
      @pos(0) invoke conv2d_1x64x224x224_[data=data, x_12=x_12, x_13=x_13]()();
      @pos(1) invoke bias_add_1x64x224x224_[x_13=x_13, x_14=x_14, x_15=x_15]()();
      @pos(2) invoke relu_1x64x224x224_[x_15=x_15, x_16=x_16]()();
      @pos(3) invoke conv2d_1x64x224x224_1_[x_16=x_16, x_17=x_17, x_18=x_18]()();
      @pos(4) invoke bias_add_1x64x224x224_1[x_13=x_18, x_14=x_19, x_15=x_20]()();
      @pos(5) invoke relu_1x64x224x224_1[x_15=x_20, x_16=x_21]()();
      @pos(6) invoke max_pool2d_1x64x112x112_[x_21=x_21, x_22=x_22]()();
      @pos(7) invoke conv2d_1x128x112x112_[x_22=x_22, x_23=x_23, x_24=x_24]()();
      @pos(8) invoke bias_add_1x128x112x112_[x_24=x_24, x_25=x_25, x_26=x_26]()();
      @pos(9) invoke relu_1x128x112x112_[x_26=x_26, x_27=x_27]()();
      @pos(10) invoke conv2d_1x128x112x112_1_[x_27=x_27, x_28=x_28, x_29=x_29]()();
      @pos(11) invoke bias_add_1x128x112x112_1[x_24=x_29, x_25=x_30, x_26=x_31]()();
      @pos(12) invoke relu_1x128x112x112_1[x_26=x_31, x_27=x_32]()();
      @pos(13) invoke max_pool2d_1x128x56x56_[x_32=x_32, x_33=x_33]()();
      @pos(14) invoke conv2d_1x256x56x56_[x_33=x_33, x_34=x_34, x_35=x_35]()();
      @pos(15) invoke bias_add_1x256x56x56_[x_35=x_35, x_36=x_36, x_37=x_37]()();
      @pos(16) invoke relu_1x256x56x56_[x_37=x_37, x_38=x_38]()();
      @pos(17) invoke conv2d_1x256x56x56_1_[x_38=x_38, x_39=x_39, x_40=x_40]()();
      @pos(18) invoke bias_add_1x256x56x56_1[x_35=x_40, x_36=x_41, x_37=x_42]()();
      @pos(19) invoke relu_1x256x56x56_1[x_37=x_42, x_38=x_43]()();
      @pos(20) invoke conv2d_1x256x56x56_1_1[x_38=x_43, x_39=x_44, x_40=x_45]()();
      @pos(21) invoke bias_add_1x256x56x56_2[x_35=x_45, x_36=x_46, x_37=x_47]()();
      @pos(22) invoke relu_1x256x56x56_2[x_37=x_47, x_38=x_48]()();
      @pos(23) invoke max_pool2d_1x256x28x28_[x_48=x_48, x_49=x_49]()();
      @pos(24) invoke conv2d_1x512x28x28_[x_49=x_49, x_50=x_50, x_51=x_51]()();
      @pos(25) invoke bias_add_1x512x28x28_[x_51=x_51, x_52=x_52, x_53=x_53]()();
      @pos(26) invoke relu_1x512x28x28_[x_53=x_53, x_54=x_54]()();
      @pos(27) invoke conv2d_1x512x28x28_1_[x_54=x_54, x_55=x_55, x_56=x_56]()();
      @pos(28) invoke bias_add_1x512x28x28_1[x_51=x_56, x_52=x_57, x_53=x_58]()();
      @pos(29) invoke relu_1x512x28x28_1[x_53=x_58, x_54=x_59]()();
      @pos(30) invoke conv2d_1x512x28x28_1_1[x_54=x_59, x_55=x_60, x_56=x_61]()();
      @pos(31) invoke bias_add_1x512x28x28_2[x_51=x_61, x_52=x_62, x_53=x_63]()();
      @pos(32) invoke relu_1x512x28x28_2[x_53=x_63, x_54=x_64]()();
      @pos(33) invoke max_pool2d_1x512x14x14_[x_64=x_64, x_65=x_65]()();
      @pos(34) invoke conv2d_1x512x14x14_[x_65=x_65, x_66=x_66, x_67=x_67]()();
      @pos(35) invoke bias_add_1x512x14x14_[x_67=x_67, x_68=x_68, x_69=x_69]()();
      @pos(36) invoke relu_1x512x14x14_[x_69=x_69, x_70=x_70]()();
      @pos(37) invoke conv2d_1x512x14x14_1[x_65=x_70, x_66=x_71, x_67=x_72]()();
      @pos(38) invoke bias_add_1x512x14x14_1[x_67=x_72, x_68=x_73, x_69=x_74]()();
      @pos(39) invoke relu_1x512x14x14_1[x_69=x_74, x_70=x_75]()();
      @pos(40) invoke conv2d_1x512x14x14_2[x_65=x_75, x_66=x_76, x_67=x_77]()();
      @pos(41) invoke bias_add_1x512x14x14_2[x_67=x_77, x_68=x_78, x_69=x_79]()();
      @pos(42) invoke relu_1x512x14x14_2[x_69=x_79, x_70=x_80]()();
      @pos(43) invoke max_pool2d_1x512x7x7_[x_80=x_80, x_81=x_81]()();
      @pos(44) invoke batch_flatten_1x25088_[x_81=x_81, x_82=x_82]()();
      @pos(45) invoke dense_1x4096_[x_82=x_82, x_83=x_83, x_84=x_84]()();
      @pos(46) invoke add_1x4096_[x_84=x_84, x_85=x_85, x_86=x_86]()();
      @pos(47) invoke relu_1x4096_[x_86=x_86, x_87=x_87]()();
      @pos(48) invoke batch_flatten_1x4096_[x_87=x_87, x_88=x_88]()();
      @pos(49) invoke dense_1x4096_1_[x_88=x_88, x_89=x_89, x_90=x_90]()();
      @pos(50) invoke add_1x4096_1[x_84=x_90, x_85=x_91, x_86=x_92]()();
      @pos(51) invoke relu_1x4096_1[x_86=x_92, x_87=x_93]()();
      @pos(52) invoke batch_flatten_1x4096_1[x_87=x_93, x_88=x_94]()();
      @pos(53) invoke dense_1x1000_[x_94=x_94, x_95=x_95, x_96=x_96]()();
      @pos(54) invoke add_1x1000_[x_96=x_96, x_97=x_97, x_98=x_98]()();
    }
  }
}
metadata #{
0: let %x_13: Tensor[(1, 64, 224, 224), float32] /* ty=Tensor[(1, 64, 224, 224), float32] */ = nn.conv2d(%data, %x_12, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 224, 224), float32] */;
1: let %x_15: Tensor[(1, 64, 224, 224), float32] /* ty=Tensor[(1, 64, 224, 224), float32] */ = nn.bias_add(%x_13, %x_14) /* ty=Tensor[(1, 64, 224, 224), float32] */;
2: let %x_16: Tensor[(1, 64, 224, 224), float32] /* ty=Tensor[(1, 64, 224, 224), float32] */ = nn.relu(%x_15) /* ty=Tensor[(1, 64, 224, 224), float32] */;
3: let %x_18: Tensor[(1, 64, 224, 224), float32] /* ty=Tensor[(1, 64, 224, 224), float32] */ = nn.conv2d(%x_16, %x_17, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 224, 224), float32] */;
4: let %x_20: Tensor[(1, 64, 224, 224), float32] /* ty=Tensor[(1, 64, 224, 224), float32] */ = nn.bias_add(%x_18, %x_19) /* ty=Tensor[(1, 64, 224, 224), float32] */;
5: let %x_21: Tensor[(1, 64, 224, 224), float32] /* ty=Tensor[(1, 64, 224, 224), float32] */ = nn.relu(%x_20) /* ty=Tensor[(1, 64, 224, 224), float32] */;
6: let %x_22: Tensor[(1, 64, 112, 112), float32] /* ty=Tensor[(1, 64, 112, 112), float32] */ = nn.max_pool2d(%x_21, pool_size=[2, 2], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 112, 112), float32] */;
7: let %x_24: Tensor[(1, 128, 112, 112), float32] /* ty=Tensor[(1, 128, 112, 112), float32] */ = nn.conv2d(%x_22, %x_23, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 112, 112), float32] */;
8: let %x_26: Tensor[(1, 128, 112, 112), float32] /* ty=Tensor[(1, 128, 112, 112), float32] */ = nn.bias_add(%x_24, %x_25) /* ty=Tensor[(1, 128, 112, 112), float32] */;
9: let %x_27: Tensor[(1, 128, 112, 112), float32] /* ty=Tensor[(1, 128, 112, 112), float32] */ = nn.relu(%x_26) /* ty=Tensor[(1, 128, 112, 112), float32] */;
10: let %x_29: Tensor[(1, 128, 112, 112), float32] /* ty=Tensor[(1, 128, 112, 112), float32] */ = nn.conv2d(%x_27, %x_28, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 112, 112), float32] */;
11: let %x_31: Tensor[(1, 128, 112, 112), float32] /* ty=Tensor[(1, 128, 112, 112), float32] */ = nn.bias_add(%x_29, %x_30) /* ty=Tensor[(1, 128, 112, 112), float32] */;
12: let %x_32: Tensor[(1, 128, 112, 112), float32] /* ty=Tensor[(1, 128, 112, 112), float32] */ = nn.relu(%x_31) /* ty=Tensor[(1, 128, 112, 112), float32] */;
13: let %x_33: Tensor[(1, 128, 56, 56), float32] /* ty=Tensor[(1, 128, 56, 56), float32] */ = nn.max_pool2d(%x_32, pool_size=[2, 2], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 128, 56, 56), float32] */;
14: let %x_35: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.conv2d(%x_33, %x_34, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 56, 56), float32] */;
15: let %x_37: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.bias_add(%x_35, %x_36) /* ty=Tensor[(1, 256, 56, 56), float32] */;
16: let %x_38: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.relu(%x_37) /* ty=Tensor[(1, 256, 56, 56), float32] */;
17: let %x_40: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.conv2d(%x_38, %x_39, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 56, 56), float32] */;
18: let %x_42: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.bias_add(%x_40, %x_41) /* ty=Tensor[(1, 256, 56, 56), float32] */;
19: let %x_43: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.relu(%x_42) /* ty=Tensor[(1, 256, 56, 56), float32] */;
20: let %x_45: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.conv2d(%x_43, %x_44, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 56, 56), float32] */;
21: let %x_47: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.bias_add(%x_45, %x_46) /* ty=Tensor[(1, 256, 56, 56), float32] */;
22: let %x_48: Tensor[(1, 256, 56, 56), float32] /* ty=Tensor[(1, 256, 56, 56), float32] */ = nn.relu(%x_47) /* ty=Tensor[(1, 256, 56, 56), float32] */;
23: let %x_49: Tensor[(1, 256, 28, 28), float32] /* ty=Tensor[(1, 256, 28, 28), float32] */ = nn.max_pool2d(%x_48, pool_size=[2, 2], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 256, 28, 28), float32] */;
24: let %x_51: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.conv2d(%x_49, %x_50, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 28, 28), float32] */;
25: let %x_53: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.bias_add(%x_51, %x_52) /* ty=Tensor[(1, 512, 28, 28), float32] */;
26: let %x_54: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.relu(%x_53) /* ty=Tensor[(1, 512, 28, 28), float32] */;
27: let %x_56: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.conv2d(%x_54, %x_55, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 28, 28), float32] */;
28: let %x_58: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.bias_add(%x_56, %x_57) /* ty=Tensor[(1, 512, 28, 28), float32] */;
29: let %x_59: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.relu(%x_58) /* ty=Tensor[(1, 512, 28, 28), float32] */;
30: let %x_61: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.conv2d(%x_59, %x_60, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 28, 28), float32] */;
31: let %x_63: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.bias_add(%x_61, %x_62) /* ty=Tensor[(1, 512, 28, 28), float32] */;
32: let %x_64: Tensor[(1, 512, 28, 28), float32] /* ty=Tensor[(1, 512, 28, 28), float32] */ = nn.relu(%x_63) /* ty=Tensor[(1, 512, 28, 28), float32] */;
33: let %x_65: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.max_pool2d(%x_64, pool_size=[2, 2], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 512, 14, 14), float32] */;
34: let %x_67: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.conv2d(%x_65, %x_66, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 14, 14), float32] */;
35: let %x_69: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.bias_add(%x_67, %x_68) /* ty=Tensor[(1, 512, 14, 14), float32] */;
36: let %x_70: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.relu(%x_69) /* ty=Tensor[(1, 512, 14, 14), float32] */;
37: let %x_72: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.conv2d(%x_70, %x_71, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 14, 14), float32] */;
38: let %x_74: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.bias_add(%x_72, %x_73) /* ty=Tensor[(1, 512, 14, 14), float32] */;
39: let %x_75: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.relu(%x_74) /* ty=Tensor[(1, 512, 14, 14), float32] */;
40: let %x_77: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.conv2d(%x_75, %x_76, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 14, 14), float32] */;
41: let %x_79: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.bias_add(%x_77, %x_78) /* ty=Tensor[(1, 512, 14, 14), float32] */;
42: let %x_80: Tensor[(1, 512, 14, 14), float32] /* ty=Tensor[(1, 512, 14, 14), float32] */ = nn.relu(%x_79) /* ty=Tensor[(1, 512, 14, 14), float32] */;
43: let %x_81: Tensor[(1, 512, 7, 7), float32] /* ty=Tensor[(1, 512, 7, 7), float32] */ = nn.max_pool2d(%x_80, pool_size=[2, 2], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
44: let %x_82: Tensor[(1, 25088), float32] /* ty=Tensor[(1, 25088), float32] */ = nn.batch_flatten(%x_81) /* ty=Tensor[(1, 25088), float32] */;
45: let %x_84: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.dense(%x_82, %x_83, units=4096) /* ty=Tensor[(1, 4096), float32] */;
46: let %x_86: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = add(%x_84, %x_85) /* ty=Tensor[(1, 4096), float32] */;
47: let %x_87: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.relu(%x_86) /* ty=Tensor[(1, 4096), float32] */;
48: let %x_88: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.batch_flatten(%x_87) /* ty=Tensor[(1, 4096), float32] */;
49: let %x_90: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.dense(%x_88, %x_89, units=4096) /* ty=Tensor[(1, 4096), float32] */;
50: let %x_92: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = add(%x_90, %x_91) /* ty=Tensor[(1, 4096), float32] */;
51: let %x_93: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.relu(%x_92) /* ty=Tensor[(1, 4096), float32] */;
52: let %x_94: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.batch_flatten(%x_93) /* ty=Tensor[(1, 4096), float32] */;
53: let %x_96: Tensor[(1, 1000), float32] /* ty=Tensor[(1, 1000), float32] */ = nn.dense(%x_94, %x_95, units=1000) /* ty=Tensor[(1, 1000), float32] */;
54: let %x_98: Tensor[(1, 1000), float32] /* ty=Tensor[(1, 1000), float32] */ = add(%x_96, %x_97) /* ty=Tensor[(1, 1000), float32] */;
}#