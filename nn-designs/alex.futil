import "primitives/core.futil";import "primitives/binary_operators.futil";import "primitives/math.futil";import "primitives/memories.futil";component bias_add_1x96x54x54() -> () {
  cells {
    ref x_13 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    ref x_14 = seq_mem_d1(32,96,7);
    ref x_15 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    __i0 = std_reg(1);
    __j0 = std_reg(7);
    __k0 = std_reg(6);
    __l0 = std_reg(6);
    add0 = std_fp_sadd(32,16,16);
    add1 = std_add(6);
    add2 = std_add(6);
    add3 = std_add(7);
    add4 = std_add(1);
    const0 = std_const(1,0);
    const1 = std_const(1,0);
    const10 = std_const(7,1);
    const11 = std_const(1,1);
    const2 = std_const(7,0);
    const3 = std_const(7,95);
    const4 = std_const(6,0);
    const5 = std_const(6,53);
    const6 = std_const(6,0);
    const7 = std_const(6,53);
    const8 = std_const(6,1);
    const9 = std_const(6,1);
    le0 = std_le(1);
    le1 = std_le(7);
    le2 = std_le(6);
    le3 = std_le(6);
    x_13_read0_0 = std_reg(32);
    x_14_read0_0 = std_reg(32);
  }
  wires {
    comb group cond0 {
      le0.left = __i0.out;
      le0.right = const1.out;
    }
    comb group cond1 {
      le1.left = __j0.out;
      le1.right = const3.out;
    }
    comb group cond2 {
      le2.left = __k0.out;
      le2.right = const5.out;
    }
    comb group cond3 {
      le3.left = __l0.out;
      le3.right = const7.out;
    }
    group let0<"static"=1> {
      __i0.in = const0.out;
      __i0.write_en = 1'd1;
      let0[done] = __i0.done;
    }
    group let1<"static"=1> {
      __j0.in = const2.out;
      __j0.write_en = 1'd1;
      let1[done] = __j0.done;
    }
    group let2<"static"=1> {
      __k0.in = const4.out;
      __k0.write_en = 1'd1;
      let2[done] = __k0.done;
    }
    group let3<"static"=1> {
      __l0.in = const6.out;
      __l0.write_en = 1'd1;
      let3[done] = __l0.done;
    }
    group let4<"static"=2> {
      x_13_read0_0.in = x_13.read_data;
      x_13_read0_0.write_en = x_13.read_done;
      let4[done] = x_13_read0_0.done;
      x_13.addr3 = __l0.out;
      x_13.addr2 = __k0.out;
      x_13.addr1 = __j0.out;
      x_13.addr0 = __i0.out;
      x_13.read_en = 1'd1;
    }
    group let5<"static"=2> {
      x_14_read0_0.in = x_14.read_data;
      x_14_read0_0.write_en = x_14.read_done;
      let5[done] = x_14_read0_0.done;
      x_14.addr0 = __j0.out;
      x_14.read_en = 1'd1;
    }
    group upd0<"static"=1> {
      x_15.addr3 = __l0.out;
      x_15.addr2 = __k0.out;
      x_15.addr1 = __j0.out;
      x_15.addr0 = __i0.out;
      x_15.write_en = 1'd1;
      add0.left = x_13_read0_0.out;
      add0.right = x_14_read0_0.out;
      x_15.write_data = add0.out;
      upd0[done] = x_15.write_done;
    }
    group upd1<"static"=1> {
      __l0.write_en = 1'd1;
      add1.left = __l0.out;
      add1.right = const8.out;
      __l0.in = add1.out;
      upd1[done] = __l0.done;
    }
    group upd2<"static"=1> {
      __k0.write_en = 1'd1;
      add2.left = __k0.out;
      add2.right = const9.out;
      __k0.in = add2.out;
      upd2[done] = __k0.done;
    }
    group upd3<"static"=1> {
      __j0.write_en = 1'd1;
      add3.left = __j0.out;
      add3.right = const10.out;
      __j0.in = add3.out;
      upd3[done] = __j0.done;
    }
    group upd4<"static"=1> {
      __i0.write_en = 1'd1;
      add4.left = __i0.out;
      add4.right = const11.out;
      __i0.in = add4.out;
      upd4[done] = __i0.done;
    }
  }
  control {
    seq {
      @pos(0) let0;
      @bound(1) while le0.out with cond0 {
        seq {
          @pos(1) let1;
          @bound(96) while le1.out with cond1 {
            seq {
              @pos(2) let2;
              @bound(54) while le2.out with cond2 {
                seq {
                  @pos(3) let3;
                  @bound(54) while le3.out with cond3 {
                    seq {
                      par {
                        @pos(4) let4;
                        @pos(5) let5;
                      }
                      @pos(6) upd0;
                      @pos(3) upd1;
                    }
                  }
                  @pos(2) upd2;
                }
              }
              @pos(1) upd3;
            }
          }
          @pos(0) upd4;
        }
      }
    }
  }
}
component conv2d_1x256x26x26() -> () {
  cells {
    ref x_18 = seq_mem_d4(32,1,96,26,26,1,7,5,5);
    ref x_19 = seq_mem_d4(32,256,48,5,5,9,6,3,3);
    ref x_20 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    __b0 = std_reg(32);
    __c0 = std_reg(32);
    __dx0 = std_reg(32);
    __dy0 = std_reg(32);
    __k1 = std_reg(32);
    __kernel_x_0 = std_reg(32);
    __kernel_y_0 = std_reg(32);
    __padded_tensor_val_0 = std_reg(32);
    __sum_0 = std_reg(32);
    __x0 = std_reg(32);
    __y0 = std_reg(32);
    add10 = std_add(32);
    add11 = std_add(32);
    add12 = std_add(32);
    add13 = std_add(32);
    add14 = std_add(32);
    add5 = std_add(32);
    add6 = std_add(32);
    add7 = std_fp_sadd(32,16,16);
    add8 = std_add(32);
    add9 = std_add(32);
    and0 = std_and(1);
    and1 = std_and(1);
    and2 = std_and(1);
    bin_read10_0 = std_reg(32);
    bin_read8_0 = std_reg(32);
    bin_read9_0 = std_reg(32);
    const12 = std_const(32,0);
    const13 = std_const(32,0);
    const14 = std_const(32,0);
    const15 = std_const(32,255);
    const16 = std_const(32,0);
    const17 = std_const(32,25);
    const18 = std_const(32,0);
    const19 = std_const(32,25);
    const20 = std_const(32,0);
    const21 = std_const(32,95);
    const22 = std_const(32,0);
    const23 = std_const(32,4);
    const24 = std_const(32,0);
    const25 = std_const(32,4);
    const26 = std_const(32,1);
    const27 = std_const(32,1);
    const28 = std_const(32,2);
    const29 = std_const(32,28);
    const30 = std_const(32,2);
    const31 = std_const(32,28);
    const32 = std_const(32,2);
    const33 = std_const(32,2);
    const34 = std_const(32,1);
    const35 = std_const(32,1);
    const36 = std_const(32,1);
    const37 = std_const(32,1);
    const38 = std_const(32,1);
    const39 = std_const(32,1);
    const40 = std_const(32,1);
    fp_const0 = std_const(32,0);
    fp_const1 = std_const(32,0);
    ge0 = std_ge(32);
    ge1 = std_ge(32);
    le10 = std_le(32);
    le4 = std_le(32);
    le5 = std_le(32);
    le6 = std_le(32);
    le7 = std_le(32);
    le8 = std_le(32);
    le9 = std_le(32);
    lt0 = std_lt(32);
    lt1 = std_lt(32);
    mult_pipe0 = std_mult_pipe(32);
    mult_pipe1 = std_mult_pipe(32);
    mult_pipe2 = std_fp_smult_pipe(32,16,16);
    slice0 = std_slice(32,1);
    slice1 = std_slice(32,7);
    slice10 = std_slice(32,5);
    slice11 = std_slice(32,5);
    slice2 = std_slice(32,5);
    slice3 = std_slice(32,5);
    slice4 = std_slice(32,9);
    slice5 = std_slice(32,6);
    slice6 = std_slice(32,3);
    slice7 = std_slice(32,3);
    slice8 = std_slice(32,1);
    slice9 = std_slice(32,9);
    sub0 = std_sub(32);
    sub1 = std_sub(32);
    x_18_read0_0 = std_reg(32);
    x_19_read0_0 = std_reg(32);
  }
  wires {
    comb group cond10 {
      le10.left = __dx0.out;
      le10.right = const25.out;
    }
    comb group cond11 {
      and2.left = and1.out;
      and2.right = lt1.out;
      and1.left = and0.out;
      and1.right = ge1.out;
      and0.left = ge0.out;
      and0.right = lt0.out;
      ge0.left = __kernel_y_0.out;
      ge0.right = const28.out;
      lt0.left = __kernel_y_0.out;
      lt0.right = const29.out;
      ge1.left = __kernel_x_0.out;
      ge1.right = const30.out;
      lt1.left = __kernel_x_0.out;
      lt1.right = const31.out;
    }
    comb group cond4 {
      le4.left = __b0.out;
      le4.right = const13.out;
    }
    comb group cond5 {
      le5.left = __c0.out;
      le5.right = const15.out;
    }
    comb group cond6 {
      le6.left = __y0.out;
      le6.right = const17.out;
    }
    comb group cond7 {
      le7.left = __x0.out;
      le7.right = const19.out;
    }
    comb group cond8 {
      le8.left = __k1.out;
      le8.right = const21.out;
    }
    comb group cond9 {
      le9.left = __dy0.out;
      le9.right = const23.out;
    }
    group let10<"static"=1> {
      __sum_0.in = fp_const0.out;
      __sum_0.write_en = 1'd1;
      let10[done] = __sum_0.done;
    }
    group let11<"static"=1> {
      __k1.in = const20.out;
      __k1.write_en = 1'd1;
      let11[done] = __k1.done;
    }
    group let12<"static"=1> {
      __dy0.in = const22.out;
      __dy0.write_en = 1'd1;
      let12[done] = __dy0.done;
    }
    group let13<"static"=1> {
      __dx0.in = const24.out;
      __dx0.write_en = 1'd1;
      let13[done] = __dx0.done;
    }
    group let14<"static"=4> {
      bin_read8_0.in = mult_pipe0.out;
      bin_read8_0.write_en = mult_pipe0.done;
      let14[done] = bin_read8_0.done;
      mult_pipe0.left = const26.out;
      mult_pipe0.right = __y0.out;
      mult_pipe0.go = !mult_pipe0.done ? 1'd1;
    }
    group let15<"static"=1> {
      __kernel_y_0.in = add5.out;
      __kernel_y_0.write_en = 1'd1;
      let15[done] = __kernel_y_0.done;
      add5.left = bin_read8_0.out;
      add5.right = __dy0.out;
    }
    group let16<"static"=4> {
      bin_read9_0.in = mult_pipe1.out;
      bin_read9_0.write_en = mult_pipe1.done;
      let16[done] = bin_read9_0.done;
      mult_pipe1.left = const27.out;
      mult_pipe1.right = __x0.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
    }
    group let17<"static"=1> {
      __kernel_x_0.in = add6.out;
      __kernel_x_0.write_en = 1'd1;
      let17[done] = __kernel_x_0.done;
      add6.left = bin_read9_0.out;
      add6.right = __dx0.out;
    }
    group let18<"static"=1> {
      __padded_tensor_val_0.in = fp_const1.out;
      __padded_tensor_val_0.write_en = 1'd1;
      let18[done] = __padded_tensor_val_0.done;
    }
    group let19<"static"=2> {
      x_18_read0_0.in = x_18.read_data;
      x_18_read0_0.write_en = x_18.read_done;
      let19[done] = x_18_read0_0.done;
      x_18.addr3 = slice3.out;
      slice3.in = sub1.out;
      sub1.left = __kernel_x_0.out;
      sub1.right = const33.out;
      x_18.addr2 = slice2.out;
      slice2.in = sub0.out;
      sub0.left = __kernel_y_0.out;
      sub0.right = const32.out;
      x_18.addr1 = slice1.out;
      slice1.in = __k1.out;
      x_18.addr0 = slice0.out;
      slice0.in = __b0.out;
      x_18.read_en = 1'd1;
    }
    group let20<"static"=2> {
      x_19_read0_0.in = x_19.read_data;
      x_19_read0_0.write_en = x_19.read_done;
      let20[done] = x_19_read0_0.done;
      x_19.addr3 = slice7.out;
      slice7.in = __dx0.out;
      x_19.addr2 = slice6.out;
      slice6.in = __dy0.out;
      x_19.addr1 = slice5.out;
      slice5.in = __k1.out;
      x_19.addr0 = slice4.out;
      slice4.in = __c0.out;
      x_19.read_en = 1'd1;
    }
    group let21<"static"=4> {
      bin_read10_0.in = mult_pipe2.out;
      bin_read10_0.write_en = mult_pipe2.done;
      let21[done] = bin_read10_0.done;
      mult_pipe2.left = __padded_tensor_val_0.out;
      mult_pipe2.right = x_19_read0_0.out;
      mult_pipe2.go = !mult_pipe2.done ? 1'd1;
    }
    group let6<"static"=1> {
      __b0.in = const12.out;
      __b0.write_en = 1'd1;
      let6[done] = __b0.done;
    }
    group let7<"static"=1> {
      __c0.in = const14.out;
      __c0.write_en = 1'd1;
      let7[done] = __c0.done;
    }
    group let8<"static"=1> {
      __y0.in = const16.out;
      __y0.write_en = 1'd1;
      let8[done] = __y0.done;
    }
    group let9<"static"=1> {
      __x0.in = const18.out;
      __x0.write_en = 1'd1;
      let9[done] = __x0.done;
    }
    group upd10<"static"=1> {
      x_20.addr3 = slice11.out;
      slice11.in = __x0.out;
      x_20.addr2 = slice10.out;
      slice10.in = __y0.out;
      x_20.addr1 = slice9.out;
      slice9.in = __c0.out;
      x_20.addr0 = slice8.out;
      slice8.in = __b0.out;
      x_20.write_en = 1'd1;
      x_20.write_data = __sum_0.out;
      upd10[done] = x_20.write_done;
    }
    group upd11<"static"=1> {
      __x0.write_en = 1'd1;
      add11.left = __x0.out;
      add11.right = const37.out;
      __x0.in = add11.out;
      upd11[done] = __x0.done;
    }
    group upd12<"static"=1> {
      __y0.write_en = 1'd1;
      add12.left = __y0.out;
      add12.right = const38.out;
      __y0.in = add12.out;
      upd12[done] = __y0.done;
    }
    group upd13<"static"=1> {
      __c0.write_en = 1'd1;
      add13.left = __c0.out;
      add13.right = const39.out;
      __c0.in = add13.out;
      upd13[done] = __c0.done;
    }
    group upd14<"static"=1> {
      __b0.write_en = 1'd1;
      add14.left = __b0.out;
      add14.right = const40.out;
      __b0.in = add14.out;
      upd14[done] = __b0.done;
    }
    group upd5<"static"=1> {
      __padded_tensor_val_0.write_en = 1'd1;
      __padded_tensor_val_0.in = x_18_read0_0.out;
      upd5[done] = __padded_tensor_val_0.done;
    }
    group upd6<"static"=1> {
      __sum_0.write_en = 1'd1;
      add7.left = __sum_0.out;
      add7.right = bin_read10_0.out;
      __sum_0.in = add7.out;
      upd6[done] = __sum_0.done;
    }
    group upd7<"static"=1> {
      __dx0.write_en = 1'd1;
      add8.left = __dx0.out;
      add8.right = const34.out;
      __dx0.in = add8.out;
      upd7[done] = __dx0.done;
    }
    group upd8<"static"=1> {
      __dy0.write_en = 1'd1;
      add9.left = __dy0.out;
      add9.right = const35.out;
      __dy0.in = add9.out;
      upd8[done] = __dy0.done;
    }
    group upd9<"static"=1> {
      __k1.write_en = 1'd1;
      add10.left = __k1.out;
      add10.right = const36.out;
      __k1.in = add10.out;
      upd9[done] = __k1.done;
    }
  }
  control {
    seq {
      @pos(7) let6;
      @bound(1) while le4.out with cond4 {
        seq {
          @pos(8) let7;
          @bound(256) while le5.out with cond5 {
            seq {
              @pos(9) let8;
              @bound(26) while le6.out with cond6 {
                seq {
                  @pos(10) let9;
                  @bound(26) while le7.out with cond7 {
                    seq {
                      @pos(11) let10;
                      @pos(12) let11;
                      @bound(96) while le8.out with cond8 {
                        seq {
                          @pos(13) let12;
                          @bound(5) while le9.out with cond9 {
                            seq {
                              @pos(14) let13;
                              @bound(5) while le10.out with cond10 {
                                seq {
                                  par {
                                    seq {
                                      let14;
                                      let15;
                                    }
                                    seq {
                                      let16;
                                      let17;
                                    }
                                  }
                                  @pos(15) let18;
                                  if and2.out with cond11 {
                                    seq {
                                      @pos(16) let19;
                                      @pos(17) upd5;
                                    }
                                  }
                                  @pos(18) let20;
                                  let21;
                                  upd6;
                                  @pos(14) upd7;
                                }
                              }
                              @pos(13) upd8;
                            }
                          }
                          @pos(12) upd9;
                        }
                      }
                      @pos(19) upd10;
                      @pos(10) upd11;
                    }
                  }
                  @pos(9) upd12;
                }
              }
              @pos(8) upd13;
            }
          }
          @pos(7) upd14;
        }
      }
    }
  }
}
component bias_add_1x256x26x26() -> () {
  cells {
    ref x_20 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    ref x_21 = seq_mem_d1(32,256,9);
    ref x_22 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    __i1 = std_reg(1);
    __j1 = std_reg(9);
    __k2 = std_reg(5);
    __l1 = std_reg(5);
    add15 = std_fp_sadd(32,16,16);
    add16 = std_add(5);
    add17 = std_add(5);
    add18 = std_add(9);
    add19 = std_add(1);
    const41 = std_const(1,0);
    const42 = std_const(1,0);
    const43 = std_const(9,0);
    const44 = std_const(9,255);
    const45 = std_const(5,0);
    const46 = std_const(5,25);
    const47 = std_const(5,0);
    const48 = std_const(5,25);
    const49 = std_const(5,1);
    const50 = std_const(5,1);
    const51 = std_const(9,1);
    const52 = std_const(1,1);
    le11 = std_le(1);
    le12 = std_le(9);
    le13 = std_le(5);
    le14 = std_le(5);
    x_20_read0_0 = std_reg(32);
    x_21_read0_0 = std_reg(32);
  }
  wires {
    comb group cond12 {
      le11.left = __i1.out;
      le11.right = const42.out;
    }
    comb group cond13 {
      le12.left = __j1.out;
      le12.right = const44.out;
    }
    comb group cond14 {
      le13.left = __k2.out;
      le13.right = const46.out;
    }
    comb group cond15 {
      le14.left = __l1.out;
      le14.right = const48.out;
    }
    group let22<"static"=1> {
      __i1.in = const41.out;
      __i1.write_en = 1'd1;
      let22[done] = __i1.done;
    }
    group let23<"static"=1> {
      __j1.in = const43.out;
      __j1.write_en = 1'd1;
      let23[done] = __j1.done;
    }
    group let24<"static"=1> {
      __k2.in = const45.out;
      __k2.write_en = 1'd1;
      let24[done] = __k2.done;
    }
    group let25<"static"=1> {
      __l1.in = const47.out;
      __l1.write_en = 1'd1;
      let25[done] = __l1.done;
    }
    group let26<"static"=2> {
      x_20_read0_0.in = x_20.read_data;
      x_20_read0_0.write_en = x_20.read_done;
      let26[done] = x_20_read0_0.done;
      x_20.addr3 = __l1.out;
      x_20.addr2 = __k2.out;
      x_20.addr1 = __j1.out;
      x_20.addr0 = __i1.out;
      x_20.read_en = 1'd1;
    }
    group let27<"static"=2> {
      x_21_read0_0.in = x_21.read_data;
      x_21_read0_0.write_en = x_21.read_done;
      let27[done] = x_21_read0_0.done;
      x_21.addr0 = __j1.out;
      x_21.read_en = 1'd1;
    }
    group upd15<"static"=1> {
      x_22.addr3 = __l1.out;
      x_22.addr2 = __k2.out;
      x_22.addr1 = __j1.out;
      x_22.addr0 = __i1.out;
      x_22.write_en = 1'd1;
      add15.left = x_20_read0_0.out;
      add15.right = x_21_read0_0.out;
      x_22.write_data = add15.out;
      upd15[done] = x_22.write_done;
    }
    group upd16<"static"=1> {
      __l1.write_en = 1'd1;
      add16.left = __l1.out;
      add16.right = const49.out;
      __l1.in = add16.out;
      upd16[done] = __l1.done;
    }
    group upd17<"static"=1> {
      __k2.write_en = 1'd1;
      add17.left = __k2.out;
      add17.right = const50.out;
      __k2.in = add17.out;
      upd17[done] = __k2.done;
    }
    group upd18<"static"=1> {
      __j1.write_en = 1'd1;
      add18.left = __j1.out;
      add18.right = const51.out;
      __j1.in = add18.out;
      upd18[done] = __j1.done;
    }
    group upd19<"static"=1> {
      __i1.write_en = 1'd1;
      add19.left = __i1.out;
      add19.right = const52.out;
      __i1.in = add19.out;
      upd19[done] = __i1.done;
    }
  }
  control {
    seq {
      @pos(20) let22;
      @bound(1) while le11.out with cond12 {
        seq {
          @pos(21) let23;
          @bound(256) while le12.out with cond13 {
            seq {
              @pos(22) let24;
              @bound(26) while le13.out with cond14 {
                seq {
                  @pos(23) let25;
                  @bound(26) while le14.out with cond15 {
                    seq {
                      par {
                        @pos(24) let26;
                        @pos(25) let27;
                      }
                      @pos(26) upd15;
                      @pos(23) upd16;
                    }
                  }
                  @pos(22) upd17;
                }
              }
              @pos(21) upd18;
            }
          }
          @pos(20) upd19;
        }
      }
    }
  }
}
component dense_1x1000() -> () {
  cells {
    ref x_52 = seq_mem_d2(32,1,4096,1,13);
    ref x_53 = seq_mem_d2(32,1000,4096,10,13);
    ref x_54 = seq_mem_d2(32,1,1000,1,10);
    __i2 = std_reg(1);
    __j2 = std_reg(10);
    __k3 = std_reg(13);
    __product_0 = std_reg(32);
    add20 = std_fp_sadd(32,16,16);
    add21 = std_add(13);
    add22 = std_add(10);
    add23 = std_add(1);
    bin_read29_0 = std_reg(32);
    const53 = std_const(1,0);
    const54 = std_const(1,0);
    const55 = std_const(10,0);
    const56 = std_const(10,999);
    const57 = std_const(13,0);
    const58 = std_const(13,4095);
    const59 = std_const(13,1);
    const60 = std_const(10,1);
    const61 = std_const(1,1);
    le15 = std_le(1);
    le16 = std_le(10);
    le17 = std_le(13);
    mult_pipe3 = std_fp_smult_pipe(32,16,16);
    red_read00 = std_reg(32);
    x_52_read0_0 = std_reg(32);
    x_53_read0_0 = std_reg(32);
  }
  wires {
    comb group cond16 {
      le15.left = __i2.out;
      le15.right = const54.out;
    }
    comb group cond17 {
      le16.left = __j2.out;
      le16.right = const56.out;
    }
    comb group cond18 {
      le17.left = __k3.out;
      le17.right = const58.out;
    }
    group let28<"static"=1> {
      __i2.in = const53.out;
      __i2.write_en = 1'd1;
      let28[done] = __i2.done;
    }
    group let29<"static"=1> {
      __j2.in = const55.out;
      __j2.write_en = 1'd1;
      let29[done] = __j2.done;
    }
    group let30<"static"=1> {
      __k3.in = const57.out;
      __k3.write_en = 1'd1;
      let30[done] = __k3.done;
    }
    group let31<"static"=2> {
      x_52_read0_0.in = x_52.read_data;
      x_52_read0_0.write_en = x_52.read_done;
      let31[done] = x_52_read0_0.done;
      x_52.addr1 = __k3.out;
      x_52.addr0 = __i2.out;
      x_52.read_en = 1'd1;
    }
    group let32<"static"=2> {
      x_53_read0_0.in = x_53.read_data;
      x_53_read0_0.write_en = x_53.read_done;
      let32[done] = x_53_read0_0.done;
      x_53.addr1 = __k3.out;
      x_53.addr0 = __j2.out;
      x_53.read_en = 1'd1;
    }
    group let33<"static"=4> {
      bin_read29_0.in = mult_pipe3.out;
      bin_read29_0.write_en = mult_pipe3.done;
      let33[done] = bin_read29_0.done;
      mult_pipe3.left = x_52_read0_0.out;
      mult_pipe3.right = x_53_read0_0.out;
      mult_pipe3.go = !mult_pipe3.done ? 1'd1;
    }
    group let34<"static"=1> {
      __product_0.in = bin_read29_0.out;
      __product_0.write_en = 1'd1;
      let34[done] = __product_0.done;
    }
    group let35<"static"=2> {
      red_read00.in = x_54.read_data;
      red_read00.write_en = x_54.read_done;
      let35[done] = red_read00.done;
      x_54.addr1 = __j2.out;
      x_54.addr0 = __i2.out;
      x_54.read_en = 1'd1;
    }
    group upd20<"static"=1> {
      x_54.addr1 = __j2.out;
      x_54.addr0 = __i2.out;
      x_54.write_en = 1'd1;
      add20.left = red_read00.out;
      add20.right = __product_0.out;
      x_54.write_data = add20.out;
      upd20[done] = x_54.write_done;
    }
    group upd21<"static"=1> {
      __k3.write_en = 1'd1;
      add21.left = __k3.out;
      add21.right = const59.out;
      __k3.in = add21.out;
      upd21[done] = __k3.done;
    }
    group upd22<"static"=1> {
      __j2.write_en = 1'd1;
      add22.left = __j2.out;
      add22.right = const60.out;
      __j2.in = add22.out;
      upd22[done] = __j2.done;
    }
    group upd23<"static"=1> {
      __i2.write_en = 1'd1;
      add23.left = __i2.out;
      add23.right = const61.out;
      __i2.in = add23.out;
      upd23[done] = __i2.done;
    }
  }
  control {
    seq {
      @pos(27) let28;
      @bound(1) while le15.out with cond16 {
        seq {
          @pos(28) let29;
          @bound(1000) while le16.out with cond17 {
            seq {
              @pos(29) let30;
              @bound(4096) while le17.out with cond18 {
                seq {
                  par {
                    @pos(30) let31;
                    @pos(31) let32;
                  }
                  let33;
                  let34;
                  let35;
                  upd20;
                  @pos(29) upd21;
                }
              }
              @pos(28) upd22;
            }
          }
          @pos(27) upd23;
        }
      }
    }
  }
}
component relu_1x256x12x12() -> () {
  cells {
    ref x_39 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    ref x_40 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    __i3 = std_reg(1);
    __j3 = std_reg(9);
    __k4 = std_reg(4);
    __l2 = std_reg(4);
    add24 = std_add(4);
    add25 = std_add(4);
    add26 = std_add(9);
    add27 = std_add(1);
    const62 = std_const(1,0);
    const63 = std_const(1,0);
    const64 = std_const(9,0);
    const65 = std_const(9,255);
    const66 = std_const(4,0);
    const67 = std_const(4,11);
    const68 = std_const(4,0);
    const69 = std_const(4,11);
    const70 = std_const(4,1);
    const71 = std_const(4,1);
    const72 = std_const(9,1);
    const73 = std_const(1,1);
    fp_const2 = std_const(32,0);
    fp_const3 = std_const(32,0);
    gt0 = std_fp_sgt(32,16,16);
    le18 = std_le(1);
    le19 = std_le(9);
    le20 = std_le(4);
    le21 = std_le(4);
    x_39_read0_0 = std_reg(32);
    x_39_read1_0 = std_reg(32);
  }
  wires {
    comb group cond19 {
      le18.left = __i3.out;
      le18.right = const63.out;
    }
    comb group cond20 {
      le19.left = __j3.out;
      le19.right = const65.out;
    }
    comb group cond21 {
      le20.left = __k4.out;
      le20.right = const67.out;
    }
    comb group cond22 {
      le21.left = __l2.out;
      le21.right = const69.out;
    }
    comb group cond23 {
      gt0.left = x_39_read0_0.out;
      gt0.right = fp_const2.out;
    }
    group let36<"static"=1> {
      __i3.in = const62.out;
      __i3.write_en = 1'd1;
      let36[done] = __i3.done;
    }
    group let37<"static"=1> {
      __j3.in = const64.out;
      __j3.write_en = 1'd1;
      let37[done] = __j3.done;
    }
    group let38<"static"=1> {
      __k4.in = const66.out;
      __k4.write_en = 1'd1;
      let38[done] = __k4.done;
    }
    group let39<"static"=1> {
      __l2.in = const68.out;
      __l2.write_en = 1'd1;
      let39[done] = __l2.done;
    }
    group let40<"static"=2> {
      x_39_read0_0.in = x_39.read_data;
      x_39_read0_0.write_en = x_39.read_done;
      let40[done] = x_39_read0_0.done;
      x_39.addr3 = __l2.out;
      x_39.addr2 = __k4.out;
      x_39.addr1 = __j3.out;
      x_39.addr0 = __i3.out;
      x_39.read_en = 1'd1;
    }
    group let41<"static"=2> {
      x_39_read1_0.in = x_39.read_data;
      x_39_read1_0.write_en = x_39.read_done;
      let41[done] = x_39_read1_0.done;
      x_39.addr3 = __l2.out;
      x_39.addr2 = __k4.out;
      x_39.addr1 = __j3.out;
      x_39.addr0 = __i3.out;
      x_39.read_en = 1'd1;
    }
    group upd24<"static"=1> {
      x_40.addr3 = __l2.out;
      x_40.addr2 = __k4.out;
      x_40.addr1 = __j3.out;
      x_40.addr0 = __i3.out;
      x_40.write_en = 1'd1;
      x_40.write_data = x_39_read1_0.out;
      upd24[done] = x_40.write_done;
    }
    group upd25<"static"=1> {
      x_40.addr3 = __l2.out;
      x_40.addr2 = __k4.out;
      x_40.addr1 = __j3.out;
      x_40.addr0 = __i3.out;
      x_40.write_en = 1'd1;
      x_40.write_data = fp_const3.out;
      upd25[done] = x_40.write_done;
    }
    group upd26<"static"=1> {
      __l2.write_en = 1'd1;
      add24.left = __l2.out;
      add24.right = const70.out;
      __l2.in = add24.out;
      upd26[done] = __l2.done;
    }
    group upd27<"static"=1> {
      __k4.write_en = 1'd1;
      add25.left = __k4.out;
      add25.right = const71.out;
      __k4.in = add25.out;
      upd27[done] = __k4.done;
    }
    group upd28<"static"=1> {
      __j3.write_en = 1'd1;
      add26.left = __j3.out;
      add26.right = const72.out;
      __j3.in = add26.out;
      upd28[done] = __j3.done;
    }
    group upd29<"static"=1> {
      __i3.write_en = 1'd1;
      add27.left = __i3.out;
      add27.right = const73.out;
      __i3.in = add27.out;
      upd29[done] = __i3.done;
    }
  }
  control {
    seq {
      @pos(32) let36;
      @bound(1) while le18.out with cond19 {
        seq {
          @pos(33) let37;
          @bound(256) while le19.out with cond20 {
            seq {
              @pos(34) let38;
              @bound(12) while le20.out with cond21 {
                seq {
                  @pos(35) let39;
                  @bound(12) while le21.out with cond22 {
                    seq {
                      @pos(36) let40;
                      if gt0.out with cond23 {
                        seq {
                          @pos(37) let41;
                          @pos(38) upd24;
                        }
                      } else {
                        @pos(39) upd25;
                      }
                      @pos(35) upd26;
                    }
                  }
                  @pos(34) upd27;
                }
              }
              @pos(33) upd28;
            }
          }
          @pos(32) upd29;
        }
      }
    }
  }
}
component add_1x4096() -> () {
  cells {
    ref x_44 = seq_mem_d2(32,1,4096,1,13);
    ref x_45 = seq_mem_d1(32,4096,13);
    ref x_46 = seq_mem_d2(32,1,4096,1,13);
    __i4 = std_reg(1);
    __j4 = std_reg(13);
    add28 = std_fp_sadd(32,16,16);
    add29 = std_add(13);
    add30 = std_add(1);
    const74 = std_const(1,0);
    const75 = std_const(1,0);
    const76 = std_const(13,0);
    const77 = std_const(13,4095);
    const78 = std_const(13,1);
    const79 = std_const(1,1);
    le22 = std_le(1);
    le23 = std_le(13);
    x_44_read0_0 = std_reg(32);
    x_45_read0_0 = std_reg(32);
  }
  wires {
    comb group cond24 {
      le22.left = __i4.out;
      le22.right = const75.out;
    }
    comb group cond25 {
      le23.left = __j4.out;
      le23.right = const77.out;
    }
    group let42<"static"=1> {
      __i4.in = const74.out;
      __i4.write_en = 1'd1;
      let42[done] = __i4.done;
    }
    group let43<"static"=1> {
      __j4.in = const76.out;
      __j4.write_en = 1'd1;
      let43[done] = __j4.done;
    }
    group let44<"static"=2> {
      x_44_read0_0.in = x_44.read_data;
      x_44_read0_0.write_en = x_44.read_done;
      let44[done] = x_44_read0_0.done;
      x_44.addr1 = __j4.out;
      x_44.addr0 = __i4.out;
      x_44.read_en = 1'd1;
    }
    group let45<"static"=2> {
      x_45_read0_0.in = x_45.read_data;
      x_45_read0_0.write_en = x_45.read_done;
      let45[done] = x_45_read0_0.done;
      x_45.addr0 = __j4.out;
      x_45.read_en = 1'd1;
    }
    group upd30<"static"=1> {
      x_46.addr1 = __j4.out;
      x_46.addr0 = __i4.out;
      x_46.write_en = 1'd1;
      add28.left = x_44_read0_0.out;
      add28.right = x_45_read0_0.out;
      x_46.write_data = add28.out;
      upd30[done] = x_46.write_done;
    }
    group upd31<"static"=1> {
      __j4.write_en = 1'd1;
      add29.left = __j4.out;
      add29.right = const78.out;
      __j4.in = add29.out;
      upd31[done] = __j4.done;
    }
    group upd32<"static"=1> {
      __i4.write_en = 1'd1;
      add30.left = __i4.out;
      add30.right = const79.out;
      __i4.in = add30.out;
      upd32[done] = __i4.done;
    }
  }
  control {
    seq {
      @pos(40) let42;
      @bound(1) while le22.out with cond24 {
        seq {
          @pos(41) let43;
          @bound(4096) while le23.out with cond25 {
            seq {
              par {
                @pos(42) let44;
                @pos(43) let45;
              }
              @pos(44) upd30;
              @pos(41) upd31;
            }
          }
          @pos(40) upd32;
        }
      }
    }
  }
}
component relu_1x256x26x26() -> () {
  cells {
    ref x_22 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    ref x_23 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    __i5 = std_reg(1);
    __j5 = std_reg(9);
    __k5 = std_reg(5);
    __l3 = std_reg(5);
    add31 = std_add(5);
    add32 = std_add(5);
    add33 = std_add(9);
    add34 = std_add(1);
    const80 = std_const(1,0);
    const81 = std_const(1,0);
    const82 = std_const(9,0);
    const83 = std_const(9,255);
    const84 = std_const(5,0);
    const85 = std_const(5,25);
    const86 = std_const(5,0);
    const87 = std_const(5,25);
    const88 = std_const(5,1);
    const89 = std_const(5,1);
    const90 = std_const(9,1);
    const91 = std_const(1,1);
    fp_const4 = std_const(32,0);
    fp_const5 = std_const(32,0);
    gt1 = std_fp_sgt(32,16,16);
    le24 = std_le(1);
    le25 = std_le(9);
    le26 = std_le(5);
    le27 = std_le(5);
    x_22_read0_0 = std_reg(32);
    x_22_read1_0 = std_reg(32);
  }
  wires {
    comb group cond26 {
      le24.left = __i5.out;
      le24.right = const81.out;
    }
    comb group cond27 {
      le25.left = __j5.out;
      le25.right = const83.out;
    }
    comb group cond28 {
      le26.left = __k5.out;
      le26.right = const85.out;
    }
    comb group cond29 {
      le27.left = __l3.out;
      le27.right = const87.out;
    }
    comb group cond30 {
      gt1.left = x_22_read0_0.out;
      gt1.right = fp_const4.out;
    }
    group let46<"static"=1> {
      __i5.in = const80.out;
      __i5.write_en = 1'd1;
      let46[done] = __i5.done;
    }
    group let47<"static"=1> {
      __j5.in = const82.out;
      __j5.write_en = 1'd1;
      let47[done] = __j5.done;
    }
    group let48<"static"=1> {
      __k5.in = const84.out;
      __k5.write_en = 1'd1;
      let48[done] = __k5.done;
    }
    group let49<"static"=1> {
      __l3.in = const86.out;
      __l3.write_en = 1'd1;
      let49[done] = __l3.done;
    }
    group let50<"static"=2> {
      x_22_read0_0.in = x_22.read_data;
      x_22_read0_0.write_en = x_22.read_done;
      let50[done] = x_22_read0_0.done;
      x_22.addr3 = __l3.out;
      x_22.addr2 = __k5.out;
      x_22.addr1 = __j5.out;
      x_22.addr0 = __i5.out;
      x_22.read_en = 1'd1;
    }
    group let51<"static"=2> {
      x_22_read1_0.in = x_22.read_data;
      x_22_read1_0.write_en = x_22.read_done;
      let51[done] = x_22_read1_0.done;
      x_22.addr3 = __l3.out;
      x_22.addr2 = __k5.out;
      x_22.addr1 = __j5.out;
      x_22.addr0 = __i5.out;
      x_22.read_en = 1'd1;
    }
    group upd33<"static"=1> {
      x_23.addr3 = __l3.out;
      x_23.addr2 = __k5.out;
      x_23.addr1 = __j5.out;
      x_23.addr0 = __i5.out;
      x_23.write_en = 1'd1;
      x_23.write_data = x_22_read1_0.out;
      upd33[done] = x_23.write_done;
    }
    group upd34<"static"=1> {
      x_23.addr3 = __l3.out;
      x_23.addr2 = __k5.out;
      x_23.addr1 = __j5.out;
      x_23.addr0 = __i5.out;
      x_23.write_en = 1'd1;
      x_23.write_data = fp_const5.out;
      upd34[done] = x_23.write_done;
    }
    group upd35<"static"=1> {
      __l3.write_en = 1'd1;
      add31.left = __l3.out;
      add31.right = const88.out;
      __l3.in = add31.out;
      upd35[done] = __l3.done;
    }
    group upd36<"static"=1> {
      __k5.write_en = 1'd1;
      add32.left = __k5.out;
      add32.right = const89.out;
      __k5.in = add32.out;
      upd36[done] = __k5.done;
    }
    group upd37<"static"=1> {
      __j5.write_en = 1'd1;
      add33.left = __j5.out;
      add33.right = const90.out;
      __j5.in = add33.out;
      upd37[done] = __j5.done;
    }
    group upd38<"static"=1> {
      __i5.write_en = 1'd1;
      add34.left = __i5.out;
      add34.right = const91.out;
      __i5.in = add34.out;
      upd38[done] = __i5.done;
    }
  }
  control {
    seq {
      @pos(45) let46;
      @bound(1) while le24.out with cond26 {
        seq {
          @pos(46) let47;
          @bound(256) while le25.out with cond27 {
            seq {
              @pos(47) let48;
              @bound(26) while le26.out with cond28 {
                seq {
                  @pos(48) let49;
                  @bound(26) while le27.out with cond29 {
                    seq {
                      @pos(49) let50;
                      if gt1.out with cond30 {
                        seq {
                          @pos(50) let51;
                          @pos(51) upd33;
                        }
                      } else {
                        @pos(52) upd34;
                      }
                      @pos(48) upd35;
                    }
                  }
                  @pos(47) upd36;
                }
              }
              @pos(46) upd37;
            }
          }
          @pos(45) upd38;
        }
      }
    }
  }
}
component softmax_1x1000() -> () {
  cells {
    ref x_56 = seq_mem_d2(32,1,1000,1,10);
    ref x_57 = seq_mem_d2(32,1,1000,1,10);
    __exp_sum_0 = std_reg(32);
    __i6 = std_reg(1);
    __i7 = std_reg(1);
    __j6 = std_reg(10);
    __j7 = std_reg(10);
    __k6 = std_reg(10);
    __max_0 = std_reg(32);
    __t0_0 = std_reg(32);
    __t1_0 = std_reg(32);
    __t2_0 = std_reg(32);
    __t3_0 = std_reg(32);
    add35 = std_add(10);
    add36 = std_add(1);
    add37 = std_fp_sadd(32,16,16);
    add38 = std_add(10);
    add39 = std_add(10);
    add40 = std_add(1);
    bin_read30_0 = std_reg(32);
    const100 = std_const(1,0);
    const101 = std_const(1,0);
    const102 = std_const(10,0);
    const103 = std_const(10,999);
    const104 = std_const(10,1);
    const105 = std_const(10,0);
    const106 = std_const(10,999);
    const107 = std_const(10,1);
    const108 = std_const(1,1);
    const92 = std_const(1,0);
    const93 = std_const(10,0);
    const94 = std_const(1,0);
    const95 = std_const(1,0);
    const96 = std_const(10,0);
    const97 = std_const(10,999);
    const98 = std_const(10,1);
    const99 = std_const(1,1);
    div_pipe0 = std_fp_sdiv_pipe(32,16,16);
    exp0 = exp();
    exp1 = exp();
    fp_const6 = std_const(32,0);
    gt2 = std_fp_sgt(32,16,16);
    le28 = std_le(1);
    le29 = std_le(10);
    le30 = std_le(1);
    le31 = std_le(10);
    le32 = std_le(10);
    sub2 = std_fp_ssub(32,16,16);
    sub3 = std_fp_ssub(32,16,16);
    x_56_read0_0 = std_reg(32);
    x_56_read1_0 = std_reg(32);
    x_56_read2_0 = std_reg(32);
    x_56_read3_0 = std_reg(32);
  }
  wires {
    comb group cond31 {
      le28.left = __i6.out;
      le28.right = const95.out;
    }
    comb group cond32 {
      le29.left = __j6.out;
      le29.right = const97.out;
    }
    comb group cond33 {
      gt2.left = x_56_read0_0.out;
      gt2.right = __max_0.out;
    }
    comb group cond34 {
      le30.left = __i7.out;
      le30.right = const101.out;
    }
    comb group cond35 {
      le31.left = __j7.out;
      le31.right = const103.out;
    }
    comb group cond36 {
      le32.left = __k6.out;
      le32.right = const106.out;
    }
    group let52<"static"=2> {
      __max_0.in = x_56.read_data;
      __max_0.write_en = x_56.read_done;
      let52[done] = __max_0.done;
      x_56.addr1 = const93.out;
      x_56.addr0 = const92.out;
      x_56.read_en = 1'd1;
    }
    group let53<"static"=1> {
      __i6.in = const94.out;
      __i6.write_en = 1'd1;
      let53[done] = __i6.done;
    }
    group let54<"static"=1> {
      __j6.in = const96.out;
      __j6.write_en = 1'd1;
      let54[done] = __j6.done;
    }
    group let55<"static"=2> {
      x_56_read0_0.in = x_56.read_data;
      x_56_read0_0.write_en = x_56.read_done;
      let55[done] = x_56_read0_0.done;
      x_56.addr1 = __j6.out;
      x_56.addr0 = __i6.out;
      x_56.read_en = 1'd1;
    }
    group let56<"static"=2> {
      x_56_read1_0.in = x_56.read_data;
      x_56_read1_0.write_en = x_56.read_done;
      let56[done] = x_56_read1_0.done;
      x_56.addr1 = __j6.out;
      x_56.addr0 = __i6.out;
      x_56.read_en = 1'd1;
    }
    group let57<"static"=1> {
      __i7.in = const100.out;
      __i7.write_en = 1'd1;
      let57[done] = __i7.done;
    }
    group let58<"static"=1> {
      __exp_sum_0.in = fp_const6.out;
      __exp_sum_0.write_en = 1'd1;
      let58[done] = __exp_sum_0.done;
    }
    group let59<"static"=1> {
      __j7.in = const102.out;
      __j7.write_en = 1'd1;
      let59[done] = __j7.done;
    }
    group let60<"static"=2> {
      x_56_read2_0.in = x_56.read_data;
      x_56_read2_0.write_en = x_56.read_done;
      let60[done] = x_56_read2_0.done;
      x_56.addr1 = __j7.out;
      x_56.addr0 = __i7.out;
      x_56.read_en = 1'd1;
    }
    group let61<"static"=1> {
      __t0_0.in = sub2.out;
      __t0_0.write_en = 1'd1;
      let61[done] = __t0_0.done;
      sub2.left = x_56_read2_0.out;
      sub2.right = __max_0.out;
    }
    group let62 {
      __t1_0.in = exp0.out;
      __t1_0.write_en = 1'd1;
      let62[done] = __t1_0.done;
    }
    group let63<"static"=1> {
      __k6.in = const105.out;
      __k6.write_en = 1'd1;
      let63[done] = __k6.done;
    }
    group let64<"static"=2> {
      x_56_read3_0.in = x_56.read_data;
      x_56_read3_0.write_en = x_56.read_done;
      let64[done] = x_56_read3_0.done;
      x_56.addr1 = __k6.out;
      x_56.addr0 = __i7.out;
      x_56.read_en = 1'd1;
    }
    group let65<"static"=1> {
      __t2_0.in = sub3.out;
      __t2_0.write_en = 1'd1;
      let65[done] = __t2_0.done;
      sub3.left = x_56_read3_0.out;
      sub3.right = __max_0.out;
    }
    group let66 {
      __t3_0.in = exp1.out;
      __t3_0.write_en = 1'd1;
      let66[done] = __t3_0.done;
    }
    group let67 {
      bin_read30_0.in = div_pipe0.out_quotient;
      bin_read30_0.write_en = div_pipe0.done;
      let67[done] = bin_read30_0.done;
      div_pipe0.left = __t3_0.out;
      div_pipe0.right = __exp_sum_0.out;
      div_pipe0.go = !div_pipe0.done ? 1'd1;
    }
    group upd39<"static"=1> {
      __max_0.write_en = 1'd1;
      __max_0.in = x_56_read1_0.out;
      upd39[done] = __max_0.done;
    }
    group upd40<"static"=1> {
      __j6.write_en = 1'd1;
      add35.left = __j6.out;
      add35.right = const98.out;
      __j6.in = add35.out;
      upd40[done] = __j6.done;
    }
    group upd41<"static"=1> {
      __i6.write_en = 1'd1;
      add36.left = __i6.out;
      add36.right = const99.out;
      __i6.in = add36.out;
      upd41[done] = __i6.done;
    }
    group upd42<"static"=1> {
      __exp_sum_0.write_en = 1'd1;
      add37.left = __exp_sum_0.out;
      add37.right = __t1_0.out;
      __exp_sum_0.in = add37.out;
      upd42[done] = __exp_sum_0.done;
    }
    group upd43<"static"=1> {
      __j7.write_en = 1'd1;
      add38.left = __j7.out;
      add38.right = const104.out;
      __j7.in = add38.out;
      upd43[done] = __j7.done;
    }
    group upd44<"static"=1> {
      x_57.addr1 = __k6.out;
      x_57.addr0 = __i7.out;
      x_57.write_en = 1'd1;
      x_57.write_data = bin_read30_0.out;
      upd44[done] = x_57.write_done;
    }
    group upd45<"static"=1> {
      __k6.write_en = 1'd1;
      add39.left = __k6.out;
      add39.right = const107.out;
      __k6.in = add39.out;
      upd45[done] = __k6.done;
    }
    group upd46<"static"=1> {
      __i7.write_en = 1'd1;
      add40.left = __i7.out;
      add40.right = const108.out;
      __i7.in = add40.out;
      upd46[done] = __i7.done;
    }
  }
  control {
    seq {
      @pos(53) let52;
      @pos(54) let53;
      @bound(1) while le28.out with cond31 {
        seq {
          @pos(55) let54;
          @bound(1000) while le29.out with cond32 {
            seq {
              @pos(56) let55;
              if gt2.out with cond33 {
                seq {
                  @pos(57) let56;
                  @pos(58) upd39;
                }
              }
              @pos(55) upd40;
            }
          }
          @pos(54) upd41;
        }
      }
      @pos(59) let57;
      @bound(1) while le30.out with cond34 {
        seq {
          @pos(60) let58;
          @pos(61) let59;
          @bound(1000) while le31.out with cond35 {
            seq {
              @pos(62) let60;
              let61;
              invoke exp0(x=__t0_0.out)();
              @pos(63) let62;
              upd42;
              @pos(61) upd43;
            }
          }
          @pos(64) let63;
          @bound(1000) while le32.out with cond36 {
            seq {
              @pos(65) let64;
              let65;
              invoke exp1(x=__t2_0.out)();
              @pos(66) let66;
              let67;
              upd44;
              @pos(64) upd45;
            }
          }
          @pos(59) upd46;
        }
      }
    }
  }
}
component max_pool2d_1x256x6x6() -> () {
  cells {
    ref x_40 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    ref x_41 = seq_mem_d4(32,1,256,6,6,1,9,3,3);
    __b1 = std_reg(32);
    __c1 = std_reg(32);
    __current_0 = std_reg(32);
    __m0 = std_reg(32);
    __max_1 = std_reg(32);
    __n0 = std_reg(32);
    __pool_x_0 = std_reg(32);
    __pool_y_0 = std_reg(32);
    __stride_x_0 = std_reg(32);
    __stride_y_0 = std_reg(32);
    __x1 = std_reg(32);
    __y1 = std_reg(32);
    add41 = std_add(32);
    add42 = std_add(32);
    add43 = std_add(32);
    add44 = std_add(32);
    add45 = std_add(32);
    add46 = std_add(32);
    add47 = std_add(32);
    add48 = std_add(32);
    bin_read25_0 = std_reg(32);
    bin_read26_0 = std_reg(32);
    const109 = std_const(32,0);
    const110 = std_const(32,0);
    const111 = std_const(32,0);
    const112 = std_const(32,255);
    const113 = std_const(32,0);
    const114 = std_const(32,5);
    const115 = std_const(32,0);
    const116 = std_const(32,5);
    const117 = std_const(32,2);
    const118 = std_const(32,2);
    const119 = std_const(32,0);
    const120 = std_const(32,2);
    const121 = std_const(32,0);
    const122 = std_const(32,2);
    const123 = std_const(32,1);
    const124 = std_const(32,1);
    const125 = std_const(32,1);
    const126 = std_const(32,1);
    const127 = std_const(32,1);
    const128 = std_const(32,1);
    gt3 = std_fp_sgt(32,16,16);
    le33 = std_le(32);
    le34 = std_le(32);
    le35 = std_le(32);
    le36 = std_le(32);
    le37 = std_le(32);
    le38 = std_le(32);
    mult_pipe4 = std_mult_pipe(32);
    mult_pipe5 = std_mult_pipe(32);
    slice12 = std_slice(32,1);
    slice13 = std_slice(32,9);
    slice14 = std_slice(32,4);
    slice15 = std_slice(32,4);
    slice16 = std_slice(32,1);
    slice17 = std_slice(32,9);
    slice18 = std_slice(32,4);
    slice19 = std_slice(32,4);
    slice20 = std_slice(32,1);
    slice21 = std_slice(32,9);
    slice22 = std_slice(32,3);
    slice23 = std_slice(32,3);
  }
  wires {
    comb group cond37 {
      le33.left = __b1.out;
      le33.right = const110.out;
    }
    comb group cond38 {
      le34.left = __c1.out;
      le34.right = const112.out;
    }
    comb group cond39 {
      le35.left = __y1.out;
      le35.right = const114.out;
    }
    comb group cond40 {
      le36.left = __x1.out;
      le36.right = const116.out;
    }
    comb group cond41 {
      le37.left = __m0.out;
      le37.right = const120.out;
    }
    comb group cond42 {
      le38.left = __n0.out;
      le38.right = const122.out;
    }
    comb group cond43 {
      gt3.left = __current_0.out;
      gt3.right = __max_1.out;
    }
    group let68<"static"=1> {
      __b1.in = const109.out;
      __b1.write_en = 1'd1;
      let68[done] = __b1.done;
    }
    group let69<"static"=1> {
      __c1.in = const111.out;
      __c1.write_en = 1'd1;
      let69[done] = __c1.done;
    }
    group let70<"static"=1> {
      __y1.in = const113.out;
      __y1.write_en = 1'd1;
      let70[done] = __y1.done;
    }
    group let71<"static"=1> {
      __x1.in = const115.out;
      __x1.write_en = 1'd1;
      let71[done] = __x1.done;
    }
    group let72<"static"=4> {
      bin_read25_0.in = mult_pipe4.out;
      bin_read25_0.write_en = mult_pipe4.done;
      let72[done] = bin_read25_0.done;
      mult_pipe4.left = __y1.out;
      mult_pipe4.right = const117.out;
      mult_pipe4.go = !mult_pipe4.done ? 1'd1;
    }
    group let73<"static"=1> {
      __stride_y_0.in = bin_read25_0.out;
      __stride_y_0.write_en = 1'd1;
      let73[done] = __stride_y_0.done;
    }
    group let74<"static"=4> {
      bin_read26_0.in = mult_pipe5.out;
      bin_read26_0.write_en = mult_pipe5.done;
      let74[done] = bin_read26_0.done;
      mult_pipe5.left = __x1.out;
      mult_pipe5.right = const118.out;
      mult_pipe5.go = !mult_pipe5.done ? 1'd1;
    }
    group let75<"static"=1> {
      __stride_x_0.in = bin_read26_0.out;
      __stride_x_0.write_en = 1'd1;
      let75[done] = __stride_x_0.done;
    }
    group let76<"static"=2> {
      __max_1.in = x_40.read_data;
      __max_1.write_en = x_40.read_done;
      let76[done] = __max_1.done;
      x_40.addr3 = slice15.out;
      slice15.in = __stride_x_0.out;
      x_40.addr2 = slice14.out;
      slice14.in = __stride_y_0.out;
      x_40.addr1 = slice13.out;
      slice13.in = __c1.out;
      x_40.addr0 = slice12.out;
      slice12.in = __b1.out;
      x_40.read_en = 1'd1;
    }
    group let77<"static"=1> {
      __m0.in = const119.out;
      __m0.write_en = 1'd1;
      let77[done] = __m0.done;
    }
    group let78<"static"=1> {
      __n0.in = const121.out;
      __n0.write_en = 1'd1;
      let78[done] = __n0.done;
    }
    group let79<"static"=1> {
      __pool_y_0.in = add41.out;
      __pool_y_0.write_en = 1'd1;
      let79[done] = __pool_y_0.done;
      add41.left = __stride_y_0.out;
      add41.right = __m0.out;
    }
    group let80<"static"=1> {
      __pool_x_0.in = add42.out;
      __pool_x_0.write_en = 1'd1;
      let80[done] = __pool_x_0.done;
      add42.left = __stride_x_0.out;
      add42.right = __n0.out;
    }
    group let81<"static"=2> {
      __current_0.in = x_40.read_data;
      __current_0.write_en = x_40.read_done;
      let81[done] = __current_0.done;
      x_40.addr3 = slice19.out;
      slice19.in = __pool_x_0.out;
      x_40.addr2 = slice18.out;
      slice18.in = __pool_y_0.out;
      x_40.addr1 = slice17.out;
      slice17.in = __c1.out;
      x_40.addr0 = slice16.out;
      slice16.in = __b1.out;
      x_40.read_en = 1'd1;
    }
    group upd47<"static"=1> {
      __max_1.write_en = 1'd1;
      __max_1.in = __current_0.out;
      upd47[done] = __max_1.done;
    }
    group upd48<"static"=1> {
      __n0.write_en = 1'd1;
      add43.left = __n0.out;
      add43.right = const123.out;
      __n0.in = add43.out;
      upd48[done] = __n0.done;
    }
    group upd49<"static"=1> {
      __m0.write_en = 1'd1;
      add44.left = __m0.out;
      add44.right = const124.out;
      __m0.in = add44.out;
      upd49[done] = __m0.done;
    }
    group upd50<"static"=1> {
      x_41.addr3 = slice23.out;
      slice23.in = __x1.out;
      x_41.addr2 = slice22.out;
      slice22.in = __y1.out;
      x_41.addr1 = slice21.out;
      slice21.in = __c1.out;
      x_41.addr0 = slice20.out;
      slice20.in = __b1.out;
      x_41.write_en = 1'd1;
      x_41.write_data = __max_1.out;
      upd50[done] = x_41.write_done;
    }
    group upd51<"static"=1> {
      __x1.write_en = 1'd1;
      add45.left = __x1.out;
      add45.right = const125.out;
      __x1.in = add45.out;
      upd51[done] = __x1.done;
    }
    group upd52<"static"=1> {
      __y1.write_en = 1'd1;
      add46.left = __y1.out;
      add46.right = const126.out;
      __y1.in = add46.out;
      upd52[done] = __y1.done;
    }
    group upd53<"static"=1> {
      __c1.write_en = 1'd1;
      add47.left = __c1.out;
      add47.right = const127.out;
      __c1.in = add47.out;
      upd53[done] = __c1.done;
    }
    group upd54<"static"=1> {
      __b1.write_en = 1'd1;
      add48.left = __b1.out;
      add48.right = const128.out;
      __b1.in = add48.out;
      upd54[done] = __b1.done;
    }
  }
  control {
    seq {
      @pos(67) let68;
      @bound(1) while le33.out with cond37 {
        seq {
          @pos(68) let69;
          @bound(256) while le34.out with cond38 {
            seq {
              @pos(69) let70;
              @bound(6) while le35.out with cond39 {
                seq {
                  @pos(70) let71;
                  @bound(6) while le36.out with cond40 {
                    seq {
                      par {
                        seq {
                          let72;
                          let73;
                        }
                        seq {
                          let74;
                          let75;
                        }
                      }
                      @pos(71) let76;
                      @pos(72) let77;
                      @bound(3) while le37.out with cond41 {
                        seq {
                          @pos(73) let78;
                          @bound(3) while le38.out with cond42 {
                            seq {
                              par {
                                @pos(74) let79;
                                @pos(75) let80;
                              }
                              @pos(76) let81;
                              if gt3.out with cond43 {
                                @pos(77) upd47;
                              }
                              @pos(73) upd48;
                            }
                          }
                          @pos(72) upd49;
                        }
                      }
                      @pos(78) upd50;
                      @pos(70) upd51;
                    }
                  }
                  @pos(69) upd52;
                }
              }
              @pos(68) upd53;
            }
          }
          @pos(67) upd54;
        }
      }
    }
  }
}
component max_pool2d_1x96x26x26() -> () {
  cells {
    ref x_17 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    ref x_18 = seq_mem_d4(32,1,96,26,26,1,7,5,5);
    __b2 = std_reg(32);
    __c2 = std_reg(32);
    __current_1 = std_reg(32);
    __m1 = std_reg(32);
    __max_2 = std_reg(32);
    __n1 = std_reg(32);
    __pool_x_1 = std_reg(32);
    __pool_y_1 = std_reg(32);
    __stride_x_1 = std_reg(32);
    __stride_y_1 = std_reg(32);
    __x2 = std_reg(32);
    __y2 = std_reg(32);
    add49 = std_add(32);
    add50 = std_add(32);
    add51 = std_add(32);
    add52 = std_add(32);
    add53 = std_add(32);
    add54 = std_add(32);
    add55 = std_add(32);
    add56 = std_add(32);
    bin_read6_0 = std_reg(32);
    bin_read7_0 = std_reg(32);
    const129 = std_const(32,0);
    const130 = std_const(32,0);
    const131 = std_const(32,0);
    const132 = std_const(32,95);
    const133 = std_const(32,0);
    const134 = std_const(32,25);
    const135 = std_const(32,0);
    const136 = std_const(32,25);
    const137 = std_const(32,2);
    const138 = std_const(32,2);
    const139 = std_const(32,0);
    const140 = std_const(32,2);
    const141 = std_const(32,0);
    const142 = std_const(32,2);
    const143 = std_const(32,1);
    const144 = std_const(32,1);
    const145 = std_const(32,1);
    const146 = std_const(32,1);
    const147 = std_const(32,1);
    const148 = std_const(32,1);
    gt4 = std_fp_sgt(32,16,16);
    le39 = std_le(32);
    le40 = std_le(32);
    le41 = std_le(32);
    le42 = std_le(32);
    le43 = std_le(32);
    le44 = std_le(32);
    mult_pipe6 = std_mult_pipe(32);
    mult_pipe7 = std_mult_pipe(32);
    slice24 = std_slice(32,1);
    slice25 = std_slice(32,7);
    slice26 = std_slice(32,6);
    slice27 = std_slice(32,6);
    slice28 = std_slice(32,1);
    slice29 = std_slice(32,7);
    slice30 = std_slice(32,6);
    slice31 = std_slice(32,6);
    slice32 = std_slice(32,1);
    slice33 = std_slice(32,7);
    slice34 = std_slice(32,5);
    slice35 = std_slice(32,5);
  }
  wires {
    comb group cond44 {
      le39.left = __b2.out;
      le39.right = const130.out;
    }
    comb group cond45 {
      le40.left = __c2.out;
      le40.right = const132.out;
    }
    comb group cond46 {
      le41.left = __y2.out;
      le41.right = const134.out;
    }
    comb group cond47 {
      le42.left = __x2.out;
      le42.right = const136.out;
    }
    comb group cond48 {
      le43.left = __m1.out;
      le43.right = const140.out;
    }
    comb group cond49 {
      le44.left = __n1.out;
      le44.right = const142.out;
    }
    comb group cond50 {
      gt4.left = __current_1.out;
      gt4.right = __max_2.out;
    }
    group let82<"static"=1> {
      __b2.in = const129.out;
      __b2.write_en = 1'd1;
      let82[done] = __b2.done;
    }
    group let83<"static"=1> {
      __c2.in = const131.out;
      __c2.write_en = 1'd1;
      let83[done] = __c2.done;
    }
    group let84<"static"=1> {
      __y2.in = const133.out;
      __y2.write_en = 1'd1;
      let84[done] = __y2.done;
    }
    group let85<"static"=1> {
      __x2.in = const135.out;
      __x2.write_en = 1'd1;
      let85[done] = __x2.done;
    }
    group let86<"static"=4> {
      bin_read6_0.in = mult_pipe6.out;
      bin_read6_0.write_en = mult_pipe6.done;
      let86[done] = bin_read6_0.done;
      mult_pipe6.left = __y2.out;
      mult_pipe6.right = const137.out;
      mult_pipe6.go = !mult_pipe6.done ? 1'd1;
    }
    group let87<"static"=1> {
      __stride_y_1.in = bin_read6_0.out;
      __stride_y_1.write_en = 1'd1;
      let87[done] = __stride_y_1.done;
    }
    group let88<"static"=4> {
      bin_read7_0.in = mult_pipe7.out;
      bin_read7_0.write_en = mult_pipe7.done;
      let88[done] = bin_read7_0.done;
      mult_pipe7.left = __x2.out;
      mult_pipe7.right = const138.out;
      mult_pipe7.go = !mult_pipe7.done ? 1'd1;
    }
    group let89<"static"=1> {
      __stride_x_1.in = bin_read7_0.out;
      __stride_x_1.write_en = 1'd1;
      let89[done] = __stride_x_1.done;
    }
    group let90<"static"=2> {
      __max_2.in = x_17.read_data;
      __max_2.write_en = x_17.read_done;
      let90[done] = __max_2.done;
      x_17.addr3 = slice27.out;
      slice27.in = __stride_x_1.out;
      x_17.addr2 = slice26.out;
      slice26.in = __stride_y_1.out;
      x_17.addr1 = slice25.out;
      slice25.in = __c2.out;
      x_17.addr0 = slice24.out;
      slice24.in = __b2.out;
      x_17.read_en = 1'd1;
    }
    group let91<"static"=1> {
      __m1.in = const139.out;
      __m1.write_en = 1'd1;
      let91[done] = __m1.done;
    }
    group let92<"static"=1> {
      __n1.in = const141.out;
      __n1.write_en = 1'd1;
      let92[done] = __n1.done;
    }
    group let93<"static"=1> {
      __pool_y_1.in = add49.out;
      __pool_y_1.write_en = 1'd1;
      let93[done] = __pool_y_1.done;
      add49.left = __stride_y_1.out;
      add49.right = __m1.out;
    }
    group let94<"static"=1> {
      __pool_x_1.in = add50.out;
      __pool_x_1.write_en = 1'd1;
      let94[done] = __pool_x_1.done;
      add50.left = __stride_x_1.out;
      add50.right = __n1.out;
    }
    group let95<"static"=2> {
      __current_1.in = x_17.read_data;
      __current_1.write_en = x_17.read_done;
      let95[done] = __current_1.done;
      x_17.addr3 = slice31.out;
      slice31.in = __pool_x_1.out;
      x_17.addr2 = slice30.out;
      slice30.in = __pool_y_1.out;
      x_17.addr1 = slice29.out;
      slice29.in = __c2.out;
      x_17.addr0 = slice28.out;
      slice28.in = __b2.out;
      x_17.read_en = 1'd1;
    }
    group upd55<"static"=1> {
      __max_2.write_en = 1'd1;
      __max_2.in = __current_1.out;
      upd55[done] = __max_2.done;
    }
    group upd56<"static"=1> {
      __n1.write_en = 1'd1;
      add51.left = __n1.out;
      add51.right = const143.out;
      __n1.in = add51.out;
      upd56[done] = __n1.done;
    }
    group upd57<"static"=1> {
      __m1.write_en = 1'd1;
      add52.left = __m1.out;
      add52.right = const144.out;
      __m1.in = add52.out;
      upd57[done] = __m1.done;
    }
    group upd58<"static"=1> {
      x_18.addr3 = slice35.out;
      slice35.in = __x2.out;
      x_18.addr2 = slice34.out;
      slice34.in = __y2.out;
      x_18.addr1 = slice33.out;
      slice33.in = __c2.out;
      x_18.addr0 = slice32.out;
      slice32.in = __b2.out;
      x_18.write_en = 1'd1;
      x_18.write_data = __max_2.out;
      upd58[done] = x_18.write_done;
    }
    group upd59<"static"=1> {
      __x2.write_en = 1'd1;
      add53.left = __x2.out;
      add53.right = const145.out;
      __x2.in = add53.out;
      upd59[done] = __x2.done;
    }
    group upd60<"static"=1> {
      __y2.write_en = 1'd1;
      add54.left = __y2.out;
      add54.right = const146.out;
      __y2.in = add54.out;
      upd60[done] = __y2.done;
    }
    group upd61<"static"=1> {
      __c2.write_en = 1'd1;
      add55.left = __c2.out;
      add55.right = const147.out;
      __c2.in = add55.out;
      upd61[done] = __c2.done;
    }
    group upd62<"static"=1> {
      __b2.write_en = 1'd1;
      add56.left = __b2.out;
      add56.right = const148.out;
      __b2.in = add56.out;
      upd62[done] = __b2.done;
    }
  }
  control {
    seq {
      @pos(79) let82;
      @bound(1) while le39.out with cond44 {
        seq {
          @pos(80) let83;
          @bound(96) while le40.out with cond45 {
            seq {
              @pos(81) let84;
              @bound(26) while le41.out with cond46 {
                seq {
                  @pos(82) let85;
                  @bound(26) while le42.out with cond47 {
                    seq {
                      par {
                        seq {
                          let86;
                          let87;
                        }
                        seq {
                          let88;
                          let89;
                        }
                      }
                      @pos(83) let90;
                      @pos(84) let91;
                      @bound(3) while le43.out with cond48 {
                        seq {
                          @pos(85) let92;
                          @bound(3) while le44.out with cond49 {
                            seq {
                              par {
                                @pos(86) let93;
                                @pos(87) let94;
                              }
                              @pos(88) let95;
                              if gt4.out with cond50 {
                                @pos(89) upd55;
                              }
                              @pos(85) upd56;
                            }
                          }
                          @pos(84) upd57;
                        }
                      }
                      @pos(90) upd58;
                      @pos(82) upd59;
                    }
                  }
                  @pos(81) upd60;
                }
              }
              @pos(80) upd61;
            }
          }
          @pos(79) upd62;
        }
      }
    }
  }
}
component conv2d_1x384x12x12() -> () {
  cells {
    ref x_25 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    ref x_26 = seq_mem_d4(32,384,256,3,3,9,9,2,2);
    ref x_27 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    __b3 = std_reg(32);
    __c3 = std_reg(32);
    __dx1 = std_reg(32);
    __dy1 = std_reg(32);
    __k7 = std_reg(32);
    __kernel_x_1 = std_reg(32);
    __kernel_y_1 = std_reg(32);
    __padded_tensor_val_1 = std_reg(32);
    __sum_1 = std_reg(32);
    __x3 = std_reg(32);
    __y3 = std_reg(32);
    add57 = std_add(32);
    add58 = std_add(32);
    add59 = std_fp_sadd(32,16,16);
    add60 = std_add(32);
    add61 = std_add(32);
    add62 = std_add(32);
    add63 = std_add(32);
    add64 = std_add(32);
    add65 = std_add(32);
    add66 = std_add(32);
    and3 = std_and(1);
    and4 = std_and(1);
    and5 = std_and(1);
    bin_read16_0 = std_reg(32);
    bin_read17_0 = std_reg(32);
    bin_read18_0 = std_reg(32);
    const149 = std_const(32,0);
    const150 = std_const(32,0);
    const151 = std_const(32,0);
    const152 = std_const(32,383);
    const153 = std_const(32,0);
    const154 = std_const(32,11);
    const155 = std_const(32,0);
    const156 = std_const(32,11);
    const157 = std_const(32,0);
    const158 = std_const(32,255);
    const159 = std_const(32,0);
    const160 = std_const(32,2);
    const161 = std_const(32,0);
    const162 = std_const(32,2);
    const163 = std_const(32,1);
    const164 = std_const(32,1);
    const165 = std_const(32,1);
    const166 = std_const(32,13);
    const167 = std_const(32,1);
    const168 = std_const(32,13);
    const169 = std_const(32,1);
    const170 = std_const(32,1);
    const171 = std_const(32,1);
    const172 = std_const(32,1);
    const173 = std_const(32,1);
    const174 = std_const(32,1);
    const175 = std_const(32,1);
    const176 = std_const(32,1);
    const177 = std_const(32,1);
    fp_const7 = std_const(32,0);
    fp_const8 = std_const(32,0);
    ge2 = std_ge(32);
    ge3 = std_ge(32);
    le45 = std_le(32);
    le46 = std_le(32);
    le47 = std_le(32);
    le48 = std_le(32);
    le49 = std_le(32);
    le50 = std_le(32);
    le51 = std_le(32);
    lt2 = std_lt(32);
    lt3 = std_lt(32);
    mult_pipe10 = std_fp_smult_pipe(32,16,16);
    mult_pipe8 = std_mult_pipe(32);
    mult_pipe9 = std_mult_pipe(32);
    slice36 = std_slice(32,1);
    slice37 = std_slice(32,9);
    slice38 = std_slice(32,4);
    slice39 = std_slice(32,4);
    slice40 = std_slice(32,9);
    slice41 = std_slice(32,9);
    slice42 = std_slice(32,2);
    slice43 = std_slice(32,2);
    slice44 = std_slice(32,1);
    slice45 = std_slice(32,9);
    slice46 = std_slice(32,4);
    slice47 = std_slice(32,4);
    sub4 = std_sub(32);
    sub5 = std_sub(32);
    x_25_read0_0 = std_reg(32);
    x_26_read0_0 = std_reg(32);
  }
  wires {
    comb group cond51 {
      le45.left = __b3.out;
      le45.right = const150.out;
    }
    comb group cond52 {
      le46.left = __c3.out;
      le46.right = const152.out;
    }
    comb group cond53 {
      le47.left = __y3.out;
      le47.right = const154.out;
    }
    comb group cond54 {
      le48.left = __x3.out;
      le48.right = const156.out;
    }
    comb group cond55 {
      le49.left = __k7.out;
      le49.right = const158.out;
    }
    comb group cond56 {
      le50.left = __dy1.out;
      le50.right = const160.out;
    }
    comb group cond57 {
      le51.left = __dx1.out;
      le51.right = const162.out;
    }
    comb group cond58 {
      and5.left = and4.out;
      and5.right = lt3.out;
      and4.left = and3.out;
      and4.right = ge3.out;
      and3.left = ge2.out;
      and3.right = lt2.out;
      ge2.left = __kernel_y_1.out;
      ge2.right = const165.out;
      lt2.left = __kernel_y_1.out;
      lt2.right = const166.out;
      ge3.left = __kernel_x_1.out;
      ge3.right = const167.out;
      lt3.left = __kernel_x_1.out;
      lt3.right = const168.out;
    }
    group let100<"static"=1> {
      __sum_1.in = fp_const7.out;
      __sum_1.write_en = 1'd1;
      let100[done] = __sum_1.done;
    }
    group let101<"static"=1> {
      __k7.in = const157.out;
      __k7.write_en = 1'd1;
      let101[done] = __k7.done;
    }
    group let102<"static"=1> {
      __dy1.in = const159.out;
      __dy1.write_en = 1'd1;
      let102[done] = __dy1.done;
    }
    group let103<"static"=1> {
      __dx1.in = const161.out;
      __dx1.write_en = 1'd1;
      let103[done] = __dx1.done;
    }
    group let104<"static"=4> {
      bin_read16_0.in = mult_pipe8.out;
      bin_read16_0.write_en = mult_pipe8.done;
      let104[done] = bin_read16_0.done;
      mult_pipe8.left = const163.out;
      mult_pipe8.right = __y3.out;
      mult_pipe8.go = !mult_pipe8.done ? 1'd1;
    }
    group let105<"static"=1> {
      __kernel_y_1.in = add57.out;
      __kernel_y_1.write_en = 1'd1;
      let105[done] = __kernel_y_1.done;
      add57.left = bin_read16_0.out;
      add57.right = __dy1.out;
    }
    group let106<"static"=4> {
      bin_read17_0.in = mult_pipe9.out;
      bin_read17_0.write_en = mult_pipe9.done;
      let106[done] = bin_read17_0.done;
      mult_pipe9.left = const164.out;
      mult_pipe9.right = __x3.out;
      mult_pipe9.go = !mult_pipe9.done ? 1'd1;
    }
    group let107<"static"=1> {
      __kernel_x_1.in = add58.out;
      __kernel_x_1.write_en = 1'd1;
      let107[done] = __kernel_x_1.done;
      add58.left = bin_read17_0.out;
      add58.right = __dx1.out;
    }
    group let108<"static"=1> {
      __padded_tensor_val_1.in = fp_const8.out;
      __padded_tensor_val_1.write_en = 1'd1;
      let108[done] = __padded_tensor_val_1.done;
    }
    group let109<"static"=2> {
      x_25_read0_0.in = x_25.read_data;
      x_25_read0_0.write_en = x_25.read_done;
      let109[done] = x_25_read0_0.done;
      x_25.addr3 = slice39.out;
      slice39.in = sub5.out;
      sub5.left = __kernel_x_1.out;
      sub5.right = const170.out;
      x_25.addr2 = slice38.out;
      slice38.in = sub4.out;
      sub4.left = __kernel_y_1.out;
      sub4.right = const169.out;
      x_25.addr1 = slice37.out;
      slice37.in = __k7.out;
      x_25.addr0 = slice36.out;
      slice36.in = __b3.out;
      x_25.read_en = 1'd1;
    }
    group let110<"static"=2> {
      x_26_read0_0.in = x_26.read_data;
      x_26_read0_0.write_en = x_26.read_done;
      let110[done] = x_26_read0_0.done;
      x_26.addr3 = slice43.out;
      slice43.in = __dx1.out;
      x_26.addr2 = slice42.out;
      slice42.in = __dy1.out;
      x_26.addr1 = slice41.out;
      slice41.in = __k7.out;
      x_26.addr0 = slice40.out;
      slice40.in = __c3.out;
      x_26.read_en = 1'd1;
    }
    group let111<"static"=4> {
      bin_read18_0.in = mult_pipe10.out;
      bin_read18_0.write_en = mult_pipe10.done;
      let111[done] = bin_read18_0.done;
      mult_pipe10.left = __padded_tensor_val_1.out;
      mult_pipe10.right = x_26_read0_0.out;
      mult_pipe10.go = !mult_pipe10.done ? 1'd1;
    }
    group let96<"static"=1> {
      __b3.in = const149.out;
      __b3.write_en = 1'd1;
      let96[done] = __b3.done;
    }
    group let97<"static"=1> {
      __c3.in = const151.out;
      __c3.write_en = 1'd1;
      let97[done] = __c3.done;
    }
    group let98<"static"=1> {
      __y3.in = const153.out;
      __y3.write_en = 1'd1;
      let98[done] = __y3.done;
    }
    group let99<"static"=1> {
      __x3.in = const155.out;
      __x3.write_en = 1'd1;
      let99[done] = __x3.done;
    }
    group upd63<"static"=1> {
      __padded_tensor_val_1.write_en = 1'd1;
      __padded_tensor_val_1.in = x_25_read0_0.out;
      upd63[done] = __padded_tensor_val_1.done;
    }
    group upd64<"static"=1> {
      __sum_1.write_en = 1'd1;
      add59.left = __sum_1.out;
      add59.right = bin_read18_0.out;
      __sum_1.in = add59.out;
      upd64[done] = __sum_1.done;
    }
    group upd65<"static"=1> {
      __dx1.write_en = 1'd1;
      add60.left = __dx1.out;
      add60.right = const171.out;
      __dx1.in = add60.out;
      upd65[done] = __dx1.done;
    }
    group upd66<"static"=1> {
      __dy1.write_en = 1'd1;
      add61.left = __dy1.out;
      add61.right = const172.out;
      __dy1.in = add61.out;
      upd66[done] = __dy1.done;
    }
    group upd67<"static"=1> {
      __k7.write_en = 1'd1;
      add62.left = __k7.out;
      add62.right = const173.out;
      __k7.in = add62.out;
      upd67[done] = __k7.done;
    }
    group upd68<"static"=1> {
      x_27.addr3 = slice47.out;
      slice47.in = __x3.out;
      x_27.addr2 = slice46.out;
      slice46.in = __y3.out;
      x_27.addr1 = slice45.out;
      slice45.in = __c3.out;
      x_27.addr0 = slice44.out;
      slice44.in = __b3.out;
      x_27.write_en = 1'd1;
      x_27.write_data = __sum_1.out;
      upd68[done] = x_27.write_done;
    }
    group upd69<"static"=1> {
      __x3.write_en = 1'd1;
      add63.left = __x3.out;
      add63.right = const174.out;
      __x3.in = add63.out;
      upd69[done] = __x3.done;
    }
    group upd70<"static"=1> {
      __y3.write_en = 1'd1;
      add64.left = __y3.out;
      add64.right = const175.out;
      __y3.in = add64.out;
      upd70[done] = __y3.done;
    }
    group upd71<"static"=1> {
      __c3.write_en = 1'd1;
      add65.left = __c3.out;
      add65.right = const176.out;
      __c3.in = add65.out;
      upd71[done] = __c3.done;
    }
    group upd72<"static"=1> {
      __b3.write_en = 1'd1;
      add66.left = __b3.out;
      add66.right = const177.out;
      __b3.in = add66.out;
      upd72[done] = __b3.done;
    }
  }
  control {
    seq {
      @pos(91) let96;
      @bound(1) while le45.out with cond51 {
        seq {
          @pos(92) let97;
          @bound(384) while le46.out with cond52 {
            seq {
              @pos(93) let98;
              @bound(12) while le47.out with cond53 {
                seq {
                  @pos(94) let99;
                  @bound(12) while le48.out with cond54 {
                    seq {
                      @pos(95) let100;
                      @pos(96) let101;
                      @bound(256) while le49.out with cond55 {
                        seq {
                          @pos(97) let102;
                          @bound(3) while le50.out with cond56 {
                            seq {
                              @pos(98) let103;
                              @bound(3) while le51.out with cond57 {
                                seq {
                                  par {
                                    seq {
                                      let104;
                                      let105;
                                    }
                                    seq {
                                      let106;
                                      let107;
                                    }
                                  }
                                  @pos(99) let108;
                                  if and5.out with cond58 {
                                    seq {
                                      @pos(100) let109;
                                      @pos(101) upd63;
                                    }
                                  }
                                  @pos(102) let110;
                                  let111;
                                  upd64;
                                  @pos(98) upd65;
                                }
                              }
                              @pos(97) upd66;
                            }
                          }
                          @pos(96) upd67;
                        }
                      }
                      @pos(103) upd68;
                      @pos(94) upd69;
                    }
                  }
                  @pos(93) upd70;
                }
              }
              @pos(92) upd71;
            }
          }
          @pos(91) upd72;
        }
      }
    }
  }
}
component relu_1x96x54x54() -> () {
  cells {
    ref x_15 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    ref x_16 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    __i8 = std_reg(1);
    __j8 = std_reg(7);
    __k8 = std_reg(6);
    __l4 = std_reg(6);
    add67 = std_add(6);
    add68 = std_add(6);
    add69 = std_add(7);
    add70 = std_add(1);
    const178 = std_const(1,0);
    const179 = std_const(1,0);
    const180 = std_const(7,0);
    const181 = std_const(7,95);
    const182 = std_const(6,0);
    const183 = std_const(6,53);
    const184 = std_const(6,0);
    const185 = std_const(6,53);
    const186 = std_const(6,1);
    const187 = std_const(6,1);
    const188 = std_const(7,1);
    const189 = std_const(1,1);
    fp_const10 = std_const(32,0);
    fp_const9 = std_const(32,0);
    gt5 = std_fp_sgt(32,16,16);
    le52 = std_le(1);
    le53 = std_le(7);
    le54 = std_le(6);
    le55 = std_le(6);
    x_15_read0_0 = std_reg(32);
    x_15_read1_0 = std_reg(32);
  }
  wires {
    comb group cond59 {
      le52.left = __i8.out;
      le52.right = const179.out;
    }
    comb group cond60 {
      le53.left = __j8.out;
      le53.right = const181.out;
    }
    comb group cond61 {
      le54.left = __k8.out;
      le54.right = const183.out;
    }
    comb group cond62 {
      le55.left = __l4.out;
      le55.right = const185.out;
    }
    comb group cond63 {
      gt5.left = x_15_read0_0.out;
      gt5.right = fp_const9.out;
    }
    group let112<"static"=1> {
      __i8.in = const178.out;
      __i8.write_en = 1'd1;
      let112[done] = __i8.done;
    }
    group let113<"static"=1> {
      __j8.in = const180.out;
      __j8.write_en = 1'd1;
      let113[done] = __j8.done;
    }
    group let114<"static"=1> {
      __k8.in = const182.out;
      __k8.write_en = 1'd1;
      let114[done] = __k8.done;
    }
    group let115<"static"=1> {
      __l4.in = const184.out;
      __l4.write_en = 1'd1;
      let115[done] = __l4.done;
    }
    group let116<"static"=2> {
      x_15_read0_0.in = x_15.read_data;
      x_15_read0_0.write_en = x_15.read_done;
      let116[done] = x_15_read0_0.done;
      x_15.addr3 = __l4.out;
      x_15.addr2 = __k8.out;
      x_15.addr1 = __j8.out;
      x_15.addr0 = __i8.out;
      x_15.read_en = 1'd1;
    }
    group let117<"static"=2> {
      x_15_read1_0.in = x_15.read_data;
      x_15_read1_0.write_en = x_15.read_done;
      let117[done] = x_15_read1_0.done;
      x_15.addr3 = __l4.out;
      x_15.addr2 = __k8.out;
      x_15.addr1 = __j8.out;
      x_15.addr0 = __i8.out;
      x_15.read_en = 1'd1;
    }
    group upd73<"static"=1> {
      x_16.addr3 = __l4.out;
      x_16.addr2 = __k8.out;
      x_16.addr1 = __j8.out;
      x_16.addr0 = __i8.out;
      x_16.write_en = 1'd1;
      x_16.write_data = x_15_read1_0.out;
      upd73[done] = x_16.write_done;
    }
    group upd74<"static"=1> {
      x_16.addr3 = __l4.out;
      x_16.addr2 = __k8.out;
      x_16.addr1 = __j8.out;
      x_16.addr0 = __i8.out;
      x_16.write_en = 1'd1;
      x_16.write_data = fp_const10.out;
      upd74[done] = x_16.write_done;
    }
    group upd75<"static"=1> {
      __l4.write_en = 1'd1;
      add67.left = __l4.out;
      add67.right = const186.out;
      __l4.in = add67.out;
      upd75[done] = __l4.done;
    }
    group upd76<"static"=1> {
      __k8.write_en = 1'd1;
      add68.left = __k8.out;
      add68.right = const187.out;
      __k8.in = add68.out;
      upd76[done] = __k8.done;
    }
    group upd77<"static"=1> {
      __j8.write_en = 1'd1;
      add69.left = __j8.out;
      add69.right = const188.out;
      __j8.in = add69.out;
      upd77[done] = __j8.done;
    }
    group upd78<"static"=1> {
      __i8.write_en = 1'd1;
      add70.left = __i8.out;
      add70.right = const189.out;
      __i8.in = add70.out;
      upd78[done] = __i8.done;
    }
  }
  control {
    seq {
      @pos(104) let112;
      @bound(1) while le52.out with cond59 {
        seq {
          @pos(105) let113;
          @bound(96) while le53.out with cond60 {
            seq {
              @pos(106) let114;
              @bound(54) while le54.out with cond61 {
                seq {
                  @pos(107) let115;
                  @bound(54) while le55.out with cond62 {
                    seq {
                      @pos(108) let116;
                      if gt5.out with cond63 {
                        seq {
                          @pos(109) let117;
                          @pos(110) upd73;
                        }
                      } else {
                        @pos(111) upd74;
                      }
                      @pos(107) upd75;
                    }
                  }
                  @pos(106) upd76;
                }
              }
              @pos(105) upd77;
            }
          }
          @pos(104) upd78;
        }
      }
    }
  }
}
component lrn_1x96x54x54() -> () {
  cells {
    ref x_16 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    ref x_17 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    __c4 = std_reg(32);
    __c_index_0 = std_reg(32);
    __divisor_0 = std_reg(32);
    __h0 = std_reg(32);
    __i9 = std_reg(32);
    __n2 = std_reg(32);
    __sum_2 = std_reg(32);
    __w0 = std_reg(32);
    add71 = std_add(32);
    add72 = std_fp_sadd(32,16,16);
    add73 = std_add(32);
    add74 = std_fp_sadd(32,16,16);
    add75 = std_add(32);
    add76 = std_add(32);
    add77 = std_add(32);
    add78 = std_add(32);
    and6 = std_and(1);
    bin_read3_0 = std_reg(32);
    bin_read4_0 = std_reg(32);
    bin_read5_0 = std_reg(32);
    const190 = std_const(32,0);
    const191 = std_const(32,0);
    const192 = std_const(32,0);
    const193 = std_const(32,95);
    const194 = std_const(32,0);
    const195 = std_const(32,53);
    const196 = std_const(32,0);
    const197 = std_const(32,53);
    const198 = std_const(32,0);
    const199 = std_const(32,3);
    const200 = std_const(32,4);
    const201 = std_const(32,2);
    const202 = std_const(32,0);
    const203 = std_const(32,96);
    const204 = std_const(32,1);
    const205 = std_const(32,1);
    const206 = std_const(32,1);
    const207 = std_const(32,1);
    const208 = std_const(32,1);
    div_pipe1 = std_div_pipe(32);
    div_pipe2 = std_fp_sdiv_pipe(32,16,16);
    fp_const11 = std_const(32,0);
    fp_const12 = std_const(32,7);
    fp_const13 = std_const(32,65536);
    fp_const14 = std_const(32,49152);
    fp_pow_full0 = fp_pow_full();
    ge4 = std_ge(32);
    le56 = std_le(32);
    le57 = std_le(32);
    le58 = std_le(32);
    le59 = std_le(32);
    le60 = std_le(32);
    lt4 = std_lt(32);
    mult_pipe11 = std_fp_smult_pipe(32,16,16);
    slice48 = std_slice(32,1);
    slice49 = std_slice(32,7);
    slice50 = std_slice(32,6);
    slice51 = std_slice(32,6);
    slice52 = std_slice(32,1);
    slice53 = std_slice(32,7);
    slice54 = std_slice(32,6);
    slice55 = std_slice(32,6);
    slice56 = std_slice(32,1);
    slice57 = std_slice(32,7);
    slice58 = std_slice(32,6);
    slice59 = std_slice(32,6);
    sub6 = std_sub(32);
    x_16_read0_0 = std_reg(32);
    x_16_read1_0 = std_reg(32);
  }
  wires {
    comb group cond64 {
      le56.left = __n2.out;
      le56.right = const191.out;
    }
    comb group cond65 {
      le57.left = __c4.out;
      le57.right = const193.out;
    }
    comb group cond66 {
      le58.left = __h0.out;
      le58.right = const195.out;
    }
    comb group cond67 {
      le59.left = __w0.out;
      le59.right = const197.out;
    }
    comb group cond68 {
      le60.left = __i9.out;
      le60.right = const199.out;
    }
    comb group cond69 {
      and6.left = ge4.out;
      and6.right = lt4.out;
      ge4.left = __c_index_0.out;
      ge4.right = const202.out;
      lt4.left = __c_index_0.out;
      lt4.right = const203.out;
    }
    group let118<"static"=1> {
      __n2.in = const190.out;
      __n2.write_en = 1'd1;
      let118[done] = __n2.done;
    }
    group let119<"static"=1> {
      __c4.in = const192.out;
      __c4.write_en = 1'd1;
      let119[done] = __c4.done;
    }
    group let120<"static"=1> {
      __h0.in = const194.out;
      __h0.write_en = 1'd1;
      let120[done] = __h0.done;
    }
    group let121<"static"=1> {
      __w0.in = const196.out;
      __w0.write_en = 1'd1;
      let121[done] = __w0.done;
    }
    group let122<"static"=1> {
      __sum_2.in = fp_const11.out;
      __sum_2.write_en = 1'd1;
      let122[done] = __sum_2.done;
    }
    group let123<"static"=1> {
      __i9.in = const198.out;
      __i9.write_en = 1'd1;
      let123[done] = __i9.done;
    }
    group let124 {
      bin_read3_0.in = div_pipe1.out_quotient;
      bin_read3_0.write_en = div_pipe1.done;
      let124[done] = bin_read3_0.done;
      div_pipe1.left = const200.out;
      div_pipe1.right = const201.out;
      div_pipe1.go = !div_pipe1.done ? 1'd1;
    }
    group let125<"static"=1> {
      __c_index_0.in = add71.out;
      __c_index_0.write_en = 1'd1;
      let125[done] = __c_index_0.done;
      add71.left = sub6.out;
      add71.right = __i9.out;
      sub6.left = __c4.out;
      sub6.right = bin_read3_0.out;
    }
    group let126<"static"=2> {
      x_16_read0_0.in = x_16.read_data;
      x_16_read0_0.write_en = x_16.read_done;
      let126[done] = x_16_read0_0.done;
      x_16.addr3 = slice51.out;
      slice51.in = __w0.out;
      x_16.addr2 = slice50.out;
      slice50.in = __h0.out;
      x_16.addr1 = slice49.out;
      slice49.in = __c_index_0.out;
      x_16.addr0 = slice48.out;
      slice48.in = __n2.out;
      x_16.read_en = 1'd1;
    }
    group let127<"static"=4> {
      bin_read4_0.in = mult_pipe11.out;
      bin_read4_0.write_en = mult_pipe11.done;
      let127[done] = bin_read4_0.done;
      mult_pipe11.left = fp_const12.out;
      mult_pipe11.right = __sum_2.out;
      mult_pipe11.go = !mult_pipe11.done ? 1'd1;
    }
    group let128 {
      __divisor_0.in = fp_pow_full0.out;
      __divisor_0.write_en = 1'd1;
      let128[done] = __divisor_0.done;
    }
    group let129<"static"=2> {
      x_16_read1_0.in = x_16.read_data;
      x_16_read1_0.write_en = x_16.read_done;
      let129[done] = x_16_read1_0.done;
      x_16.addr3 = slice55.out;
      slice55.in = __w0.out;
      x_16.addr2 = slice54.out;
      slice54.in = __h0.out;
      x_16.addr1 = slice53.out;
      slice53.in = __c4.out;
      x_16.addr0 = slice52.out;
      slice52.in = __n2.out;
      x_16.read_en = 1'd1;
    }
    group let130 {
      bin_read5_0.in = div_pipe2.out_quotient;
      bin_read5_0.write_en = div_pipe2.done;
      let130[done] = bin_read5_0.done;
      div_pipe2.left = x_16_read1_0.out;
      div_pipe2.right = __divisor_0.out;
      div_pipe2.go = !div_pipe2.done ? 1'd1;
    }
    group upd79<"static"=1> {
      __sum_2.write_en = 1'd1;
      add72.left = __sum_2.out;
      add72.right = x_16_read0_0.out;
      __sum_2.in = add72.out;
      upd79[done] = __sum_2.done;
    }
    group upd80<"static"=1> {
      __i9.write_en = 1'd1;
      add73.left = __i9.out;
      add73.right = const204.out;
      __i9.in = add73.out;
      upd80[done] = __i9.done;
    }
    group upd81<"static"=1> {
      x_17.addr3 = slice59.out;
      slice59.in = __w0.out;
      x_17.addr2 = slice58.out;
      slice58.in = __h0.out;
      x_17.addr1 = slice57.out;
      slice57.in = __c4.out;
      x_17.addr0 = slice56.out;
      slice56.in = __n2.out;
      x_17.write_en = 1'd1;
      x_17.write_data = bin_read5_0.out;
      upd81[done] = x_17.write_done;
    }
    group upd82<"static"=1> {
      __w0.write_en = 1'd1;
      add75.left = __w0.out;
      add75.right = const205.out;
      __w0.in = add75.out;
      upd82[done] = __w0.done;
    }
    group upd83<"static"=1> {
      __h0.write_en = 1'd1;
      add76.left = __h0.out;
      add76.right = const206.out;
      __h0.in = add76.out;
      upd83[done] = __h0.done;
    }
    group upd84<"static"=1> {
      __c4.write_en = 1'd1;
      add77.left = __c4.out;
      add77.right = const207.out;
      __c4.in = add77.out;
      upd84[done] = __c4.done;
    }
    group upd85<"static"=1> {
      __n2.write_en = 1'd1;
      add78.left = __n2.out;
      add78.right = const208.out;
      __n2.in = add78.out;
      upd85[done] = __n2.done;
    }
    add74.right = bin_read4_0.out;
    add74.left = fp_const13.out;
  }
  control {
    seq {
      @pos(112) let118;
      @bound(1) while le56.out with cond64 {
        seq {
          @pos(113) let119;
          @bound(96) while le57.out with cond65 {
            seq {
              @pos(114) let120;
              @bound(54) while le58.out with cond66 {
                seq {
                  @pos(115) let121;
                  @bound(54) while le59.out with cond67 {
                    seq {
                      @pos(116) let122;
                      @pos(117) let123;
                      @bound(4) while le60.out with cond68 {
                        seq {
                          let124;
                          let125;
                          if and6.out with cond69 {
                            seq {
                              @pos(118) let126;
                              @pos(119) upd79;
                            }
                          }
                          @pos(117) upd80;
                        }
                      }
                      par {
                        seq {
                          let127;
                          invoke fp_pow_full0(base=add74.out, exp_value=fp_const14.out)();
                          let128;
                        }
                        @pos(120) let129;
                      }
                      let130;
                      upd81;
                      @pos(115) upd82;
                    }
                  }
                  @pos(114) upd83;
                }
              }
              @pos(113) upd84;
            }
          }
          @pos(112) upd85;
        }
      }
    }
  }
}
component conv2d_1x96x54x54() -> () {
  cells {
    ref data_0 = seq_mem_d4(32,1,3,224,224,1,2,8,8);
    ref x_12 = seq_mem_d4(32,96,3,11,11,7,2,4,4);
    ref x_13 = seq_mem_d4(32,1,96,54,54,1,7,6,6);
    __b4 = std_reg(32);
    __c5 = std_reg(32);
    __dx2 = std_reg(32);
    __dy2 = std_reg(32);
    __k9 = std_reg(32);
    __kernel_x_2 = std_reg(32);
    __kernel_y_2 = std_reg(32);
    __padded_tensor_val_2 = std_reg(32);
    __sum_3 = std_reg(32);
    __x4 = std_reg(32);
    __y4 = std_reg(32);
    add79 = std_add(32);
    add80 = std_add(32);
    add81 = std_fp_sadd(32,16,16);
    add82 = std_add(32);
    add83 = std_add(32);
    add84 = std_add(32);
    add85 = std_add(32);
    add86 = std_add(32);
    add87 = std_add(32);
    add88 = std_add(32);
    bin_read0_0 = std_reg(32);
    bin_read1_0 = std_reg(32);
    bin_read2_0 = std_reg(32);
    const209 = std_const(32,0);
    const210 = std_const(32,0);
    const211 = std_const(32,0);
    const212 = std_const(32,95);
    const213 = std_const(32,0);
    const214 = std_const(32,53);
    const215 = std_const(32,0);
    const216 = std_const(32,53);
    const217 = std_const(32,0);
    const218 = std_const(32,2);
    const219 = std_const(32,0);
    const220 = std_const(32,10);
    const221 = std_const(32,0);
    const222 = std_const(32,10);
    const223 = std_const(32,4);
    const224 = std_const(32,4);
    const225 = std_const(32,1);
    const226 = std_const(32,1);
    const227 = std_const(32,1);
    const228 = std_const(32,1);
    const229 = std_const(32,1);
    const230 = std_const(32,1);
    const231 = std_const(32,1);
    fp_const15 = std_const(32,0);
    le61 = std_le(32);
    le62 = std_le(32);
    le63 = std_le(32);
    le64 = std_le(32);
    le65 = std_le(32);
    le66 = std_le(32);
    le67 = std_le(32);
    mult_pipe12 = std_mult_pipe(32);
    mult_pipe13 = std_mult_pipe(32);
    mult_pipe14 = std_fp_smult_pipe(32,16,16);
    slice60 = std_slice(32,1);
    slice61 = std_slice(32,2);
    slice62 = std_slice(32,8);
    slice63 = std_slice(32,8);
    slice64 = std_slice(32,7);
    slice65 = std_slice(32,2);
    slice66 = std_slice(32,4);
    slice67 = std_slice(32,4);
    slice68 = std_slice(32,1);
    slice69 = std_slice(32,7);
    slice70 = std_slice(32,6);
    slice71 = std_slice(32,6);
    x_12_read0_0 = std_reg(32);
  }
  wires {
    comb group cond70 {
      le61.left = __b4.out;
      le61.right = const210.out;
    }
    comb group cond71 {
      le62.left = __c5.out;
      le62.right = const212.out;
    }
    comb group cond72 {
      le63.left = __y4.out;
      le63.right = const214.out;
    }
    comb group cond73 {
      le64.left = __x4.out;
      le64.right = const216.out;
    }
    comb group cond74 {
      le65.left = __k9.out;
      le65.right = const218.out;
    }
    comb group cond75 {
      le66.left = __dy2.out;
      le66.right = const220.out;
    }
    comb group cond76 {
      le67.left = __dx2.out;
      le67.right = const222.out;
    }
    group let131<"static"=1> {
      __b4.in = const209.out;
      __b4.write_en = 1'd1;
      let131[done] = __b4.done;
    }
    group let132<"static"=1> {
      __c5.in = const211.out;
      __c5.write_en = 1'd1;
      let132[done] = __c5.done;
    }
    group let133<"static"=1> {
      __y4.in = const213.out;
      __y4.write_en = 1'd1;
      let133[done] = __y4.done;
    }
    group let134<"static"=1> {
      __x4.in = const215.out;
      __x4.write_en = 1'd1;
      let134[done] = __x4.done;
    }
    group let135<"static"=1> {
      __sum_3.in = fp_const15.out;
      __sum_3.write_en = 1'd1;
      let135[done] = __sum_3.done;
    }
    group let136<"static"=1> {
      __k9.in = const217.out;
      __k9.write_en = 1'd1;
      let136[done] = __k9.done;
    }
    group let137<"static"=1> {
      __dy2.in = const219.out;
      __dy2.write_en = 1'd1;
      let137[done] = __dy2.done;
    }
    group let138<"static"=1> {
      __dx2.in = const221.out;
      __dx2.write_en = 1'd1;
      let138[done] = __dx2.done;
    }
    group let139<"static"=4> {
      bin_read0_0.in = mult_pipe12.out;
      bin_read0_0.write_en = mult_pipe12.done;
      let139[done] = bin_read0_0.done;
      mult_pipe12.left = const223.out;
      mult_pipe12.right = __y4.out;
      mult_pipe12.go = !mult_pipe12.done ? 1'd1;
    }
    group let140<"static"=1> {
      __kernel_y_2.in = add79.out;
      __kernel_y_2.write_en = 1'd1;
      let140[done] = __kernel_y_2.done;
      add79.left = bin_read0_0.out;
      add79.right = __dy2.out;
    }
    group let141<"static"=4> {
      bin_read1_0.in = mult_pipe13.out;
      bin_read1_0.write_en = mult_pipe13.done;
      let141[done] = bin_read1_0.done;
      mult_pipe13.left = const224.out;
      mult_pipe13.right = __x4.out;
      mult_pipe13.go = !mult_pipe13.done ? 1'd1;
    }
    group let142<"static"=1> {
      __kernel_x_2.in = add80.out;
      __kernel_x_2.write_en = 1'd1;
      let142[done] = __kernel_x_2.done;
      add80.left = bin_read1_0.out;
      add80.right = __dx2.out;
    }
    group let143<"static"=2> {
      __padded_tensor_val_2.in = data_0.read_data;
      __padded_tensor_val_2.write_en = data_0.read_done;
      let143[done] = __padded_tensor_val_2.done;
      data_0.addr3 = slice63.out;
      slice63.in = __kernel_x_2.out;
      data_0.addr2 = slice62.out;
      slice62.in = __kernel_y_2.out;
      data_0.addr1 = slice61.out;
      slice61.in = __k9.out;
      data_0.addr0 = slice60.out;
      slice60.in = __b4.out;
      data_0.read_en = 1'd1;
    }
    group let144<"static"=2> {
      x_12_read0_0.in = x_12.read_data;
      x_12_read0_0.write_en = x_12.read_done;
      let144[done] = x_12_read0_0.done;
      x_12.addr3 = slice67.out;
      slice67.in = __dx2.out;
      x_12.addr2 = slice66.out;
      slice66.in = __dy2.out;
      x_12.addr1 = slice65.out;
      slice65.in = __k9.out;
      x_12.addr0 = slice64.out;
      slice64.in = __c5.out;
      x_12.read_en = 1'd1;
    }
    group let145<"static"=4> {
      bin_read2_0.in = mult_pipe14.out;
      bin_read2_0.write_en = mult_pipe14.done;
      let145[done] = bin_read2_0.done;
      mult_pipe14.left = __padded_tensor_val_2.out;
      mult_pipe14.right = x_12_read0_0.out;
      mult_pipe14.go = !mult_pipe14.done ? 1'd1;
    }
    group upd86<"static"=1> {
      __sum_3.write_en = 1'd1;
      add81.left = __sum_3.out;
      add81.right = bin_read2_0.out;
      __sum_3.in = add81.out;
      upd86[done] = __sum_3.done;
    }
    group upd87<"static"=1> {
      __dx2.write_en = 1'd1;
      add82.left = __dx2.out;
      add82.right = const225.out;
      __dx2.in = add82.out;
      upd87[done] = __dx2.done;
    }
    group upd88<"static"=1> {
      __dy2.write_en = 1'd1;
      add83.left = __dy2.out;
      add83.right = const226.out;
      __dy2.in = add83.out;
      upd88[done] = __dy2.done;
    }
    group upd89<"static"=1> {
      __k9.write_en = 1'd1;
      add84.left = __k9.out;
      add84.right = const227.out;
      __k9.in = add84.out;
      upd89[done] = __k9.done;
    }
    group upd90<"static"=1> {
      x_13.addr3 = slice71.out;
      slice71.in = __x4.out;
      x_13.addr2 = slice70.out;
      slice70.in = __y4.out;
      x_13.addr1 = slice69.out;
      slice69.in = __c5.out;
      x_13.addr0 = slice68.out;
      slice68.in = __b4.out;
      x_13.write_en = 1'd1;
      x_13.write_data = __sum_3.out;
      upd90[done] = x_13.write_done;
    }
    group upd91<"static"=1> {
      __x4.write_en = 1'd1;
      add85.left = __x4.out;
      add85.right = const228.out;
      __x4.in = add85.out;
      upd91[done] = __x4.done;
    }
    group upd92<"static"=1> {
      __y4.write_en = 1'd1;
      add86.left = __y4.out;
      add86.right = const229.out;
      __y4.in = add86.out;
      upd92[done] = __y4.done;
    }
    group upd93<"static"=1> {
      __c5.write_en = 1'd1;
      add87.left = __c5.out;
      add87.right = const230.out;
      __c5.in = add87.out;
      upd93[done] = __c5.done;
    }
    group upd94<"static"=1> {
      __b4.write_en = 1'd1;
      add88.left = __b4.out;
      add88.right = const231.out;
      __b4.in = add88.out;
      upd94[done] = __b4.done;
    }
  }
  control {
    seq {
      @pos(121) let131;
      @bound(1) while le61.out with cond70 {
        seq {
          @pos(122) let132;
          @bound(96) while le62.out with cond71 {
            seq {
              @pos(123) let133;
              @bound(54) while le63.out with cond72 {
                seq {
                  @pos(124) let134;
                  @bound(54) while le64.out with cond73 {
                    seq {
                      @pos(125) let135;
                      @pos(126) let136;
                      @bound(3) while le65.out with cond74 {
                        seq {
                          @pos(127) let137;
                          @bound(11) while le66.out with cond75 {
                            seq {
                              @pos(128) let138;
                              @bound(11) while le67.out with cond76 {
                                seq {
                                  par {
                                    seq {
                                      let139;
                                      let140;
                                    }
                                    seq {
                                      let141;
                                      let142;
                                    }
                                  }
                                  @pos(129) let143;
                                  @pos(130) let144;
                                  let145;
                                  upd86;
                                  @pos(128) upd87;
                                }
                              }
                              @pos(127) upd88;
                            }
                          }
                          @pos(126) upd89;
                        }
                      }
                      @pos(131) upd90;
                      @pos(124) upd91;
                    }
                  }
                  @pos(123) upd92;
                }
              }
              @pos(122) upd93;
            }
          }
          @pos(121) upd94;
        }
      }
    }
  }
}
component bias_add_1x384x12x12() -> () {
  cells {
    ref x_27 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    ref x_28 = seq_mem_d1(32,384,9);
    ref x_29 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    __i10 = std_reg(1);
    __j9 = std_reg(9);
    __k10 = std_reg(4);
    __l5 = std_reg(4);
    add89 = std_fp_sadd(32,16,16);
    add90 = std_add(4);
    add91 = std_add(4);
    add92 = std_add(9);
    add93 = std_add(1);
    const232 = std_const(1,0);
    const233 = std_const(1,0);
    const234 = std_const(9,0);
    const235 = std_const(9,383);
    const236 = std_const(4,0);
    const237 = std_const(4,11);
    const238 = std_const(4,0);
    const239 = std_const(4,11);
    const240 = std_const(4,1);
    const241 = std_const(4,1);
    const242 = std_const(9,1);
    const243 = std_const(1,1);
    le68 = std_le(1);
    le69 = std_le(9);
    le70 = std_le(4);
    le71 = std_le(4);
    x_27_read0_0 = std_reg(32);
    x_28_read0_0 = std_reg(32);
  }
  wires {
    comb group cond77 {
      le68.left = __i10.out;
      le68.right = const233.out;
    }
    comb group cond78 {
      le69.left = __j9.out;
      le69.right = const235.out;
    }
    comb group cond79 {
      le70.left = __k10.out;
      le70.right = const237.out;
    }
    comb group cond80 {
      le71.left = __l5.out;
      le71.right = const239.out;
    }
    group let146<"static"=1> {
      __i10.in = const232.out;
      __i10.write_en = 1'd1;
      let146[done] = __i10.done;
    }
    group let147<"static"=1> {
      __j9.in = const234.out;
      __j9.write_en = 1'd1;
      let147[done] = __j9.done;
    }
    group let148<"static"=1> {
      __k10.in = const236.out;
      __k10.write_en = 1'd1;
      let148[done] = __k10.done;
    }
    group let149<"static"=1> {
      __l5.in = const238.out;
      __l5.write_en = 1'd1;
      let149[done] = __l5.done;
    }
    group let150<"static"=2> {
      x_27_read0_0.in = x_27.read_data;
      x_27_read0_0.write_en = x_27.read_done;
      let150[done] = x_27_read0_0.done;
      x_27.addr3 = __l5.out;
      x_27.addr2 = __k10.out;
      x_27.addr1 = __j9.out;
      x_27.addr0 = __i10.out;
      x_27.read_en = 1'd1;
    }
    group let151<"static"=2> {
      x_28_read0_0.in = x_28.read_data;
      x_28_read0_0.write_en = x_28.read_done;
      let151[done] = x_28_read0_0.done;
      x_28.addr0 = __j9.out;
      x_28.read_en = 1'd1;
    }
    group upd95<"static"=1> {
      x_29.addr3 = __l5.out;
      x_29.addr2 = __k10.out;
      x_29.addr1 = __j9.out;
      x_29.addr0 = __i10.out;
      x_29.write_en = 1'd1;
      add89.left = x_27_read0_0.out;
      add89.right = x_28_read0_0.out;
      x_29.write_data = add89.out;
      upd95[done] = x_29.write_done;
    }
    group upd96<"static"=1> {
      __l5.write_en = 1'd1;
      add90.left = __l5.out;
      add90.right = const240.out;
      __l5.in = add90.out;
      upd96[done] = __l5.done;
    }
    group upd97<"static"=1> {
      __k10.write_en = 1'd1;
      add91.left = __k10.out;
      add91.right = const241.out;
      __k10.in = add91.out;
      upd97[done] = __k10.done;
    }
    group upd98<"static"=1> {
      __j9.write_en = 1'd1;
      add92.left = __j9.out;
      add92.right = const242.out;
      __j9.in = add92.out;
      upd98[done] = __j9.done;
    }
    group upd99<"static"=1> {
      __i10.write_en = 1'd1;
      add93.left = __i10.out;
      add93.right = const243.out;
      __i10.in = add93.out;
      upd99[done] = __i10.done;
    }
  }
  control {
    seq {
      @pos(132) let146;
      @bound(1) while le68.out with cond77 {
        seq {
          @pos(133) let147;
          @bound(384) while le69.out with cond78 {
            seq {
              @pos(134) let148;
              @bound(12) while le70.out with cond79 {
                seq {
                  @pos(135) let149;
                  @bound(12) while le71.out with cond80 {
                    seq {
                      par {
                        @pos(136) let150;
                        @pos(137) let151;
                      }
                      @pos(138) upd95;
                      @pos(135) upd96;
                    }
                  }
                  @pos(134) upd97;
                }
              }
              @pos(133) upd98;
            }
          }
          @pos(132) upd99;
        }
      }
    }
  }
}
component reshape_1x9216() -> () {
  cells {
    ref x_41 = seq_mem_d4(32,1,256,6,6,1,9,3,3);
    ref x_42 = seq_mem_d2(32,1,9216,1,14);
    __i11 = std_reg(1);
    __j10 = std_reg(9);
    __k11 = std_reg(3);
    __l6 = std_reg(3);
    __m_0 = std_reg(14);
    add94 = std_add(14);
    add95 = std_add(3);
    add96 = std_add(3);
    add97 = std_add(9);
    add98 = std_add(1);
    const244 = std_const(14,0);
    const245 = std_const(1,0);
    const246 = std_const(1,0);
    const247 = std_const(9,0);
    const248 = std_const(9,255);
    const249 = std_const(3,0);
    const250 = std_const(3,5);
    const251 = std_const(3,0);
    const252 = std_const(3,5);
    const253 = std_const(1,0);
    const254 = std_const(14,1);
    const255 = std_const(3,1);
    const256 = std_const(3,1);
    const257 = std_const(9,1);
    const258 = std_const(1,1);
    le72 = std_le(1);
    le73 = std_le(9);
    le74 = std_le(3);
    le75 = std_le(3);
    x_41_read0_0 = std_reg(32);
  }
  wires {
    comb group cond81 {
      le72.left = __i11.out;
      le72.right = const246.out;
    }
    comb group cond82 {
      le73.left = __j10.out;
      le73.right = const248.out;
    }
    comb group cond83 {
      le74.left = __k11.out;
      le74.right = const250.out;
    }
    comb group cond84 {
      le75.left = __l6.out;
      le75.right = const252.out;
    }
    group let152<"static"=1> {
      __m_0.in = const244.out;
      __m_0.write_en = 1'd1;
      let152[done] = __m_0.done;
    }
    group let153<"static"=1> {
      __i11.in = const245.out;
      __i11.write_en = 1'd1;
      let153[done] = __i11.done;
    }
    group let154<"static"=1> {
      __j10.in = const247.out;
      __j10.write_en = 1'd1;
      let154[done] = __j10.done;
    }
    group let155<"static"=1> {
      __k11.in = const249.out;
      __k11.write_en = 1'd1;
      let155[done] = __k11.done;
    }
    group let156<"static"=1> {
      __l6.in = const251.out;
      __l6.write_en = 1'd1;
      let156[done] = __l6.done;
    }
    group let157<"static"=2> {
      x_41_read0_0.in = x_41.read_data;
      x_41_read0_0.write_en = x_41.read_done;
      let157[done] = x_41_read0_0.done;
      x_41.addr3 = __l6.out;
      x_41.addr2 = __k11.out;
      x_41.addr1 = __j10.out;
      x_41.addr0 = __i11.out;
      x_41.read_en = 1'd1;
    }
    group upd100<"static"=1> {
      x_42.addr1 = __m_0.out;
      x_42.addr0 = const253.out;
      x_42.write_en = 1'd1;
      x_42.write_data = x_41_read0_0.out;
      upd100[done] = x_42.write_done;
    }
    group upd101<"static"=1> {
      __m_0.write_en = 1'd1;
      add94.left = __m_0.out;
      add94.right = const254.out;
      __m_0.in = add94.out;
      upd101[done] = __m_0.done;
    }
    group upd102<"static"=1> {
      __l6.write_en = 1'd1;
      add95.left = __l6.out;
      add95.right = const255.out;
      __l6.in = add95.out;
      upd102[done] = __l6.done;
    }
    group upd103<"static"=1> {
      __k11.write_en = 1'd1;
      add96.left = __k11.out;
      add96.right = const256.out;
      __k11.in = add96.out;
      upd103[done] = __k11.done;
    }
    group upd104<"static"=1> {
      __j10.write_en = 1'd1;
      add97.left = __j10.out;
      add97.right = const257.out;
      __j10.in = add97.out;
      upd104[done] = __j10.done;
    }
    group upd105<"static"=1> {
      __i11.write_en = 1'd1;
      add98.left = __i11.out;
      add98.right = const258.out;
      __i11.in = add98.out;
      upd105[done] = __i11.done;
    }
  }
  control {
    seq {
      @pos(139) let152;
      @pos(140) let153;
      @bound(1) while le72.out with cond81 {
        seq {
          @pos(141) let154;
          @bound(256) while le73.out with cond82 {
            seq {
              @pos(142) let155;
              @bound(6) while le74.out with cond83 {
                seq {
                  @pos(143) let156;
                  @bound(6) while le75.out with cond84 {
                    seq {
                      @pos(144) let157;
                      @pos(145) upd100;
                      upd101;
                      @pos(143) upd102;
                    }
                  }
                  @pos(142) upd103;
                }
              }
              @pos(141) upd104;
            }
          }
          @pos(140) upd105;
        }
      }
    }
  }
}
component max_pool2d_1x256x12x12() -> () {
  cells {
    ref x_24 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    ref x_25 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    __b5 = std_reg(32);
    __c6 = std_reg(32);
    __current_2 = std_reg(32);
    __m2 = std_reg(32);
    __max_3 = std_reg(32);
    __n3 = std_reg(32);
    __pool_x_2 = std_reg(32);
    __pool_y_2 = std_reg(32);
    __stride_x_2 = std_reg(32);
    __stride_y_2 = std_reg(32);
    __x5 = std_reg(32);
    __y5 = std_reg(32);
    add100 = std_add(32);
    add101 = std_add(32);
    add102 = std_add(32);
    add103 = std_add(32);
    add104 = std_add(32);
    add105 = std_add(32);
    add106 = std_add(32);
    add99 = std_add(32);
    bin_read14_0 = std_reg(32);
    bin_read15_0 = std_reg(32);
    const259 = std_const(32,0);
    const260 = std_const(32,0);
    const261 = std_const(32,0);
    const262 = std_const(32,255);
    const263 = std_const(32,0);
    const264 = std_const(32,11);
    const265 = std_const(32,0);
    const266 = std_const(32,11);
    const267 = std_const(32,2);
    const268 = std_const(32,2);
    const269 = std_const(32,0);
    const270 = std_const(32,2);
    const271 = std_const(32,0);
    const272 = std_const(32,2);
    const273 = std_const(32,1);
    const274 = std_const(32,1);
    const275 = std_const(32,1);
    const276 = std_const(32,1);
    const277 = std_const(32,1);
    const278 = std_const(32,1);
    gt6 = std_fp_sgt(32,16,16);
    le76 = std_le(32);
    le77 = std_le(32);
    le78 = std_le(32);
    le79 = std_le(32);
    le80 = std_le(32);
    le81 = std_le(32);
    mult_pipe15 = std_mult_pipe(32);
    mult_pipe16 = std_mult_pipe(32);
    slice72 = std_slice(32,1);
    slice73 = std_slice(32,9);
    slice74 = std_slice(32,5);
    slice75 = std_slice(32,5);
    slice76 = std_slice(32,1);
    slice77 = std_slice(32,9);
    slice78 = std_slice(32,5);
    slice79 = std_slice(32,5);
    slice80 = std_slice(32,1);
    slice81 = std_slice(32,9);
    slice82 = std_slice(32,4);
    slice83 = std_slice(32,4);
  }
  wires {
    comb group cond85 {
      le76.left = __b5.out;
      le76.right = const260.out;
    }
    comb group cond86 {
      le77.left = __c6.out;
      le77.right = const262.out;
    }
    comb group cond87 {
      le78.left = __y5.out;
      le78.right = const264.out;
    }
    comb group cond88 {
      le79.left = __x5.out;
      le79.right = const266.out;
    }
    comb group cond89 {
      le80.left = __m2.out;
      le80.right = const270.out;
    }
    comb group cond90 {
      le81.left = __n3.out;
      le81.right = const272.out;
    }
    comb group cond91 {
      gt6.left = __current_2.out;
      gt6.right = __max_3.out;
    }
    group let158<"static"=1> {
      __b5.in = const259.out;
      __b5.write_en = 1'd1;
      let158[done] = __b5.done;
    }
    group let159<"static"=1> {
      __c6.in = const261.out;
      __c6.write_en = 1'd1;
      let159[done] = __c6.done;
    }
    group let160<"static"=1> {
      __y5.in = const263.out;
      __y5.write_en = 1'd1;
      let160[done] = __y5.done;
    }
    group let161<"static"=1> {
      __x5.in = const265.out;
      __x5.write_en = 1'd1;
      let161[done] = __x5.done;
    }
    group let162<"static"=4> {
      bin_read14_0.in = mult_pipe15.out;
      bin_read14_0.write_en = mult_pipe15.done;
      let162[done] = bin_read14_0.done;
      mult_pipe15.left = __y5.out;
      mult_pipe15.right = const267.out;
      mult_pipe15.go = !mult_pipe15.done ? 1'd1;
    }
    group let163<"static"=1> {
      __stride_y_2.in = bin_read14_0.out;
      __stride_y_2.write_en = 1'd1;
      let163[done] = __stride_y_2.done;
    }
    group let164<"static"=4> {
      bin_read15_0.in = mult_pipe16.out;
      bin_read15_0.write_en = mult_pipe16.done;
      let164[done] = bin_read15_0.done;
      mult_pipe16.left = __x5.out;
      mult_pipe16.right = const268.out;
      mult_pipe16.go = !mult_pipe16.done ? 1'd1;
    }
    group let165<"static"=1> {
      __stride_x_2.in = bin_read15_0.out;
      __stride_x_2.write_en = 1'd1;
      let165[done] = __stride_x_2.done;
    }
    group let166<"static"=2> {
      __max_3.in = x_24.read_data;
      __max_3.write_en = x_24.read_done;
      let166[done] = __max_3.done;
      x_24.addr3 = slice75.out;
      slice75.in = __stride_x_2.out;
      x_24.addr2 = slice74.out;
      slice74.in = __stride_y_2.out;
      x_24.addr1 = slice73.out;
      slice73.in = __c6.out;
      x_24.addr0 = slice72.out;
      slice72.in = __b5.out;
      x_24.read_en = 1'd1;
    }
    group let167<"static"=1> {
      __m2.in = const269.out;
      __m2.write_en = 1'd1;
      let167[done] = __m2.done;
    }
    group let168<"static"=1> {
      __n3.in = const271.out;
      __n3.write_en = 1'd1;
      let168[done] = __n3.done;
    }
    group let169<"static"=1> {
      __pool_y_2.in = add99.out;
      __pool_y_2.write_en = 1'd1;
      let169[done] = __pool_y_2.done;
      add99.left = __stride_y_2.out;
      add99.right = __m2.out;
    }
    group let170<"static"=1> {
      __pool_x_2.in = add100.out;
      __pool_x_2.write_en = 1'd1;
      let170[done] = __pool_x_2.done;
      add100.left = __stride_x_2.out;
      add100.right = __n3.out;
    }
    group let171<"static"=2> {
      __current_2.in = x_24.read_data;
      __current_2.write_en = x_24.read_done;
      let171[done] = __current_2.done;
      x_24.addr3 = slice79.out;
      slice79.in = __pool_x_2.out;
      x_24.addr2 = slice78.out;
      slice78.in = __pool_y_2.out;
      x_24.addr1 = slice77.out;
      slice77.in = __c6.out;
      x_24.addr0 = slice76.out;
      slice76.in = __b5.out;
      x_24.read_en = 1'd1;
    }
    group upd106<"static"=1> {
      __max_3.write_en = 1'd1;
      __max_3.in = __current_2.out;
      upd106[done] = __max_3.done;
    }
    group upd107<"static"=1> {
      __n3.write_en = 1'd1;
      add101.left = __n3.out;
      add101.right = const273.out;
      __n3.in = add101.out;
      upd107[done] = __n3.done;
    }
    group upd108<"static"=1> {
      __m2.write_en = 1'd1;
      add102.left = __m2.out;
      add102.right = const274.out;
      __m2.in = add102.out;
      upd108[done] = __m2.done;
    }
    group upd109<"static"=1> {
      x_25.addr3 = slice83.out;
      slice83.in = __x5.out;
      x_25.addr2 = slice82.out;
      slice82.in = __y5.out;
      x_25.addr1 = slice81.out;
      slice81.in = __c6.out;
      x_25.addr0 = slice80.out;
      slice80.in = __b5.out;
      x_25.write_en = 1'd1;
      x_25.write_data = __max_3.out;
      upd109[done] = x_25.write_done;
    }
    group upd110<"static"=1> {
      __x5.write_en = 1'd1;
      add103.left = __x5.out;
      add103.right = const275.out;
      __x5.in = add103.out;
      upd110[done] = __x5.done;
    }
    group upd111<"static"=1> {
      __y5.write_en = 1'd1;
      add104.left = __y5.out;
      add104.right = const276.out;
      __y5.in = add104.out;
      upd111[done] = __y5.done;
    }
    group upd112<"static"=1> {
      __c6.write_en = 1'd1;
      add105.left = __c6.out;
      add105.right = const277.out;
      __c6.in = add105.out;
      upd112[done] = __c6.done;
    }
    group upd113<"static"=1> {
      __b5.write_en = 1'd1;
      add106.left = __b5.out;
      add106.right = const278.out;
      __b5.in = add106.out;
      upd113[done] = __b5.done;
    }
  }
  control {
    seq {
      @pos(146) let158;
      @bound(1) while le76.out with cond85 {
        seq {
          @pos(147) let159;
          @bound(256) while le77.out with cond86 {
            seq {
              @pos(148) let160;
              @bound(12) while le78.out with cond87 {
                seq {
                  @pos(149) let161;
                  @bound(12) while le79.out with cond88 {
                    seq {
                      par {
                        seq {
                          let162;
                          let163;
                        }
                        seq {
                          let164;
                          let165;
                        }
                      }
                      @pos(150) let166;
                      @pos(151) let167;
                      @bound(3) while le80.out with cond89 {
                        seq {
                          @pos(152) let168;
                          @bound(3) while le81.out with cond90 {
                            seq {
                              par {
                                @pos(153) let169;
                                @pos(154) let170;
                              }
                              @pos(155) let171;
                              if gt6.out with cond91 {
                                @pos(156) upd106;
                              }
                              @pos(152) upd107;
                            }
                          }
                          @pos(151) upd108;
                        }
                      }
                      @pos(157) upd109;
                      @pos(149) upd110;
                    }
                  }
                  @pos(148) upd111;
                }
              }
              @pos(147) upd112;
            }
          }
          @pos(146) upd113;
        }
      }
    }
  }
}
component dense_1x4096() -> () {
  cells {
    ref x_42 = seq_mem_d2(32,1,9216,1,14);
    ref x_43 = seq_mem_d2(32,4096,9216,13,14);
    ref x_44 = seq_mem_d2(32,1,4096,1,13);
    __i12 = std_reg(1);
    __j11 = std_reg(13);
    __k12 = std_reg(14);
    __product_1 = std_reg(32);
    add107 = std_fp_sadd(32,16,16);
    add108 = std_add(14);
    add109 = std_add(13);
    add110 = std_add(1);
    bin_read27_0 = std_reg(32);
    const279 = std_const(1,0);
    const280 = std_const(1,0);
    const281 = std_const(13,0);
    const282 = std_const(13,4095);
    const283 = std_const(14,0);
    const284 = std_const(14,9215);
    const285 = std_const(14,1);
    const286 = std_const(13,1);
    const287 = std_const(1,1);
    le82 = std_le(1);
    le83 = std_le(13);
    le84 = std_le(14);
    mult_pipe17 = std_fp_smult_pipe(32,16,16);
    red_read10 = std_reg(32);
    x_42_read0_0 = std_reg(32);
    x_43_read0_0 = std_reg(32);
  }
  wires {
    comb group cond92 {
      le82.left = __i12.out;
      le82.right = const280.out;
    }
    comb group cond93 {
      le83.left = __j11.out;
      le83.right = const282.out;
    }
    comb group cond94 {
      le84.left = __k12.out;
      le84.right = const284.out;
    }
    group let172<"static"=1> {
      __i12.in = const279.out;
      __i12.write_en = 1'd1;
      let172[done] = __i12.done;
    }
    group let173<"static"=1> {
      __j11.in = const281.out;
      __j11.write_en = 1'd1;
      let173[done] = __j11.done;
    }
    group let174<"static"=1> {
      __k12.in = const283.out;
      __k12.write_en = 1'd1;
      let174[done] = __k12.done;
    }
    group let175<"static"=2> {
      x_42_read0_0.in = x_42.read_data;
      x_42_read0_0.write_en = x_42.read_done;
      let175[done] = x_42_read0_0.done;
      x_42.addr1 = __k12.out;
      x_42.addr0 = __i12.out;
      x_42.read_en = 1'd1;
    }
    group let176<"static"=2> {
      x_43_read0_0.in = x_43.read_data;
      x_43_read0_0.write_en = x_43.read_done;
      let176[done] = x_43_read0_0.done;
      x_43.addr1 = __k12.out;
      x_43.addr0 = __j11.out;
      x_43.read_en = 1'd1;
    }
    group let177<"static"=4> {
      bin_read27_0.in = mult_pipe17.out;
      bin_read27_0.write_en = mult_pipe17.done;
      let177[done] = bin_read27_0.done;
      mult_pipe17.left = x_42_read0_0.out;
      mult_pipe17.right = x_43_read0_0.out;
      mult_pipe17.go = !mult_pipe17.done ? 1'd1;
    }
    group let178<"static"=1> {
      __product_1.in = bin_read27_0.out;
      __product_1.write_en = 1'd1;
      let178[done] = __product_1.done;
    }
    group let179<"static"=2> {
      red_read10.in = x_44.read_data;
      red_read10.write_en = x_44.read_done;
      let179[done] = red_read10.done;
      x_44.addr1 = __j11.out;
      x_44.addr0 = __i12.out;
      x_44.read_en = 1'd1;
    }
    group upd114<"static"=1> {
      x_44.addr1 = __j11.out;
      x_44.addr0 = __i12.out;
      x_44.write_en = 1'd1;
      add107.left = red_read10.out;
      add107.right = __product_1.out;
      x_44.write_data = add107.out;
      upd114[done] = x_44.write_done;
    }
    group upd115<"static"=1> {
      __k12.write_en = 1'd1;
      add108.left = __k12.out;
      add108.right = const285.out;
      __k12.in = add108.out;
      upd115[done] = __k12.done;
    }
    group upd116<"static"=1> {
      __j11.write_en = 1'd1;
      add109.left = __j11.out;
      add109.right = const286.out;
      __j11.in = add109.out;
      upd116[done] = __j11.done;
    }
    group upd117<"static"=1> {
      __i12.write_en = 1'd1;
      add110.left = __i12.out;
      add110.right = const287.out;
      __i12.in = add110.out;
      upd117[done] = __i12.done;
    }
  }
  control {
    seq {
      @pos(158) let172;
      @bound(1) while le82.out with cond92 {
        seq {
          @pos(159) let173;
          @bound(4096) while le83.out with cond93 {
            seq {
              @pos(160) let174;
              @bound(9216) while le84.out with cond94 {
                seq {
                  par {
                    @pos(161) let175;
                    @pos(162) let176;
                  }
                  let177;
                  let178;
                  let179;
                  upd114;
                  @pos(160) upd115;
                }
              }
              @pos(159) upd116;
            }
          }
          @pos(158) upd117;
        }
      }
    }
  }
}
component conv2d_1x384x12x12_1() -> () {
  cells {
    ref x_30 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    ref x_31 = seq_mem_d4(32,384,192,3,3,9,8,2,2);
    ref x_32 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    __b6 = std_reg(32);
    __c7 = std_reg(32);
    __dx3 = std_reg(32);
    __dy3 = std_reg(32);
    __k13 = std_reg(32);
    __kernel_x_3 = std_reg(32);
    __kernel_y_3 = std_reg(32);
    __padded_tensor_val_3 = std_reg(32);
    __sum_4 = std_reg(32);
    __x6 = std_reg(32);
    __y6 = std_reg(32);
    add111 = std_add(32);
    add112 = std_add(32);
    add113 = std_fp_sadd(32,16,16);
    add114 = std_add(32);
    add115 = std_add(32);
    add116 = std_add(32);
    add117 = std_add(32);
    add118 = std_add(32);
    add119 = std_add(32);
    add120 = std_add(32);
    and7 = std_and(1);
    and8 = std_and(1);
    and9 = std_and(1);
    bin_read19_0 = std_reg(32);
    bin_read20_0 = std_reg(32);
    bin_read21_0 = std_reg(32);
    const288 = std_const(32,0);
    const289 = std_const(32,0);
    const290 = std_const(32,0);
    const291 = std_const(32,383);
    const292 = std_const(32,0);
    const293 = std_const(32,11);
    const294 = std_const(32,0);
    const295 = std_const(32,11);
    const296 = std_const(32,0);
    const297 = std_const(32,383);
    const298 = std_const(32,0);
    const299 = std_const(32,2);
    const300 = std_const(32,0);
    const301 = std_const(32,2);
    const302 = std_const(32,1);
    const303 = std_const(32,1);
    const304 = std_const(32,1);
    const305 = std_const(32,13);
    const306 = std_const(32,1);
    const307 = std_const(32,13);
    const308 = std_const(32,1);
    const309 = std_const(32,1);
    const310 = std_const(32,1);
    const311 = std_const(32,1);
    const312 = std_const(32,1);
    const313 = std_const(32,1);
    const314 = std_const(32,1);
    const315 = std_const(32,1);
    const316 = std_const(32,1);
    fp_const16 = std_const(32,0);
    fp_const17 = std_const(32,0);
    ge5 = std_ge(32);
    ge6 = std_ge(32);
    le85 = std_le(32);
    le86 = std_le(32);
    le87 = std_le(32);
    le88 = std_le(32);
    le89 = std_le(32);
    le90 = std_le(32);
    le91 = std_le(32);
    lt5 = std_lt(32);
    lt6 = std_lt(32);
    mult_pipe18 = std_mult_pipe(32);
    mult_pipe19 = std_mult_pipe(32);
    mult_pipe20 = std_fp_smult_pipe(32,16,16);
    slice84 = std_slice(32,1);
    slice85 = std_slice(32,9);
    slice86 = std_slice(32,4);
    slice87 = std_slice(32,4);
    slice88 = std_slice(32,9);
    slice89 = std_slice(32,8);
    slice90 = std_slice(32,2);
    slice91 = std_slice(32,2);
    slice92 = std_slice(32,1);
    slice93 = std_slice(32,9);
    slice94 = std_slice(32,4);
    slice95 = std_slice(32,4);
    sub7 = std_sub(32);
    sub8 = std_sub(32);
    x_30_read0_0 = std_reg(32);
    x_31_read0_0 = std_reg(32);
  }
  wires {
    comb group cond100 {
      le90.left = __dy3.out;
      le90.right = const299.out;
    }
    comb group cond101 {
      le91.left = __dx3.out;
      le91.right = const301.out;
    }
    comb group cond102 {
      and9.left = and8.out;
      and9.right = lt6.out;
      and8.left = and7.out;
      and8.right = ge6.out;
      and7.left = ge5.out;
      and7.right = lt5.out;
      ge5.left = __kernel_y_3.out;
      ge5.right = const304.out;
      lt5.left = __kernel_y_3.out;
      lt5.right = const305.out;
      ge6.left = __kernel_x_3.out;
      ge6.right = const306.out;
      lt6.left = __kernel_x_3.out;
      lt6.right = const307.out;
    }
    comb group cond95 {
      le85.left = __b6.out;
      le85.right = const289.out;
    }
    comb group cond96 {
      le86.left = __c7.out;
      le86.right = const291.out;
    }
    comb group cond97 {
      le87.left = __y6.out;
      le87.right = const293.out;
    }
    comb group cond98 {
      le88.left = __x6.out;
      le88.right = const295.out;
    }
    comb group cond99 {
      le89.left = __k13.out;
      le89.right = const297.out;
    }
    group let180<"static"=1> {
      __b6.in = const288.out;
      __b6.write_en = 1'd1;
      let180[done] = __b6.done;
    }
    group let181<"static"=1> {
      __c7.in = const290.out;
      __c7.write_en = 1'd1;
      let181[done] = __c7.done;
    }
    group let182<"static"=1> {
      __y6.in = const292.out;
      __y6.write_en = 1'd1;
      let182[done] = __y6.done;
    }
    group let183<"static"=1> {
      __x6.in = const294.out;
      __x6.write_en = 1'd1;
      let183[done] = __x6.done;
    }
    group let184<"static"=1> {
      __sum_4.in = fp_const16.out;
      __sum_4.write_en = 1'd1;
      let184[done] = __sum_4.done;
    }
    group let185<"static"=1> {
      __k13.in = const296.out;
      __k13.write_en = 1'd1;
      let185[done] = __k13.done;
    }
    group let186<"static"=1> {
      __dy3.in = const298.out;
      __dy3.write_en = 1'd1;
      let186[done] = __dy3.done;
    }
    group let187<"static"=1> {
      __dx3.in = const300.out;
      __dx3.write_en = 1'd1;
      let187[done] = __dx3.done;
    }
    group let188<"static"=4> {
      bin_read19_0.in = mult_pipe18.out;
      bin_read19_0.write_en = mult_pipe18.done;
      let188[done] = bin_read19_0.done;
      mult_pipe18.left = const302.out;
      mult_pipe18.right = __y6.out;
      mult_pipe18.go = !mult_pipe18.done ? 1'd1;
    }
    group let189<"static"=1> {
      __kernel_y_3.in = add111.out;
      __kernel_y_3.write_en = 1'd1;
      let189[done] = __kernel_y_3.done;
      add111.left = bin_read19_0.out;
      add111.right = __dy3.out;
    }
    group let190<"static"=4> {
      bin_read20_0.in = mult_pipe19.out;
      bin_read20_0.write_en = mult_pipe19.done;
      let190[done] = bin_read20_0.done;
      mult_pipe19.left = const303.out;
      mult_pipe19.right = __x6.out;
      mult_pipe19.go = !mult_pipe19.done ? 1'd1;
    }
    group let191<"static"=1> {
      __kernel_x_3.in = add112.out;
      __kernel_x_3.write_en = 1'd1;
      let191[done] = __kernel_x_3.done;
      add112.left = bin_read20_0.out;
      add112.right = __dx3.out;
    }
    group let192<"static"=1> {
      __padded_tensor_val_3.in = fp_const17.out;
      __padded_tensor_val_3.write_en = 1'd1;
      let192[done] = __padded_tensor_val_3.done;
    }
    group let193<"static"=2> {
      x_30_read0_0.in = x_30.read_data;
      x_30_read0_0.write_en = x_30.read_done;
      let193[done] = x_30_read0_0.done;
      x_30.addr3 = slice87.out;
      slice87.in = sub8.out;
      sub8.left = __kernel_x_3.out;
      sub8.right = const309.out;
      x_30.addr2 = slice86.out;
      slice86.in = sub7.out;
      sub7.left = __kernel_y_3.out;
      sub7.right = const308.out;
      x_30.addr1 = slice85.out;
      slice85.in = __k13.out;
      x_30.addr0 = slice84.out;
      slice84.in = __b6.out;
      x_30.read_en = 1'd1;
    }
    group let194<"static"=2> {
      x_31_read0_0.in = x_31.read_data;
      x_31_read0_0.write_en = x_31.read_done;
      let194[done] = x_31_read0_0.done;
      x_31.addr3 = slice91.out;
      slice91.in = __dx3.out;
      x_31.addr2 = slice90.out;
      slice90.in = __dy3.out;
      x_31.addr1 = slice89.out;
      slice89.in = __k13.out;
      x_31.addr0 = slice88.out;
      slice88.in = __c7.out;
      x_31.read_en = 1'd1;
    }
    group let195<"static"=4> {
      bin_read21_0.in = mult_pipe20.out;
      bin_read21_0.write_en = mult_pipe20.done;
      let195[done] = bin_read21_0.done;
      mult_pipe20.left = __padded_tensor_val_3.out;
      mult_pipe20.right = x_31_read0_0.out;
      mult_pipe20.go = !mult_pipe20.done ? 1'd1;
    }
    group upd118<"static"=1> {
      __padded_tensor_val_3.write_en = 1'd1;
      __padded_tensor_val_3.in = x_30_read0_0.out;
      upd118[done] = __padded_tensor_val_3.done;
    }
    group upd119<"static"=1> {
      __sum_4.write_en = 1'd1;
      add113.left = __sum_4.out;
      add113.right = bin_read21_0.out;
      __sum_4.in = add113.out;
      upd119[done] = __sum_4.done;
    }
    group upd120<"static"=1> {
      __dx3.write_en = 1'd1;
      add114.left = __dx3.out;
      add114.right = const310.out;
      __dx3.in = add114.out;
      upd120[done] = __dx3.done;
    }
    group upd121<"static"=1> {
      __dy3.write_en = 1'd1;
      add115.left = __dy3.out;
      add115.right = const311.out;
      __dy3.in = add115.out;
      upd121[done] = __dy3.done;
    }
    group upd122<"static"=1> {
      __k13.write_en = 1'd1;
      add116.left = __k13.out;
      add116.right = const312.out;
      __k13.in = add116.out;
      upd122[done] = __k13.done;
    }
    group upd123<"static"=1> {
      x_32.addr3 = slice95.out;
      slice95.in = __x6.out;
      x_32.addr2 = slice94.out;
      slice94.in = __y6.out;
      x_32.addr1 = slice93.out;
      slice93.in = __c7.out;
      x_32.addr0 = slice92.out;
      slice92.in = __b6.out;
      x_32.write_en = 1'd1;
      x_32.write_data = __sum_4.out;
      upd123[done] = x_32.write_done;
    }
    group upd124<"static"=1> {
      __x6.write_en = 1'd1;
      add117.left = __x6.out;
      add117.right = const313.out;
      __x6.in = add117.out;
      upd124[done] = __x6.done;
    }
    group upd125<"static"=1> {
      __y6.write_en = 1'd1;
      add118.left = __y6.out;
      add118.right = const314.out;
      __y6.in = add118.out;
      upd125[done] = __y6.done;
    }
    group upd126<"static"=1> {
      __c7.write_en = 1'd1;
      add119.left = __c7.out;
      add119.right = const315.out;
      __c7.in = add119.out;
      upd126[done] = __c7.done;
    }
    group upd127<"static"=1> {
      __b6.write_en = 1'd1;
      add120.left = __b6.out;
      add120.right = const316.out;
      __b6.in = add120.out;
      upd127[done] = __b6.done;
    }
  }
  control {
    seq {
      @pos(163) let180;
      @bound(1) while le85.out with cond95 {
        seq {
          @pos(164) let181;
          @bound(384) while le86.out with cond96 {
            seq {
              @pos(165) let182;
              @bound(12) while le87.out with cond97 {
                seq {
                  @pos(166) let183;
                  @bound(12) while le88.out with cond98 {
                    seq {
                      @pos(167) let184;
                      @pos(168) let185;
                      @bound(384) while le89.out with cond99 {
                        seq {
                          @pos(169) let186;
                          @bound(3) while le90.out with cond100 {
                            seq {
                              @pos(170) let187;
                              @bound(3) while le91.out with cond101 {
                                seq {
                                  par {
                                    seq {
                                      let188;
                                      let189;
                                    }
                                    seq {
                                      let190;
                                      let191;
                                    }
                                  }
                                  @pos(171) let192;
                                  if and9.out with cond102 {
                                    seq {
                                      @pos(172) let193;
                                      @pos(173) upd118;
                                    }
                                  }
                                  @pos(174) let194;
                                  let195;
                                  upd119;
                                  @pos(170) upd120;
                                }
                              }
                              @pos(169) upd121;
                            }
                          }
                          @pos(168) upd122;
                        }
                      }
                      @pos(175) upd123;
                      @pos(166) upd124;
                    }
                  }
                  @pos(165) upd125;
                }
              }
              @pos(164) upd126;
            }
          }
          @pos(163) upd127;
        }
      }
    }
  }
}
component conv2d_1x256x12x12() -> () {
  cells {
    ref x_35 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    ref x_36 = seq_mem_d4(32,256,192,3,3,9,8,2,2);
    ref x_37 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    __b7 = std_reg(32);
    __c8 = std_reg(32);
    __dx4 = std_reg(32);
    __dy4 = std_reg(32);
    __k14 = std_reg(32);
    __kernel_x_4 = std_reg(32);
    __kernel_y_4 = std_reg(32);
    __padded_tensor_val_4 = std_reg(32);
    __sum_5 = std_reg(32);
    __x7 = std_reg(32);
    __y7 = std_reg(32);
    add121 = std_add(32);
    add122 = std_add(32);
    add123 = std_fp_sadd(32,16,16);
    add124 = std_add(32);
    add125 = std_add(32);
    add126 = std_add(32);
    add127 = std_add(32);
    add128 = std_add(32);
    add129 = std_add(32);
    add130 = std_add(32);
    and10 = std_and(1);
    and11 = std_and(1);
    and12 = std_and(1);
    bin_read22_0 = std_reg(32);
    bin_read23_0 = std_reg(32);
    bin_read24_0 = std_reg(32);
    const317 = std_const(32,0);
    const318 = std_const(32,0);
    const319 = std_const(32,0);
    const320 = std_const(32,255);
    const321 = std_const(32,0);
    const322 = std_const(32,11);
    const323 = std_const(32,0);
    const324 = std_const(32,11);
    const325 = std_const(32,0);
    const326 = std_const(32,383);
    const327 = std_const(32,0);
    const328 = std_const(32,2);
    const329 = std_const(32,0);
    const330 = std_const(32,2);
    const331 = std_const(32,1);
    const332 = std_const(32,1);
    const333 = std_const(32,1);
    const334 = std_const(32,13);
    const335 = std_const(32,1);
    const336 = std_const(32,13);
    const337 = std_const(32,1);
    const338 = std_const(32,1);
    const339 = std_const(32,1);
    const340 = std_const(32,1);
    const341 = std_const(32,1);
    const342 = std_const(32,1);
    const343 = std_const(32,1);
    const344 = std_const(32,1);
    const345 = std_const(32,1);
    fp_const18 = std_const(32,0);
    fp_const19 = std_const(32,0);
    ge7 = std_ge(32);
    ge8 = std_ge(32);
    le92 = std_le(32);
    le93 = std_le(32);
    le94 = std_le(32);
    le95 = std_le(32);
    le96 = std_le(32);
    le97 = std_le(32);
    le98 = std_le(32);
    lt7 = std_lt(32);
    lt8 = std_lt(32);
    mult_pipe21 = std_mult_pipe(32);
    mult_pipe22 = std_mult_pipe(32);
    mult_pipe23 = std_fp_smult_pipe(32,16,16);
    slice100 = std_slice(32,9);
    slice101 = std_slice(32,8);
    slice102 = std_slice(32,2);
    slice103 = std_slice(32,2);
    slice104 = std_slice(32,1);
    slice105 = std_slice(32,9);
    slice106 = std_slice(32,4);
    slice107 = std_slice(32,4);
    slice96 = std_slice(32,1);
    slice97 = std_slice(32,9);
    slice98 = std_slice(32,4);
    slice99 = std_slice(32,4);
    sub10 = std_sub(32);
    sub9 = std_sub(32);
    x_35_read0_0 = std_reg(32);
    x_36_read0_0 = std_reg(32);
  }
  wires {
    comb group cond103 {
      le92.left = __b7.out;
      le92.right = const318.out;
    }
    comb group cond104 {
      le93.left = __c8.out;
      le93.right = const320.out;
    }
    comb group cond105 {
      le94.left = __y7.out;
      le94.right = const322.out;
    }
    comb group cond106 {
      le95.left = __x7.out;
      le95.right = const324.out;
    }
    comb group cond107 {
      le96.left = __k14.out;
      le96.right = const326.out;
    }
    comb group cond108 {
      le97.left = __dy4.out;
      le97.right = const328.out;
    }
    comb group cond109 {
      le98.left = __dx4.out;
      le98.right = const330.out;
    }
    comb group cond110 {
      and12.left = and11.out;
      and12.right = lt8.out;
      and11.left = and10.out;
      and11.right = ge8.out;
      and10.left = ge7.out;
      and10.right = lt7.out;
      ge7.left = __kernel_y_4.out;
      ge7.right = const333.out;
      lt7.left = __kernel_y_4.out;
      lt7.right = const334.out;
      ge8.left = __kernel_x_4.out;
      ge8.right = const335.out;
      lt8.left = __kernel_x_4.out;
      lt8.right = const336.out;
    }
    group let196<"static"=1> {
      __b7.in = const317.out;
      __b7.write_en = 1'd1;
      let196[done] = __b7.done;
    }
    group let197<"static"=1> {
      __c8.in = const319.out;
      __c8.write_en = 1'd1;
      let197[done] = __c8.done;
    }
    group let198<"static"=1> {
      __y7.in = const321.out;
      __y7.write_en = 1'd1;
      let198[done] = __y7.done;
    }
    group let199<"static"=1> {
      __x7.in = const323.out;
      __x7.write_en = 1'd1;
      let199[done] = __x7.done;
    }
    group let200<"static"=1> {
      __sum_5.in = fp_const18.out;
      __sum_5.write_en = 1'd1;
      let200[done] = __sum_5.done;
    }
    group let201<"static"=1> {
      __k14.in = const325.out;
      __k14.write_en = 1'd1;
      let201[done] = __k14.done;
    }
    group let202<"static"=1> {
      __dy4.in = const327.out;
      __dy4.write_en = 1'd1;
      let202[done] = __dy4.done;
    }
    group let203<"static"=1> {
      __dx4.in = const329.out;
      __dx4.write_en = 1'd1;
      let203[done] = __dx4.done;
    }
    group let204<"static"=4> {
      bin_read22_0.in = mult_pipe21.out;
      bin_read22_0.write_en = mult_pipe21.done;
      let204[done] = bin_read22_0.done;
      mult_pipe21.left = const331.out;
      mult_pipe21.right = __y7.out;
      mult_pipe21.go = !mult_pipe21.done ? 1'd1;
    }
    group let205<"static"=1> {
      __kernel_y_4.in = add121.out;
      __kernel_y_4.write_en = 1'd1;
      let205[done] = __kernel_y_4.done;
      add121.left = bin_read22_0.out;
      add121.right = __dy4.out;
    }
    group let206<"static"=4> {
      bin_read23_0.in = mult_pipe22.out;
      bin_read23_0.write_en = mult_pipe22.done;
      let206[done] = bin_read23_0.done;
      mult_pipe22.left = const332.out;
      mult_pipe22.right = __x7.out;
      mult_pipe22.go = !mult_pipe22.done ? 1'd1;
    }
    group let207<"static"=1> {
      __kernel_x_4.in = add122.out;
      __kernel_x_4.write_en = 1'd1;
      let207[done] = __kernel_x_4.done;
      add122.left = bin_read23_0.out;
      add122.right = __dx4.out;
    }
    group let208<"static"=1> {
      __padded_tensor_val_4.in = fp_const19.out;
      __padded_tensor_val_4.write_en = 1'd1;
      let208[done] = __padded_tensor_val_4.done;
    }
    group let209<"static"=2> {
      x_35_read0_0.in = x_35.read_data;
      x_35_read0_0.write_en = x_35.read_done;
      let209[done] = x_35_read0_0.done;
      x_35.addr3 = slice99.out;
      slice99.in = sub10.out;
      sub10.left = __kernel_x_4.out;
      sub10.right = const338.out;
      x_35.addr2 = slice98.out;
      slice98.in = sub9.out;
      sub9.left = __kernel_y_4.out;
      sub9.right = const337.out;
      x_35.addr1 = slice97.out;
      slice97.in = __k14.out;
      x_35.addr0 = slice96.out;
      slice96.in = __b7.out;
      x_35.read_en = 1'd1;
    }
    group let210<"static"=2> {
      x_36_read0_0.in = x_36.read_data;
      x_36_read0_0.write_en = x_36.read_done;
      let210[done] = x_36_read0_0.done;
      x_36.addr3 = slice103.out;
      slice103.in = __dx4.out;
      x_36.addr2 = slice102.out;
      slice102.in = __dy4.out;
      x_36.addr1 = slice101.out;
      slice101.in = __k14.out;
      x_36.addr0 = slice100.out;
      slice100.in = __c8.out;
      x_36.read_en = 1'd1;
    }
    group let211<"static"=4> {
      bin_read24_0.in = mult_pipe23.out;
      bin_read24_0.write_en = mult_pipe23.done;
      let211[done] = bin_read24_0.done;
      mult_pipe23.left = __padded_tensor_val_4.out;
      mult_pipe23.right = x_36_read0_0.out;
      mult_pipe23.go = !mult_pipe23.done ? 1'd1;
    }
    group upd128<"static"=1> {
      __padded_tensor_val_4.write_en = 1'd1;
      __padded_tensor_val_4.in = x_35_read0_0.out;
      upd128[done] = __padded_tensor_val_4.done;
    }
    group upd129<"static"=1> {
      __sum_5.write_en = 1'd1;
      add123.left = __sum_5.out;
      add123.right = bin_read24_0.out;
      __sum_5.in = add123.out;
      upd129[done] = __sum_5.done;
    }
    group upd130<"static"=1> {
      __dx4.write_en = 1'd1;
      add124.left = __dx4.out;
      add124.right = const339.out;
      __dx4.in = add124.out;
      upd130[done] = __dx4.done;
    }
    group upd131<"static"=1> {
      __dy4.write_en = 1'd1;
      add125.left = __dy4.out;
      add125.right = const340.out;
      __dy4.in = add125.out;
      upd131[done] = __dy4.done;
    }
    group upd132<"static"=1> {
      __k14.write_en = 1'd1;
      add126.left = __k14.out;
      add126.right = const341.out;
      __k14.in = add126.out;
      upd132[done] = __k14.done;
    }
    group upd133<"static"=1> {
      x_37.addr3 = slice107.out;
      slice107.in = __x7.out;
      x_37.addr2 = slice106.out;
      slice106.in = __y7.out;
      x_37.addr1 = slice105.out;
      slice105.in = __c8.out;
      x_37.addr0 = slice104.out;
      slice104.in = __b7.out;
      x_37.write_en = 1'd1;
      x_37.write_data = __sum_5.out;
      upd133[done] = x_37.write_done;
    }
    group upd134<"static"=1> {
      __x7.write_en = 1'd1;
      add127.left = __x7.out;
      add127.right = const342.out;
      __x7.in = add127.out;
      upd134[done] = __x7.done;
    }
    group upd135<"static"=1> {
      __y7.write_en = 1'd1;
      add128.left = __y7.out;
      add128.right = const343.out;
      __y7.in = add128.out;
      upd135[done] = __y7.done;
    }
    group upd136<"static"=1> {
      __c8.write_en = 1'd1;
      add129.left = __c8.out;
      add129.right = const344.out;
      __c8.in = add129.out;
      upd136[done] = __c8.done;
    }
    group upd137<"static"=1> {
      __b7.write_en = 1'd1;
      add130.left = __b7.out;
      add130.right = const345.out;
      __b7.in = add130.out;
      upd137[done] = __b7.done;
    }
  }
  control {
    seq {
      @pos(176) let196;
      @bound(1) while le92.out with cond103 {
        seq {
          @pos(177) let197;
          @bound(256) while le93.out with cond104 {
            seq {
              @pos(178) let198;
              @bound(12) while le94.out with cond105 {
                seq {
                  @pos(179) let199;
                  @bound(12) while le95.out with cond106 {
                    seq {
                      @pos(180) let200;
                      @pos(181) let201;
                      @bound(384) while le96.out with cond107 {
                        seq {
                          @pos(182) let202;
                          @bound(3) while le97.out with cond108 {
                            seq {
                              @pos(183) let203;
                              @bound(3) while le98.out with cond109 {
                                seq {
                                  par {
                                    seq {
                                      let204;
                                      let205;
                                    }
                                    seq {
                                      let206;
                                      let207;
                                    }
                                  }
                                  @pos(184) let208;
                                  if and12.out with cond110 {
                                    seq {
                                      @pos(185) let209;
                                      @pos(186) upd128;
                                    }
                                  }
                                  @pos(187) let210;
                                  let211;
                                  upd129;
                                  @pos(183) upd130;
                                }
                              }
                              @pos(182) upd131;
                            }
                          }
                          @pos(181) upd132;
                        }
                      }
                      @pos(188) upd133;
                      @pos(179) upd134;
                    }
                  }
                  @pos(178) upd135;
                }
              }
              @pos(177) upd136;
            }
          }
          @pos(176) upd137;
        }
      }
    }
  }
}
component dense_1x4096_1() -> () {
  cells {
    ref x_47 = seq_mem_d2(32,1,4096,1,13);
    ref x_48 = seq_mem_d2(32,4096,4096,13,13);
    ref x_49 = seq_mem_d2(32,1,4096,1,13);
    __i13 = std_reg(1);
    __j12 = std_reg(13);
    __k15 = std_reg(13);
    __product_2 = std_reg(32);
    add131 = std_fp_sadd(32,16,16);
    add132 = std_add(13);
    add133 = std_add(13);
    add134 = std_add(1);
    bin_read28_0 = std_reg(32);
    const346 = std_const(1,0);
    const347 = std_const(1,0);
    const348 = std_const(13,0);
    const349 = std_const(13,4095);
    const350 = std_const(13,0);
    const351 = std_const(13,4095);
    const352 = std_const(13,1);
    const353 = std_const(13,1);
    const354 = std_const(1,1);
    le100 = std_le(13);
    le101 = std_le(13);
    le99 = std_le(1);
    mult_pipe24 = std_fp_smult_pipe(32,16,16);
    red_read20 = std_reg(32);
    x_47_read0_0 = std_reg(32);
    x_48_read0_0 = std_reg(32);
  }
  wires {
    comb group cond111 {
      le99.left = __i13.out;
      le99.right = const347.out;
    }
    comb group cond112 {
      le100.left = __j12.out;
      le100.right = const349.out;
    }
    comb group cond113 {
      le101.left = __k15.out;
      le101.right = const351.out;
    }
    group let212<"static"=1> {
      __i13.in = const346.out;
      __i13.write_en = 1'd1;
      let212[done] = __i13.done;
    }
    group let213<"static"=1> {
      __j12.in = const348.out;
      __j12.write_en = 1'd1;
      let213[done] = __j12.done;
    }
    group let214<"static"=1> {
      __k15.in = const350.out;
      __k15.write_en = 1'd1;
      let214[done] = __k15.done;
    }
    group let215<"static"=2> {
      x_47_read0_0.in = x_47.read_data;
      x_47_read0_0.write_en = x_47.read_done;
      let215[done] = x_47_read0_0.done;
      x_47.addr1 = __k15.out;
      x_47.addr0 = __i13.out;
      x_47.read_en = 1'd1;
    }
    group let216<"static"=2> {
      x_48_read0_0.in = x_48.read_data;
      x_48_read0_0.write_en = x_48.read_done;
      let216[done] = x_48_read0_0.done;
      x_48.addr1 = __k15.out;
      x_48.addr0 = __j12.out;
      x_48.read_en = 1'd1;
    }
    group let217<"static"=4> {
      bin_read28_0.in = mult_pipe24.out;
      bin_read28_0.write_en = mult_pipe24.done;
      let217[done] = bin_read28_0.done;
      mult_pipe24.left = x_47_read0_0.out;
      mult_pipe24.right = x_48_read0_0.out;
      mult_pipe24.go = !mult_pipe24.done ? 1'd1;
    }
    group let218<"static"=1> {
      __product_2.in = bin_read28_0.out;
      __product_2.write_en = 1'd1;
      let218[done] = __product_2.done;
    }
    group let219<"static"=2> {
      red_read20.in = x_49.read_data;
      red_read20.write_en = x_49.read_done;
      let219[done] = red_read20.done;
      x_49.addr1 = __j12.out;
      x_49.addr0 = __i13.out;
      x_49.read_en = 1'd1;
    }
    group upd138<"static"=1> {
      x_49.addr1 = __j12.out;
      x_49.addr0 = __i13.out;
      x_49.write_en = 1'd1;
      add131.left = red_read20.out;
      add131.right = __product_2.out;
      x_49.write_data = add131.out;
      upd138[done] = x_49.write_done;
    }
    group upd139<"static"=1> {
      __k15.write_en = 1'd1;
      add132.left = __k15.out;
      add132.right = const352.out;
      __k15.in = add132.out;
      upd139[done] = __k15.done;
    }
    group upd140<"static"=1> {
      __j12.write_en = 1'd1;
      add133.left = __j12.out;
      add133.right = const353.out;
      __j12.in = add133.out;
      upd140[done] = __j12.done;
    }
    group upd141<"static"=1> {
      __i13.write_en = 1'd1;
      add134.left = __i13.out;
      add134.right = const354.out;
      __i13.in = add134.out;
      upd141[done] = __i13.done;
    }
  }
  control {
    seq {
      @pos(189) let212;
      @bound(1) while le99.out with cond111 {
        seq {
          @pos(190) let213;
          @bound(4096) while le100.out with cond112 {
            seq {
              @pos(191) let214;
              @bound(4096) while le101.out with cond113 {
                seq {
                  par {
                    @pos(192) let215;
                    @pos(193) let216;
                  }
                  let217;
                  let218;
                  let219;
                  upd138;
                  @pos(191) upd139;
                }
              }
              @pos(190) upd140;
            }
          }
          @pos(189) upd141;
        }
      }
    }
  }
}
component relu_1x4096() -> () {
  cells {
    ref x_46 = seq_mem_d2(32,1,4096,1,13);
    ref x_47 = seq_mem_d2(32,1,4096,1,13);
    __i14 = std_reg(1);
    __j13 = std_reg(13);
    add135 = std_add(13);
    add136 = std_add(1);
    const355 = std_const(1,0);
    const356 = std_const(1,0);
    const357 = std_const(13,0);
    const358 = std_const(13,4095);
    const359 = std_const(13,1);
    const360 = std_const(1,1);
    fp_const20 = std_const(32,0);
    fp_const21 = std_const(32,0);
    gt7 = std_fp_sgt(32,16,16);
    le102 = std_le(1);
    le103 = std_le(13);
    x_46_read0_0 = std_reg(32);
    x_46_read1_0 = std_reg(32);
  }
  wires {
    comb group cond114 {
      le102.left = __i14.out;
      le102.right = const356.out;
    }
    comb group cond115 {
      le103.left = __j13.out;
      le103.right = const358.out;
    }
    comb group cond116 {
      gt7.left = x_46_read0_0.out;
      gt7.right = fp_const20.out;
    }
    group let220<"static"=1> {
      __i14.in = const355.out;
      __i14.write_en = 1'd1;
      let220[done] = __i14.done;
    }
    group let221<"static"=1> {
      __j13.in = const357.out;
      __j13.write_en = 1'd1;
      let221[done] = __j13.done;
    }
    group let222<"static"=2> {
      x_46_read0_0.in = x_46.read_data;
      x_46_read0_0.write_en = x_46.read_done;
      let222[done] = x_46_read0_0.done;
      x_46.addr1 = __j13.out;
      x_46.addr0 = __i14.out;
      x_46.read_en = 1'd1;
    }
    group let223<"static"=2> {
      x_46_read1_0.in = x_46.read_data;
      x_46_read1_0.write_en = x_46.read_done;
      let223[done] = x_46_read1_0.done;
      x_46.addr1 = __j13.out;
      x_46.addr0 = __i14.out;
      x_46.read_en = 1'd1;
    }
    group upd142<"static"=1> {
      x_47.addr1 = __j13.out;
      x_47.addr0 = __i14.out;
      x_47.write_en = 1'd1;
      x_47.write_data = x_46_read1_0.out;
      upd142[done] = x_47.write_done;
    }
    group upd143<"static"=1> {
      x_47.addr1 = __j13.out;
      x_47.addr0 = __i14.out;
      x_47.write_en = 1'd1;
      x_47.write_data = fp_const21.out;
      upd143[done] = x_47.write_done;
    }
    group upd144<"static"=1> {
      __j13.write_en = 1'd1;
      add135.left = __j13.out;
      add135.right = const359.out;
      __j13.in = add135.out;
      upd144[done] = __j13.done;
    }
    group upd145<"static"=1> {
      __i14.write_en = 1'd1;
      add136.left = __i14.out;
      add136.right = const360.out;
      __i14.in = add136.out;
      upd145[done] = __i14.done;
    }
  }
  control {
    seq {
      @pos(194) let220;
      @bound(1) while le102.out with cond114 {
        seq {
          @pos(195) let221;
          @bound(4096) while le103.out with cond115 {
            seq {
              @pos(196) let222;
              if gt7.out with cond116 {
                seq {
                  @pos(197) let223;
                  @pos(198) upd142;
                }
              } else {
                @pos(199) upd143;
              }
              @pos(195) upd144;
            }
          }
          @pos(194) upd145;
        }
      }
    }
  }
}
component add_1x1000() -> () {
  cells {
    ref x_54 = seq_mem_d2(32,1,1000,1,10);
    ref x_55 = seq_mem_d1(32,1000,10);
    ref x_56 = seq_mem_d2(32,1,1000,1,10);
    __i15 = std_reg(1);
    __j14 = std_reg(10);
    add137 = std_fp_sadd(32,16,16);
    add138 = std_add(10);
    add139 = std_add(1);
    const361 = std_const(1,0);
    const362 = std_const(1,0);
    const363 = std_const(10,0);
    const364 = std_const(10,999);
    const365 = std_const(10,1);
    const366 = std_const(1,1);
    le104 = std_le(1);
    le105 = std_le(10);
    x_54_read0_0 = std_reg(32);
    x_55_read0_0 = std_reg(32);
  }
  wires {
    comb group cond117 {
      le104.left = __i15.out;
      le104.right = const362.out;
    }
    comb group cond118 {
      le105.left = __j14.out;
      le105.right = const364.out;
    }
    group let224<"static"=1> {
      __i15.in = const361.out;
      __i15.write_en = 1'd1;
      let224[done] = __i15.done;
    }
    group let225<"static"=1> {
      __j14.in = const363.out;
      __j14.write_en = 1'd1;
      let225[done] = __j14.done;
    }
    group let226<"static"=2> {
      x_54_read0_0.in = x_54.read_data;
      x_54_read0_0.write_en = x_54.read_done;
      let226[done] = x_54_read0_0.done;
      x_54.addr1 = __j14.out;
      x_54.addr0 = __i15.out;
      x_54.read_en = 1'd1;
    }
    group let227<"static"=2> {
      x_55_read0_0.in = x_55.read_data;
      x_55_read0_0.write_en = x_55.read_done;
      let227[done] = x_55_read0_0.done;
      x_55.addr0 = __j14.out;
      x_55.read_en = 1'd1;
    }
    group upd146<"static"=1> {
      x_56.addr1 = __j14.out;
      x_56.addr0 = __i15.out;
      x_56.write_en = 1'd1;
      add137.left = x_54_read0_0.out;
      add137.right = x_55_read0_0.out;
      x_56.write_data = add137.out;
      upd146[done] = x_56.write_done;
    }
    group upd147<"static"=1> {
      __j14.write_en = 1'd1;
      add138.left = __j14.out;
      add138.right = const365.out;
      __j14.in = add138.out;
      upd147[done] = __j14.done;
    }
    group upd148<"static"=1> {
      __i15.write_en = 1'd1;
      add139.left = __i15.out;
      add139.right = const366.out;
      __i15.in = add139.out;
      upd148[done] = __i15.done;
    }
  }
  control {
    seq {
      @pos(200) let224;
      @bound(1) while le104.out with cond117 {
        seq {
          @pos(201) let225;
          @bound(1000) while le105.out with cond118 {
            seq {
              par {
                @pos(202) let226;
                @pos(203) let227;
              }
              @pos(204) upd146;
              @pos(201) upd147;
            }
          }
          @pos(200) upd148;
        }
      }
    }
  }
}
component relu_1x384x12x12() -> () {
  cells {
    ref x_29 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    ref x_30 = seq_mem_d4(32,1,384,12,12,1,9,4,4);
    __i16 = std_reg(1);
    __j15 = std_reg(9);
    __k16 = std_reg(4);
    __l7 = std_reg(4);
    add140 = std_add(4);
    add141 = std_add(4);
    add142 = std_add(9);
    add143 = std_add(1);
    const367 = std_const(1,0);
    const368 = std_const(1,0);
    const369 = std_const(9,0);
    const370 = std_const(9,383);
    const371 = std_const(4,0);
    const372 = std_const(4,11);
    const373 = std_const(4,0);
    const374 = std_const(4,11);
    const375 = std_const(4,1);
    const376 = std_const(4,1);
    const377 = std_const(9,1);
    const378 = std_const(1,1);
    fp_const22 = std_const(32,0);
    fp_const23 = std_const(32,0);
    gt8 = std_fp_sgt(32,16,16);
    le106 = std_le(1);
    le107 = std_le(9);
    le108 = std_le(4);
    le109 = std_le(4);
    x_29_read0_0 = std_reg(32);
    x_29_read1_0 = std_reg(32);
  }
  wires {
    comb group cond119 {
      le106.left = __i16.out;
      le106.right = const368.out;
    }
    comb group cond120 {
      le107.left = __j15.out;
      le107.right = const370.out;
    }
    comb group cond121 {
      le108.left = __k16.out;
      le108.right = const372.out;
    }
    comb group cond122 {
      le109.left = __l7.out;
      le109.right = const374.out;
    }
    comb group cond123 {
      gt8.left = x_29_read0_0.out;
      gt8.right = fp_const22.out;
    }
    group let228<"static"=1> {
      __i16.in = const367.out;
      __i16.write_en = 1'd1;
      let228[done] = __i16.done;
    }
    group let229<"static"=1> {
      __j15.in = const369.out;
      __j15.write_en = 1'd1;
      let229[done] = __j15.done;
    }
    group let230<"static"=1> {
      __k16.in = const371.out;
      __k16.write_en = 1'd1;
      let230[done] = __k16.done;
    }
    group let231<"static"=1> {
      __l7.in = const373.out;
      __l7.write_en = 1'd1;
      let231[done] = __l7.done;
    }
    group let232<"static"=2> {
      x_29_read0_0.in = x_29.read_data;
      x_29_read0_0.write_en = x_29.read_done;
      let232[done] = x_29_read0_0.done;
      x_29.addr3 = __l7.out;
      x_29.addr2 = __k16.out;
      x_29.addr1 = __j15.out;
      x_29.addr0 = __i16.out;
      x_29.read_en = 1'd1;
    }
    group let233<"static"=2> {
      x_29_read1_0.in = x_29.read_data;
      x_29_read1_0.write_en = x_29.read_done;
      let233[done] = x_29_read1_0.done;
      x_29.addr3 = __l7.out;
      x_29.addr2 = __k16.out;
      x_29.addr1 = __j15.out;
      x_29.addr0 = __i16.out;
      x_29.read_en = 1'd1;
    }
    group upd149<"static"=1> {
      x_30.addr3 = __l7.out;
      x_30.addr2 = __k16.out;
      x_30.addr1 = __j15.out;
      x_30.addr0 = __i16.out;
      x_30.write_en = 1'd1;
      x_30.write_data = x_29_read1_0.out;
      upd149[done] = x_30.write_done;
    }
    group upd150<"static"=1> {
      x_30.addr3 = __l7.out;
      x_30.addr2 = __k16.out;
      x_30.addr1 = __j15.out;
      x_30.addr0 = __i16.out;
      x_30.write_en = 1'd1;
      x_30.write_data = fp_const23.out;
      upd150[done] = x_30.write_done;
    }
    group upd151<"static"=1> {
      __l7.write_en = 1'd1;
      add140.left = __l7.out;
      add140.right = const375.out;
      __l7.in = add140.out;
      upd151[done] = __l7.done;
    }
    group upd152<"static"=1> {
      __k16.write_en = 1'd1;
      add141.left = __k16.out;
      add141.right = const376.out;
      __k16.in = add141.out;
      upd152[done] = __k16.done;
    }
    group upd153<"static"=1> {
      __j15.write_en = 1'd1;
      add142.left = __j15.out;
      add142.right = const377.out;
      __j15.in = add142.out;
      upd153[done] = __j15.done;
    }
    group upd154<"static"=1> {
      __i16.write_en = 1'd1;
      add143.left = __i16.out;
      add143.right = const378.out;
      __i16.in = add143.out;
      upd154[done] = __i16.done;
    }
  }
  control {
    seq {
      @pos(205) let228;
      @bound(1) while le106.out with cond119 {
        seq {
          @pos(206) let229;
          @bound(384) while le107.out with cond120 {
            seq {
              @pos(207) let230;
              @bound(12) while le108.out with cond121 {
                seq {
                  @pos(208) let231;
                  @bound(12) while le109.out with cond122 {
                    seq {
                      @pos(209) let232;
                      if gt8.out with cond123 {
                        seq {
                          @pos(210) let233;
                          @pos(211) upd149;
                        }
                      } else {
                        @pos(212) upd150;
                      }
                      @pos(208) upd151;
                    }
                  }
                  @pos(207) upd152;
                }
              }
              @pos(206) upd153;
            }
          }
          @pos(205) upd154;
        }
      }
    }
  }
}
component lrn_1x256x26x26() -> () {
  cells {
    ref x_23 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    ref x_24 = seq_mem_d4(32,1,256,26,26,1,9,5,5);
    __c9 = std_reg(32);
    __c_index_1 = std_reg(32);
    __divisor_1 = std_reg(32);
    __h1 = std_reg(32);
    __i17 = std_reg(32);
    __n4 = std_reg(32);
    __sum_6 = std_reg(32);
    __w1 = std_reg(32);
    add144 = std_add(32);
    add145 = std_fp_sadd(32,16,16);
    add146 = std_add(32);
    add147 = std_fp_sadd(32,16,16);
    add148 = std_add(32);
    add149 = std_add(32);
    add150 = std_add(32);
    add151 = std_add(32);
    and13 = std_and(1);
    bin_read11_0 = std_reg(32);
    bin_read12_0 = std_reg(32);
    bin_read13_0 = std_reg(32);
    const379 = std_const(32,0);
    const380 = std_const(32,0);
    const381 = std_const(32,0);
    const382 = std_const(32,255);
    const383 = std_const(32,0);
    const384 = std_const(32,25);
    const385 = std_const(32,0);
    const386 = std_const(32,25);
    const387 = std_const(32,0);
    const388 = std_const(32,3);
    const389 = std_const(32,4);
    const390 = std_const(32,2);
    const391 = std_const(32,0);
    const392 = std_const(32,256);
    const393 = std_const(32,1);
    const394 = std_const(32,1);
    const395 = std_const(32,1);
    const396 = std_const(32,1);
    const397 = std_const(32,1);
    div_pipe3 = std_div_pipe(32);
    div_pipe4 = std_fp_sdiv_pipe(32,16,16);
    fp_const24 = std_const(32,0);
    fp_const25 = std_const(32,7);
    fp_const26 = std_const(32,65536);
    fp_const27 = std_const(32,49152);
    fp_pow_full1 = fp_pow_full();
    ge9 = std_ge(32);
    le110 = std_le(32);
    le111 = std_le(32);
    le112 = std_le(32);
    le113 = std_le(32);
    le114 = std_le(32);
    lt9 = std_lt(32);
    mult_pipe25 = std_fp_smult_pipe(32,16,16);
    slice108 = std_slice(32,1);
    slice109 = std_slice(32,9);
    slice110 = std_slice(32,5);
    slice111 = std_slice(32,5);
    slice112 = std_slice(32,1);
    slice113 = std_slice(32,9);
    slice114 = std_slice(32,5);
    slice115 = std_slice(32,5);
    slice116 = std_slice(32,1);
    slice117 = std_slice(32,9);
    slice118 = std_slice(32,5);
    slice119 = std_slice(32,5);
    sub11 = std_sub(32);
    x_23_read0_0 = std_reg(32);
    x_23_read1_0 = std_reg(32);
  }
  wires {
    comb group cond124 {
      le110.left = __n4.out;
      le110.right = const380.out;
    }
    comb group cond125 {
      le111.left = __c9.out;
      le111.right = const382.out;
    }
    comb group cond126 {
      le112.left = __h1.out;
      le112.right = const384.out;
    }
    comb group cond127 {
      le113.left = __w1.out;
      le113.right = const386.out;
    }
    comb group cond128 {
      le114.left = __i17.out;
      le114.right = const388.out;
    }
    comb group cond129 {
      and13.left = ge9.out;
      and13.right = lt9.out;
      ge9.left = __c_index_1.out;
      ge9.right = const391.out;
      lt9.left = __c_index_1.out;
      lt9.right = const392.out;
    }
    group let234<"static"=1> {
      __n4.in = const379.out;
      __n4.write_en = 1'd1;
      let234[done] = __n4.done;
    }
    group let235<"static"=1> {
      __c9.in = const381.out;
      __c9.write_en = 1'd1;
      let235[done] = __c9.done;
    }
    group let236<"static"=1> {
      __h1.in = const383.out;
      __h1.write_en = 1'd1;
      let236[done] = __h1.done;
    }
    group let237<"static"=1> {
      __w1.in = const385.out;
      __w1.write_en = 1'd1;
      let237[done] = __w1.done;
    }
    group let238<"static"=1> {
      __sum_6.in = fp_const24.out;
      __sum_6.write_en = 1'd1;
      let238[done] = __sum_6.done;
    }
    group let239<"static"=1> {
      __i17.in = const387.out;
      __i17.write_en = 1'd1;
      let239[done] = __i17.done;
    }
    group let240 {
      bin_read11_0.in = div_pipe3.out_quotient;
      bin_read11_0.write_en = div_pipe3.done;
      let240[done] = bin_read11_0.done;
      div_pipe3.left = const389.out;
      div_pipe3.right = const390.out;
      div_pipe3.go = !div_pipe3.done ? 1'd1;
    }
    group let241<"static"=1> {
      __c_index_1.in = add144.out;
      __c_index_1.write_en = 1'd1;
      let241[done] = __c_index_1.done;
      add144.left = sub11.out;
      add144.right = __i17.out;
      sub11.left = __c9.out;
      sub11.right = bin_read11_0.out;
    }
    group let242<"static"=2> {
      x_23_read0_0.in = x_23.read_data;
      x_23_read0_0.write_en = x_23.read_done;
      let242[done] = x_23_read0_0.done;
      x_23.addr3 = slice111.out;
      slice111.in = __w1.out;
      x_23.addr2 = slice110.out;
      slice110.in = __h1.out;
      x_23.addr1 = slice109.out;
      slice109.in = __c_index_1.out;
      x_23.addr0 = slice108.out;
      slice108.in = __n4.out;
      x_23.read_en = 1'd1;
    }
    group let243<"static"=4> {
      bin_read12_0.in = mult_pipe25.out;
      bin_read12_0.write_en = mult_pipe25.done;
      let243[done] = bin_read12_0.done;
      mult_pipe25.left = fp_const25.out;
      mult_pipe25.right = __sum_6.out;
      mult_pipe25.go = !mult_pipe25.done ? 1'd1;
    }
    group let244 {
      __divisor_1.in = fp_pow_full1.out;
      __divisor_1.write_en = 1'd1;
      let244[done] = __divisor_1.done;
    }
    group let245<"static"=2> {
      x_23_read1_0.in = x_23.read_data;
      x_23_read1_0.write_en = x_23.read_done;
      let245[done] = x_23_read1_0.done;
      x_23.addr3 = slice115.out;
      slice115.in = __w1.out;
      x_23.addr2 = slice114.out;
      slice114.in = __h1.out;
      x_23.addr1 = slice113.out;
      slice113.in = __c9.out;
      x_23.addr0 = slice112.out;
      slice112.in = __n4.out;
      x_23.read_en = 1'd1;
    }
    group let246 {
      bin_read13_0.in = div_pipe4.out_quotient;
      bin_read13_0.write_en = div_pipe4.done;
      let246[done] = bin_read13_0.done;
      div_pipe4.left = x_23_read1_0.out;
      div_pipe4.right = __divisor_1.out;
      div_pipe4.go = !div_pipe4.done ? 1'd1;
    }
    group upd155<"static"=1> {
      __sum_6.write_en = 1'd1;
      add145.left = __sum_6.out;
      add145.right = x_23_read0_0.out;
      __sum_6.in = add145.out;
      upd155[done] = __sum_6.done;
    }
    group upd156<"static"=1> {
      __i17.write_en = 1'd1;
      add146.left = __i17.out;
      add146.right = const393.out;
      __i17.in = add146.out;
      upd156[done] = __i17.done;
    }
    group upd157<"static"=1> {
      x_24.addr3 = slice119.out;
      slice119.in = __w1.out;
      x_24.addr2 = slice118.out;
      slice118.in = __h1.out;
      x_24.addr1 = slice117.out;
      slice117.in = __c9.out;
      x_24.addr0 = slice116.out;
      slice116.in = __n4.out;
      x_24.write_en = 1'd1;
      x_24.write_data = bin_read13_0.out;
      upd157[done] = x_24.write_done;
    }
    group upd158<"static"=1> {
      __w1.write_en = 1'd1;
      add148.left = __w1.out;
      add148.right = const394.out;
      __w1.in = add148.out;
      upd158[done] = __w1.done;
    }
    group upd159<"static"=1> {
      __h1.write_en = 1'd1;
      add149.left = __h1.out;
      add149.right = const395.out;
      __h1.in = add149.out;
      upd159[done] = __h1.done;
    }
    group upd160<"static"=1> {
      __c9.write_en = 1'd1;
      add150.left = __c9.out;
      add150.right = const396.out;
      __c9.in = add150.out;
      upd160[done] = __c9.done;
    }
    group upd161<"static"=1> {
      __n4.write_en = 1'd1;
      add151.left = __n4.out;
      add151.right = const397.out;
      __n4.in = add151.out;
      upd161[done] = __n4.done;
    }
    add147.right = bin_read12_0.out;
    add147.left = fp_const26.out;
  }
  control {
    seq {
      @pos(213) let234;
      @bound(1) while le110.out with cond124 {
        seq {
          @pos(214) let235;
          @bound(256) while le111.out with cond125 {
            seq {
              @pos(215) let236;
              @bound(26) while le112.out with cond126 {
                seq {
                  @pos(216) let237;
                  @bound(26) while le113.out with cond127 {
                    seq {
                      @pos(217) let238;
                      @pos(218) let239;
                      @bound(4) while le114.out with cond128 {
                        seq {
                          let240;
                          let241;
                          if and13.out with cond129 {
                            seq {
                              @pos(219) let242;
                              @pos(220) upd155;
                            }
                          }
                          @pos(218) upd156;
                        }
                      }
                      par {
                        seq {
                          let243;
                          invoke fp_pow_full1(base=add147.out, exp_value=fp_const27.out)();
                          let244;
                        }
                        @pos(221) let245;
                      }
                      let246;
                      upd157;
                      @pos(216) upd158;
                    }
                  }
                  @pos(215) upd159;
                }
              }
              @pos(214) upd160;
            }
          }
          @pos(213) upd161;
        }
      }
    }
  }
}
component bias_add_1x256x12x12() -> () {
  cells {
    ref x_37 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    ref x_38 = seq_mem_d1(32,256,9);
    ref x_39 = seq_mem_d4(32,1,256,12,12,1,9,4,4);
    __i18 = std_reg(1);
    __j16 = std_reg(9);
    __k17 = std_reg(4);
    __l8 = std_reg(4);
    add152 = std_fp_sadd(32,16,16);
    add153 = std_add(4);
    add154 = std_add(4);
    add155 = std_add(9);
    add156 = std_add(1);
    const398 = std_const(1,0);
    const399 = std_const(1,0);
    const400 = std_const(9,0);
    const401 = std_const(9,255);
    const402 = std_const(4,0);
    const403 = std_const(4,11);
    const404 = std_const(4,0);
    const405 = std_const(4,11);
    const406 = std_const(4,1);
    const407 = std_const(4,1);
    const408 = std_const(9,1);
    const409 = std_const(1,1);
    le115 = std_le(1);
    le116 = std_le(9);
    le117 = std_le(4);
    le118 = std_le(4);
    x_37_read0_0 = std_reg(32);
    x_38_read0_0 = std_reg(32);
  }
  wires {
    comb group cond130 {
      le115.left = __i18.out;
      le115.right = const399.out;
    }
    comb group cond131 {
      le116.left = __j16.out;
      le116.right = const401.out;
    }
    comb group cond132 {
      le117.left = __k17.out;
      le117.right = const403.out;
    }
    comb group cond133 {
      le118.left = __l8.out;
      le118.right = const405.out;
    }
    group let247<"static"=1> {
      __i18.in = const398.out;
      __i18.write_en = 1'd1;
      let247[done] = __i18.done;
    }
    group let248<"static"=1> {
      __j16.in = const400.out;
      __j16.write_en = 1'd1;
      let248[done] = __j16.done;
    }
    group let249<"static"=1> {
      __k17.in = const402.out;
      __k17.write_en = 1'd1;
      let249[done] = __k17.done;
    }
    group let250<"static"=1> {
      __l8.in = const404.out;
      __l8.write_en = 1'd1;
      let250[done] = __l8.done;
    }
    group let251<"static"=2> {
      x_37_read0_0.in = x_37.read_data;
      x_37_read0_0.write_en = x_37.read_done;
      let251[done] = x_37_read0_0.done;
      x_37.addr3 = __l8.out;
      x_37.addr2 = __k17.out;
      x_37.addr1 = __j16.out;
      x_37.addr0 = __i18.out;
      x_37.read_en = 1'd1;
    }
    group let252<"static"=2> {
      x_38_read0_0.in = x_38.read_data;
      x_38_read0_0.write_en = x_38.read_done;
      let252[done] = x_38_read0_0.done;
      x_38.addr0 = __j16.out;
      x_38.read_en = 1'd1;
    }
    group upd162<"static"=1> {
      x_39.addr3 = __l8.out;
      x_39.addr2 = __k17.out;
      x_39.addr1 = __j16.out;
      x_39.addr0 = __i18.out;
      x_39.write_en = 1'd1;
      add152.left = x_37_read0_0.out;
      add152.right = x_38_read0_0.out;
      x_39.write_data = add152.out;
      upd162[done] = x_39.write_done;
    }
    group upd163<"static"=1> {
      __l8.write_en = 1'd1;
      add153.left = __l8.out;
      add153.right = const406.out;
      __l8.in = add153.out;
      upd163[done] = __l8.done;
    }
    group upd164<"static"=1> {
      __k17.write_en = 1'd1;
      add154.left = __k17.out;
      add154.right = const407.out;
      __k17.in = add154.out;
      upd164[done] = __k17.done;
    }
    group upd165<"static"=1> {
      __j16.write_en = 1'd1;
      add155.left = __j16.out;
      add155.right = const408.out;
      __j16.in = add155.out;
      upd165[done] = __j16.done;
    }
    group upd166<"static"=1> {
      __i18.write_en = 1'd1;
      add156.left = __i18.out;
      add156.right = const409.out;
      __i18.in = add156.out;
      upd166[done] = __i18.done;
    }
  }
  control {
    seq {
      @pos(222) let247;
      @bound(1) while le115.out with cond130 {
        seq {
          @pos(223) let248;
          @bound(256) while le116.out with cond131 {
            seq {
              @pos(224) let249;
              @bound(12) while le117.out with cond132 {
                seq {
                  @pos(225) let250;
                  @bound(12) while le118.out with cond133 {
                    seq {
                      par {
                        @pos(226) let251;
                        @pos(227) let252;
                      }
                      @pos(228) upd162;
                      @pos(225) upd163;
                    }
                  }
                  @pos(224) upd164;
                }
              }
              @pos(223) upd165;
            }
          }
          @pos(222) upd166;
        }
      }
    }
  }
}
component exp(x: 32) -> (out: 32) {
  cells {
    exponent_value = std_reg(32);
    int_x = std_reg(32);
    frac_x = std_reg(32);
    m = std_reg(32);
    and0 = std_and(32);
    and1 = std_and(32);
    rsh = std_rsh(32);
    lt = std_slt(32);
    c2 = std_const(32, 2);
    c3 = std_const(32, 3);
    c4 = std_const(32, 4);
    c5 = std_const(32, 5);
    c6 = std_const(32, 6);
    c7 = std_const(32, 7);
    c8 = std_const(32, 8);
    one = std_const(32, 65536);
    e = std_const(32, 178145);
    negative_one = std_const(32, 4294901760);
    product2 = std_reg(32);
    product3 = std_reg(32);
    product4 = std_reg(32);
    product5 = std_reg(32);
    product6 = std_reg(32);
    product7 = std_reg(32);
    product8 = std_reg(32);
    p2 = std_reg(32);
    p3 = std_reg(32);
    p4 = std_reg(32);
    p5 = std_reg(32);
    p6 = std_reg(32);
    p7 = std_reg(32);
    p8 = std_reg(32);
    sum1 = std_reg(32);
    sum2 = std_reg(32);
    sum3 = std_reg(32);
    sum4 = std_reg(32);
    add1 = std_fp_sadd(32, 16, 16);
    add2 = std_fp_sadd(32, 16, 16);
    add3 = std_fp_sadd(32, 16, 16);
    add4 = std_fp_sadd(32, 16, 16);
    mult_pipe1 = std_fp_smult_pipe(32, 16, 16);
    mult_pipe2 = std_fp_smult_pipe(32, 16, 16);
    mult_pipe3 = std_fp_smult_pipe(32, 16, 16);
    mult_pipe4 = std_fp_smult_pipe(32, 16, 16);
    mult_pipe5 = std_fp_smult_pipe(32, 16, 16);
    mult_pipe6 = std_fp_smult_pipe(32, 16, 16);
    mult_pipe7 = std_fp_smult_pipe(32, 16, 16);
    mult_pipe8 = std_fp_smult_pipe(32, 16, 16);
    div_pipe = std_fp_sdiv_pipe(32, 16, 16);
    reciprocal_factorial2 = std_const(32, 32768);
    reciprocal_factorial3 = std_const(32, 10923);
    reciprocal_factorial4 = std_const(32, 2731);
    reciprocal_factorial5 = std_const(32, 546);
    reciprocal_factorial6 = std_const(32, 91);
    reciprocal_factorial7 = std_const(32, 13);
    reciprocal_factorial8 = std_const(32, 2);
    pow1 = fp_pow();
    pow2 = fp_pow();
    pow3 = fp_pow();
    pow4 = fp_pow();
    pow5 = fp_pow();
    pow6 = fp_pow();
    pow7 = fp_pow();
    pow8 = fp_pow();
  }
  wires {
    group init<"static"=1> {
      exponent_value.write_en = 1'd1;
      exponent_value.in = x;
      init[done] = exponent_value.done;
    }
    group split_bits {
      and0.left = exponent_value.out;
      and0.right = 32'd4294901760;
      rsh.left = and0.out;
      rsh.right = 32'd16;
      and1.left = exponent_value.out;
      and1.right = 32'd65535;
      int_x.write_en = 1'd1;
      frac_x.write_en = 1'd1;
      int_x.in = rsh.out;
      frac_x.in = and1.out;
      split_bits[done] = int_x.done & frac_x.done ? 1'd1;
    }
    group negate {
      mult_pipe1.left = exponent_value.out;
      mult_pipe1.right = negative_one.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
      exponent_value.write_en = mult_pipe1.done;
      exponent_value.in = mult_pipe1.out;
      negate[done] = exponent_value.done;
    }
    comb group is_negative {
      lt.left = x;
      lt.right = 32'd0;
    }
    group reciprocal {
      div_pipe.left = one.out;
      div_pipe.right = m.out;
      div_pipe.go = !div_pipe.done ? 1'd1;
      m.write_en = div_pipe.done;
      m.in = div_pipe.out_quotient;
      reciprocal[done] = m.done;
    }
    group consume_pow2<"static"=1> {
      p2.write_en = 1'd1;
      p2.in = pow2.out;
      consume_pow2[done] = p2.done ? 1'd1;
    }
    group consume_pow3<"static"=1> {
      p3.write_en = 1'd1;
      p3.in = pow3.out;
      consume_pow3[done] = p3.done ? 1'd1;
    }
    group consume_pow4<"static"=1> {
      p4.write_en = 1'd1;
      p4.in = pow4.out;
      consume_pow4[done] = p4.done ? 1'd1;
    }
    group consume_pow5<"static"=1> {
      p5.write_en = 1'd1;
      p5.in = pow5.out;
      consume_pow5[done] = p5.done ? 1'd1;
    }
    group consume_pow6<"static"=1> {
      p6.write_en = 1'd1;
      p6.in = pow6.out;
      consume_pow6[done] = p6.done ? 1'd1;
    }
    group consume_pow7<"static"=1> {
      p7.write_en = 1'd1;
      p7.in = pow7.out;
      consume_pow7[done] = p7.done ? 1'd1;
    }
    group consume_pow8<"static"=1> {
      p8.write_en = 1'd1;
      p8.in = pow8.out;
      consume_pow8[done] = p8.done ? 1'd1;
    }
    group mult_by_reciprocal_factorial2 {
      mult_pipe2.left = p2.out;
      mult_pipe2.right = reciprocal_factorial2.out;
      mult_pipe2.go = !mult_pipe2.done ? 1'd1;
      product2.write_en = mult_pipe2.done;
      product2.in = mult_pipe2.out;
      mult_by_reciprocal_factorial2[done] = product2.done;
    }
    group mult_by_reciprocal_factorial3 {
      mult_pipe3.left = p3.out;
      mult_pipe3.right = reciprocal_factorial3.out;
      mult_pipe3.go = !mult_pipe3.done ? 1'd1;
      product3.write_en = mult_pipe3.done;
      product3.in = mult_pipe3.out;
      mult_by_reciprocal_factorial3[done] = product3.done;
    }
    group mult_by_reciprocal_factorial4 {
      mult_pipe4.left = p4.out;
      mult_pipe4.right = reciprocal_factorial4.out;
      mult_pipe4.go = !mult_pipe4.done ? 1'd1;
      product4.write_en = mult_pipe4.done;
      product4.in = mult_pipe4.out;
      mult_by_reciprocal_factorial4[done] = product4.done;
    }
    group mult_by_reciprocal_factorial5 {
      mult_pipe5.left = p5.out;
      mult_pipe5.right = reciprocal_factorial5.out;
      mult_pipe5.go = !mult_pipe5.done ? 1'd1;
      product5.write_en = mult_pipe5.done;
      product5.in = mult_pipe5.out;
      mult_by_reciprocal_factorial5[done] = product5.done;
    }
    group mult_by_reciprocal_factorial6 {
      mult_pipe6.left = p6.out;
      mult_pipe6.right = reciprocal_factorial6.out;
      mult_pipe6.go = !mult_pipe6.done ? 1'd1;
      product6.write_en = mult_pipe6.done;
      product6.in = mult_pipe6.out;
      mult_by_reciprocal_factorial6[done] = product6.done;
    }
    group mult_by_reciprocal_factorial7 {
      mult_pipe7.left = p7.out;
      mult_pipe7.right = reciprocal_factorial7.out;
      mult_pipe7.go = !mult_pipe7.done ? 1'd1;
      product7.write_en = mult_pipe7.done;
      product7.in = mult_pipe7.out;
      mult_by_reciprocal_factorial7[done] = product7.done;
    }
    group mult_by_reciprocal_factorial8 {
      mult_pipe8.left = p8.out;
      mult_pipe8.right = reciprocal_factorial8.out;
      mult_pipe8.go = !mult_pipe8.done ? 1'd1;
      product8.write_en = mult_pipe8.done;
      product8.in = mult_pipe8.out;
      mult_by_reciprocal_factorial8[done] = product8.done;
    }
    group sum_round1_1<"static"=1> {
      add1.left = frac_x.out;
      add1.right = product2.out;
      sum1.write_en = 1'd1;
      sum1.in = add1.out;
      sum_round1_1[done] = sum1.done;
    }
    group sum_round1_2<"static"=1> {
      add2.left = product3.out;
      add2.right = product4.out;
      sum2.write_en = 1'd1;
      sum2.in = add2.out;
      sum_round1_2[done] = sum2.done;
    }
    group sum_round1_3<"static"=1> {
      add3.left = product5.out;
      add3.right = product6.out;
      sum3.write_en = 1'd1;
      sum3.in = add3.out;
      sum_round1_3[done] = sum3.done;
    }
    group sum_round1_4<"static"=1> {
      add4.left = product7.out;
      add4.right = product8.out;
      sum4.write_en = 1'd1;
      sum4.in = add4.out;
      sum_round1_4[done] = sum4.done;
    }
    group sum_round2_1<"static"=1> {
      add1.left = sum1.out;
      add1.right = sum2.out;
      sum1.write_en = 1'd1;
      sum1.in = add1.out;
      sum_round2_1[done] = sum1.done;
    }
    group sum_round2_2<"static"=1> {
      add2.left = sum3.out;
      add2.right = sum4.out;
      sum2.write_en = 1'd1;
      sum2.in = add2.out;
      sum_round2_2[done] = sum2.done;
    }
    group sum_round3_1<"static"=1> {
      add1.left = sum1.out;
      add1.right = sum2.out;
      sum1.write_en = 1'd1;
      sum1.in = add1.out;
      sum_round3_1[done] = sum1.done;
    }
    group add_degree_zero<"static"=1> {
      add1.left = sum1.out;
      add1.right = one.out;
      sum1.write_en = 1'd1;
      sum1.in = add1.out;
      add_degree_zero[done] = sum1.done;
    }
    group final_multiply {
      mult_pipe1.left = pow1.out;
      mult_pipe1.right = sum1.out;
      mult_pipe1.go = !mult_pipe1.done ? 1'd1;
      m.write_en = mult_pipe1.done;
      m.in = mult_pipe1.out;
      final_multiply[done] = m.done;
    }
    out = m.out;
  }
  control {
    seq {
      init;
      if lt.out with is_negative {
        negate;
      }
      split_bits;
      par {
        invoke pow1(base=e.out, integer_exp=int_x.out)();
        invoke pow2(base=frac_x.out, integer_exp=c2.out)();
        invoke pow3(base=frac_x.out, integer_exp=c3.out)();
        invoke pow4(base=frac_x.out, integer_exp=c4.out)();
        invoke pow5(base=frac_x.out, integer_exp=c5.out)();
        invoke pow6(base=frac_x.out, integer_exp=c6.out)();
        invoke pow7(base=frac_x.out, integer_exp=c7.out)();
        invoke pow8(base=frac_x.out, integer_exp=c8.out)();
      }
      par {
        consume_pow2;
        consume_pow3;
        consume_pow4;
        consume_pow5;
        consume_pow6;
        consume_pow7;
        consume_pow8;
      }
      par {
        mult_by_reciprocal_factorial2;
        mult_by_reciprocal_factorial3;
        mult_by_reciprocal_factorial4;
        mult_by_reciprocal_factorial5;
        mult_by_reciprocal_factorial6;
        mult_by_reciprocal_factorial7;
        mult_by_reciprocal_factorial8;
      }
      par {
        sum_round1_1;
        sum_round1_2;
        sum_round1_3;
        sum_round1_4;
      }
      par {
        sum_round2_1;
        sum_round2_2;
      }
      par {
        sum_round3_1;
      }
      add_degree_zero;
      final_multiply;
      if lt.out with is_negative {
        reciprocal;
      }
    }
  }
}
component fp_pow(base: 32, integer_exp: 32) -> (out: 32) {
  cells {
    pow = std_reg(32);
    count = std_reg(32);
    mul = std_fp_smult_pipe(32, 16, 16);
    lt = std_slt(32);
    incr = std_sadd(32);
  }
  wires {
    group init {
      pow.in = 32'd65536;
      pow.write_en = 1'd1;
      count.in = 32'd0;
      count.write_en = 1'd1;
      init[done] = pow.done & count.done ? 1'd1;
    }
    group execute_mul {
      mul.left = base;
      mul.right = pow.out;
      mul.go = !mul.done ? 1'd1;
      pow.write_en = mul.done;
      pow.in = mul.out;
      execute_mul[done] = pow.done;
    }
    group incr_count {
      incr.left = 32'd1;
      incr.right = count.out;
      count.in = incr.out;
      count.write_en = 1'd1;
      incr_count[done] = count.done;
    }
    comb group cond {
      lt.left = count.out;
      lt.right = integer_exp;
    }
    out = pow.out;
  }
  control {
    seq {
      init;
      while lt.out with cond {
        par {
          execute_mul;
          incr_count;
        }
      }
    }
  }
}
component ln_pade_approx(x: 32) -> (out: 32) {
  cells {
    n1 = std_const(32, 223181);
    n2 = std_const(32, 159435);
    n3 = std_const(32, 382573);
    d2 = std_const(32, 393216);
    d3 = std_const(32, 147456);
    mult_pipe = std_fp_smult_pipe(32, 16, 16);
    n_mult_pipe1 = std_fp_smult_pipe(32, 16, 16);
    n_mult_pipe2 = std_fp_smult_pipe(32, 16, 16);
    d_mult_pipe1 = std_fp_smult_pipe(32, 16, 16);
    d_mult_pipe2 = std_fp_smult_pipe(32, 16, 16);
    div_pipe = std_fp_sdiv_pipe(32, 16, 16);
    add1 = std_fp_sadd(32, 16, 16);
    add2 = std_fp_sadd(32, 16, 16);
    add3 = std_fp_sadd(32, 16, 16);
    sub1 = std_fp_ssub(32, 16, 16);
    num_reg = std_reg(32);
    den_reg = std_reg(32);
    res_reg = std_reg(32);
    x_reg = std_reg(32);
    x_sq_reg = std_reg(32);
  }
  wires {
    group get_x_sq {
      mult_pipe.go = 1'd1;
      mult_pipe.left = x_reg.out;
      mult_pipe.right = x_reg.out;
      get_x_sq[done] = mult_pipe.done;
    }
    group num_term1 {
      n_mult_pipe1.go = 1'd1;
      n_mult_pipe1.left = n1.out;
      n_mult_pipe1.right = mult_pipe.out;
      num_term1[done] = n_mult_pipe1.done;
    }
    group num_term2 {
      n_mult_pipe2.go = 1'd1;
      n_mult_pipe2.left = n2.out;
      n_mult_pipe2.right = x_reg.out;
      num_term2[done] = n_mult_pipe2.done;
    }
    group den_term2 {
      d_mult_pipe2.go = 1'd1;
      d_mult_pipe2.left = d2.out;
      d_mult_pipe2.right = x_reg.out;
      den_term2[done] = d_mult_pipe2.done;
    }
    group write_x_to_reg {
      x_reg.write_en = 1'd1;
      x_reg.in = x;
      write_x_to_reg[done] = x_reg.done;
    }
    group get_numerator {
      add1.left = n_mult_pipe1.out;
      add1.right = n_mult_pipe2.out;
      sub1.left = add1.out;
      sub1.right = n3.out;
      num_reg.in = sub1.out;
      num_reg.write_en = 1'd1;
      get_numerator[done] = num_reg.done;
    }
    group get_denominator {
      add2.left = mult_pipe.out;
      add2.right = d_mult_pipe2.out;
      add3.left = add2.out;
      add3.right = d3.out;
      den_reg.in = add3.out;
      den_reg.write_en = 1'd1;
      get_denominator[done] = den_reg.done;
    }
    group get_res {
      res_reg.write_en = 1'd1;
      res_reg.in = div_pipe.out_quotient;
      get_res[done] = res_reg.done;
    }
    out = res_reg.out;
  }
  control {
    seq {
      write_x_to_reg;
      get_x_sq;
      par {
        num_term1;
        num_term2;
        den_term2;
      }
      par {
        get_numerator;
        get_denominator;
      }
      invoke div_pipe(left=num_reg.out, right=den_reg.out)();
      get_res;
    }
  }
}
component msb_calc(in: 32) -> (count: 32, value: 32) {
  cells {
    rsh = std_rsh(32);
    counter = std_reg(32);
    cur_val = std_reg(32);
    add = std_add(32);
    sub = std_sub(32);
    neq = std_neq(32);
    lsh = std_lsh(32);
    count_ans = std_reg(32);
    val_ans = std_reg(32);
    val_build = std_reg(32);
  }
  wires {
    group wr_cur_val {
      rsh.left = in;
      rsh.right = 32'd16;
      cur_val.in = rsh.out;
      cur_val.write_en = 1'd1;
      wr_cur_val[done] = cur_val.done;
    }
    group wr_val_build {
      val_build.in = 32'd1;
      val_build.write_en = 1'd1;
      wr_val_build[done] = val_build.done;
    }
    comb group cur_val_cond {
      neq.left = 32'd0;
      neq.right = cur_val.out;
    }
    comb group count_cond {
      neq.left = 32'd0;
      neq.right = counter.out;
    }
    group incr_count {
      add.left = counter.out;
      add.right = 32'd1;
      counter.in = add.out;
      counter.write_en = 1'd1;
      incr_count[done] = counter.done;
    }
    group shift_cur_val {
      rsh.left = cur_val.out;
      rsh.right = 32'd1;
      cur_val.in = rsh.out;
      cur_val.write_en = 1'd1;
      shift_cur_val[done] = cur_val.done;
    }
    group shift_val_build {
      lsh.left = val_build.out;
      lsh.right = 32'd1;
      val_build.in = lsh.out;
      val_build.write_en = 1'd1;
      shift_val_build[done] = val_build.done;
    }
    group decr_count {
      sub.left = counter.out;
      sub.right = 32'd1;
      counter.in = sub.out;
      counter.write_en = 1'd1;
      decr_count[done] = counter.done;
    }
    group wr_count {
      lsh.left = counter.out;
      lsh.right = 32'd16;
      count_ans.in = lsh.out;
      count_ans.write_en = 1'd1;
      wr_count[done] = count_ans.done;
    }
    group wr_val {
      lsh.left = val_build.out;
      lsh.right = 32'd16;
      val_ans.in = lsh.out;
      val_ans.write_en = 1'd1;
      wr_val[done] = val_ans.done;
    }
    count = count_ans.out;
    value = val_ans.out;
  }
  control {
    seq {
      wr_cur_val;
      while neq.out with cur_val_cond {
        seq {
          incr_count;
          shift_cur_val;
        }
      }
      decr_count;
      wr_count;
      wr_val_build;
      while neq.out with count_cond {
        seq {
          decr_count;
          shift_val_build;
        }
      }
      wr_val;
    }
  }
}
component ln(x: 32) -> (out: 32) {
  cells {
    and1 = std_and(32);
    n = std_reg(32);
    div_pipe = std_fp_sdiv_pipe(32, 16, 16);
    mult_pipe = std_fp_smult_pipe(32, 16, 16);
    ln_2 = std_const(32, 45426);
    pade_approx = ln_pade_approx();
    res_reg = std_reg(32);
    add1 = std_fp_sadd(32, 16, 16);
    msb = msb_calc();
    slice0 = std_slice(32, 16);
    rsh = std_srsh(32);
    shift_amount = std_const(32, 16);
  }
  wires {
    group get_n {
      n.write_en = 1'd1;
      n.in = msb.count;
      get_n[done] = n.done;
    }
    group get_p {
      div_pipe.go = 1'd1;
      div_pipe.left = x;
      div_pipe.right = msb.value;
      get_p[done] = div_pipe.done;
    }
    group get_term1 {
      mult_pipe.go = 1'd1;
      mult_pipe.left = ln_2.out;
      mult_pipe.right = n.out;
      get_term1[done] = mult_pipe.done;
    }
    group get_res {
      add1.left = mult_pipe.out;
      add1.right = pade_approx.out;
      res_reg.in = add1.out;
      res_reg.write_en = 1'd1;
      get_res[done] = res_reg.done;
    }
    out = res_reg.out;
  }
  control {
    seq {
      invoke msb(in=x)();
      get_n;
      get_p;
      get_term1;
      invoke pade_approx(x=div_pipe.out_quotient)();
      get_res;
    }
  }
}
component fp_pow_full(base: 32, exp_value: 32) -> (out: 32) {
  cells {
    neg_one = std_const(32, 4294901760);
    one = std_const(32, 65536);
    mult = std_fp_smult_pipe(32, 16, 16);
    new_base = std_reg(32);
    stored_base = std_reg(32);
    res = std_reg(32);
    lt = std_slt(32);
    div_pipe = std_fp_sdiv_pipe(32, 16, 16);
    zero = std_const(32, 0);
    new_exp_val = std_reg(32);
    e = exp();
    l = ln();
  }
  wires {
    group rev_base_sign {
      mult.left = new_base.out;
      mult.right = neg_one.out;
      mult.go = !mult.done ? 1'd1;
      new_base.write_en = mult.done;
      new_base.in = mult.out;
      rev_base_sign[done] = new_base.done;
    }
    group rev_res_sign {
      mult.left = res.out;
      mult.right = neg_one.out;
      mult.go = !mult.done ? 1'd1;
      res.write_en = mult.done;
      res.in = mult.out;
      rev_res_sign[done] = res.done;
    }
    comb group base_lt_zero {
      lt.left = base;
      lt.right = zero.out;
    }
    group set_new_exp {
      mult.left = l.out;
      mult.right = exp_value;
      mult.go = !mult.done ? 1'd1;
      new_exp_val.write_en = mult.done;
      new_exp_val.in = mult.out;
      set_new_exp[done] = new_exp_val.done;
    }
    out = res.out;
    group write_to_base_reg {
      new_base.write_en = 1'd1;
      new_base.in = base;
      write_to_base_reg[done] = new_base.done;
    }
    group store_old_reg_val {
      stored_base.write_en = 1'd1;
      stored_base.in = new_base.out;
      store_old_reg_val[done] = stored_base.done;
    }
    group write_e_to_res {
      res.write_en = 1'd1;
      res.in = e.out;
      write_e_to_res[done] = res.done;
    }
    group set_base_reciprocal {
      div_pipe.left = one.out;
      div_pipe.right = new_base.out;
      div_pipe.go = !div_pipe.done ? 1'd1;
      new_base.write_en = div_pipe.done;
      new_base.in = div_pipe.out_quotient;
      set_base_reciprocal[done] = new_base.done;
    }
    group set_res_reciprocal {
      div_pipe.left = one.out;
      div_pipe.right = res.out;
      div_pipe.go = !div_pipe.done ? 1'd1;
      res.write_en = div_pipe.done;
      res.in = div_pipe.out_quotient;
      set_res_reciprocal[done] = res.done;
    }
    comb group base_lt_one {
      lt.left = stored_base.out;
      lt.right = one.out;
    }
  }
  control {
    seq {
      write_to_base_reg;
      seq {
        if lt.out with base_lt_zero {
          rev_base_sign;
        }
        store_old_reg_val;
        if lt.out with base_lt_one {
          set_base_reciprocal;
        }
      }
      invoke l(x=new_base.out)();
      set_new_exp;
      invoke e(x=new_exp_val.out)();
      write_e_to_res;
      seq {
        if lt.out with base_lt_zero {
          rev_res_sign;
        }
        if lt.out with base_lt_one {
          set_res_reciprocal;
        }
      }
    }
  }
}component main() -> () {
  cells {
    @external data_0 = seq_mem_d4(32, 1, 3, 224, 224, 1, 2, 8, 8);
    @external x_12 = seq_mem_d4(32, 96, 3, 11, 11, 7, 2, 4, 4);
    @external x_13 = seq_mem_d4(32, 1, 96, 54, 54, 1, 7, 6, 6);
    conv2d_1x96x54x54_ = conv2d_1x96x54x54();
    @external x_14 = seq_mem_d1(32, 96, 7);
    @external x_15 = seq_mem_d4(32, 1, 96, 54, 54, 1, 7, 6, 6);
    bias_add_1x96x54x54_ = bias_add_1x96x54x54();
    @external x_16 = seq_mem_d4(32, 1, 96, 54, 54, 1, 7, 6, 6);
    relu_1x96x54x54_ = relu_1x96x54x54();
    @external x_17 = seq_mem_d4(32, 1, 96, 54, 54, 1, 7, 6, 6);
    lrn_1x96x54x54_ = lrn_1x96x54x54();
    @external x_18 = seq_mem_d4(32, 1, 96, 26, 26, 1, 7, 5, 5);
    max_pool2d_1x96x26x26_ = max_pool2d_1x96x26x26();
    @external x_19 = seq_mem_d4(32, 256, 48, 5, 5, 9, 6, 3, 3);
    @external x_20 = seq_mem_d4(32, 1, 256, 26, 26, 1, 9, 5, 5);
    conv2d_1x256x26x26_ = conv2d_1x256x26x26();
    @external x_21 = seq_mem_d1(32, 256, 9);
    @external x_22 = seq_mem_d4(32, 1, 256, 26, 26, 1, 9, 5, 5);
    bias_add_1x256x26x26_ = bias_add_1x256x26x26();
    @external x_23 = seq_mem_d4(32, 1, 256, 26, 26, 1, 9, 5, 5);
    relu_1x256x26x26_ = relu_1x256x26x26();
    @external x_24 = seq_mem_d4(32, 1, 256, 26, 26, 1, 9, 5, 5);
    lrn_1x256x26x26_ = lrn_1x256x26x26();
    @external x_25 = seq_mem_d4(32, 1, 256, 12, 12, 1, 9, 4, 4);
    max_pool2d_1x256x12x12_ = max_pool2d_1x256x12x12();
    @external x_26 = seq_mem_d4(32, 384, 256, 3, 3, 9, 9, 2, 2);
    @external x_27 = seq_mem_d4(32, 1, 384, 12, 12, 1, 9, 4, 4);
    conv2d_1x384x12x12_ = conv2d_1x384x12x12();
    @external x_28 = seq_mem_d1(32, 384, 9);
    @external x_29 = seq_mem_d4(32, 1, 384, 12, 12, 1, 9, 4, 4);
    bias_add_1x384x12x12_ = bias_add_1x384x12x12();
    @external x_30 = seq_mem_d4(32, 1, 384, 12, 12, 1, 9, 4, 4);
    relu_1x384x12x12_ = relu_1x384x12x12();
    @external x_31 = seq_mem_d4(32, 384, 192, 3, 3, 9, 8, 2, 2);
    @external x_32 = seq_mem_d4(32, 1, 384, 12, 12, 1, 9, 4, 4);
    conv2d_1x384x12x12_1_ = conv2d_1x384x12x12_1();
    @external x_33 = seq_mem_d1(32, 384, 9);
    @external x_34 = seq_mem_d4(32, 1, 384, 12, 12, 1, 9, 4, 4);
    bias_add_1x384x12x12_1 = bias_add_1x384x12x12();
    @external x_35 = seq_mem_d4(32, 1, 384, 12, 12, 1, 9, 4, 4);
    relu_1x384x12x12_1 = relu_1x384x12x12();
    @external x_36 = seq_mem_d4(32, 256, 192, 3, 3, 9, 8, 2, 2);
    @external x_37 = seq_mem_d4(32, 1, 256, 12, 12, 1, 9, 4, 4);
    conv2d_1x256x12x12_ = conv2d_1x256x12x12();
    @external x_38 = seq_mem_d1(32, 256, 9);
    @external x_39 = seq_mem_d4(32, 1, 256, 12, 12, 1, 9, 4, 4);
    bias_add_1x256x12x12_ = bias_add_1x256x12x12();
    @external x_40 = seq_mem_d4(32, 1, 256, 12, 12, 1, 9, 4, 4);
    relu_1x256x12x12_ = relu_1x256x12x12();
    @external x_41 = seq_mem_d4(32, 1, 256, 6, 6, 1, 9, 3, 3);
    max_pool2d_1x256x6x6_ = max_pool2d_1x256x6x6();
    @external x_42 = seq_mem_d2(32, 1, 9216, 1, 14);
    reshape_1x9216_ = reshape_1x9216();
    @external x_43 = seq_mem_d2(32, 4096, 9216, 13, 14);
    @external x_44 = seq_mem_d2(32, 1, 4096, 1, 13);
    dense_1x4096_ = dense_1x4096();
    @external x_45 = seq_mem_d1(32, 4096, 13);
    @external x_46 = seq_mem_d2(32, 1, 4096, 1, 13);
    add_1x4096_ = add_1x4096();
    @external x_47 = seq_mem_d2(32, 1, 4096, 1, 13);
    relu_1x4096_ = relu_1x4096();
    @external x_48 = seq_mem_d2(32, 4096, 4096, 13, 13);
    @external x_49 = seq_mem_d2(32, 1, 4096, 1, 13);
    dense_1x4096_1_ = dense_1x4096_1();
    @external x_50 = seq_mem_d1(32, 4096, 13);
    @external x_51 = seq_mem_d2(32, 1, 4096, 1, 13);
    add_1x4096_1 = add_1x4096();
    @external x_52 = seq_mem_d2(32, 1, 4096, 1, 13);
    relu_1x4096_1 = relu_1x4096();
    @external x_53 = seq_mem_d2(32, 1000, 4096, 10, 13);
    @external x_54 = seq_mem_d2(32, 1, 1000, 1, 10);
    dense_1x1000_ = dense_1x1000();
    @external x_55 = seq_mem_d1(32, 1000, 10);
    @external x_56 = seq_mem_d2(32, 1, 1000, 1, 10);
    add_1x1000_ = add_1x1000();
    @external x_57 = seq_mem_d2(32, 1, 1000, 1, 10);
    softmax_1x1000_ = softmax_1x1000();
  }
  wires {

  }
  control {
    seq {
      @pos(0) invoke conv2d_1x96x54x54_[data_0=data_0, x_12=x_12, x_13=x_13]()();
      @pos(1) invoke bias_add_1x96x54x54_[x_13=x_13, x_14=x_14, x_15=x_15]()();
      @pos(2) invoke relu_1x96x54x54_[x_15=x_15, x_16=x_16]()();
      @pos(3) invoke lrn_1x96x54x54_[x_16=x_16, x_17=x_17]()();
      @pos(4) invoke max_pool2d_1x96x26x26_[x_17=x_17, x_18=x_18]()();
      @pos(5) invoke conv2d_1x256x26x26_[x_18=x_18, x_19=x_19, x_20=x_20]()();
      @pos(6) invoke bias_add_1x256x26x26_[x_20=x_20, x_21=x_21, x_22=x_22]()();
      @pos(7) invoke relu_1x256x26x26_[x_22=x_22, x_23=x_23]()();
      @pos(8) invoke lrn_1x256x26x26_[x_23=x_23, x_24=x_24]()();
      @pos(9) invoke max_pool2d_1x256x12x12_[x_24=x_24, x_25=x_25]()();
      @pos(10) invoke conv2d_1x384x12x12_[x_25=x_25, x_26=x_26, x_27=x_27]()();
      @pos(11) invoke bias_add_1x384x12x12_[x_27=x_27, x_28=x_28, x_29=x_29]()();
      @pos(12) invoke relu_1x384x12x12_[x_29=x_29, x_30=x_30]()();
      @pos(13) invoke conv2d_1x384x12x12_1_[x_30=x_30, x_31=x_31, x_32=x_32]()();
      @pos(14) invoke bias_add_1x384x12x12_1[x_27=x_32, x_28=x_33, x_29=x_34]()();
      @pos(15) invoke relu_1x384x12x12_1[x_29=x_34, x_30=x_35]()();
      @pos(16) invoke conv2d_1x256x12x12_[x_35=x_35, x_36=x_36, x_37=x_37]()();
      @pos(17) invoke bias_add_1x256x12x12_[x_37=x_37, x_38=x_38, x_39=x_39]()();
      @pos(18) invoke relu_1x256x12x12_[x_39=x_39, x_40=x_40]()();
      @pos(19) invoke max_pool2d_1x256x6x6_[x_40=x_40, x_41=x_41]()();
      @pos(20) invoke reshape_1x9216_[x_41=x_41, x_42=x_42]()();
      @pos(21) invoke dense_1x4096_[x_42=x_42, x_43=x_43, x_44=x_44]()();
      @pos(22) invoke add_1x4096_[x_44=x_44, x_45=x_45, x_46=x_46]()();
      @pos(23) invoke relu_1x4096_[x_46=x_46, x_47=x_47]()();
      @pos(24) invoke dense_1x4096_1_[x_47=x_47, x_48=x_48, x_49=x_49]()();
      @pos(25) invoke add_1x4096_1[x_44=x_49, x_45=x_50, x_46=x_51]()();
      @pos(26) invoke relu_1x4096_1[x_46=x_51, x_47=x_52]()();
      @pos(27) invoke dense_1x1000_[x_52=x_52, x_53=x_53, x_54=x_54]()();
      @pos(28) invoke add_1x1000_[x_54=x_54, x_55=x_55, x_56=x_56]()();
      @pos(29) invoke softmax_1x1000_[x_56=x_56, x_57=x_57]()();
    }
  }
}
metadata #{
0: let %x_13: Tensor[(1, 96, 54, 54), float32] /* ty=Tensor[(1, 96, 54, 54), float32] */ = nn.conv2d(%data_0, %x_12, strides=[4, 4], padding=[0, 0, 0, 0], channels=96, kernel_size=[11, 11]) /* ty=Tensor[(1, 96, 54, 54), float32] */;
1: let %x_15: Tensor[(1, 96, 54, 54), float32] /* ty=Tensor[(1, 96, 54, 54), float32] */ = nn.bias_add(%x_13, %x_14) /* ty=Tensor[(1, 96, 54, 54), float32] */;
2: let %x_16: Tensor[(1, 96, 54, 54), float32] /* ty=Tensor[(1, 96, 54, 54), float32] */ = nn.relu(%x_15) /* ty=Tensor[(1, 96, 54, 54), float32] */;
3: let %x_17: Tensor[(1, 96, 54, 54), float32] /* ty=Tensor[(1, 96, 54, 54), float32] */ = nn.lrn(%x_16, bias=1f) /* ty=Tensor[(1, 96, 54, 54), float32] */;
4: let %x_18: Tensor[(1, 96, 26, 26), float32] /* ty=Tensor[(1, 96, 26, 26), float32] */ = nn.max_pool2d(%x_17, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 96, 26, 26), float32] */;
5: let %x_20: Tensor[(1, 256, 26, 26), float32] /* ty=Tensor[(1, 256, 26, 26), float32] */ = nn.conv2d(%x_18, %x_19, padding=[2, 2, 2, 2], groups=2, channels=256, kernel_size=[5, 5]) /* ty=Tensor[(1, 256, 26, 26), float32] */;
6: let %x_22: Tensor[(1, 256, 26, 26), float32] /* ty=Tensor[(1, 256, 26, 26), float32] */ = nn.bias_add(%x_20, %x_21) /* ty=Tensor[(1, 256, 26, 26), float32] */;
7: let %x_23: Tensor[(1, 256, 26, 26), float32] /* ty=Tensor[(1, 256, 26, 26), float32] */ = nn.relu(%x_22) /* ty=Tensor[(1, 256, 26, 26), float32] */;
8: let %x_24: Tensor[(1, 256, 26, 26), float32] /* ty=Tensor[(1, 256, 26, 26), float32] */ = nn.lrn(%x_23, bias=1f) /* ty=Tensor[(1, 256, 26, 26), float32] */;
9: let %x_25: Tensor[(1, 256, 12, 12), float32] /* ty=Tensor[(1, 256, 12, 12), float32] */ = nn.max_pool2d(%x_24, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 256, 12, 12), float32] */;
10: let %x_27: Tensor[(1, 384, 12, 12), float32] /* ty=Tensor[(1, 384, 12, 12), float32] */ = nn.conv2d(%x_25, %x_26, padding=[1, 1, 1, 1], channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 12, 12), float32] */;
11: let %x_29: Tensor[(1, 384, 12, 12), float32] /* ty=Tensor[(1, 384, 12, 12), float32] */ = nn.bias_add(%x_27, %x_28) /* ty=Tensor[(1, 384, 12, 12), float32] */;
12: let %x_30: Tensor[(1, 384, 12, 12), float32] /* ty=Tensor[(1, 384, 12, 12), float32] */ = nn.relu(%x_29) /* ty=Tensor[(1, 384, 12, 12), float32] */;
13: let %x_32: Tensor[(1, 384, 12, 12), float32] /* ty=Tensor[(1, 384, 12, 12), float32] */ = nn.conv2d(%x_30, %x_31, padding=[1, 1, 1, 1], groups=2, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 12, 12), float32] */;
14: let %x_34: Tensor[(1, 384, 12, 12), float32] /* ty=Tensor[(1, 384, 12, 12), float32] */ = nn.bias_add(%x_32, %x_33) /* ty=Tensor[(1, 384, 12, 12), float32] */;
15: let %x_35: Tensor[(1, 384, 12, 12), float32] /* ty=Tensor[(1, 384, 12, 12), float32] */ = nn.relu(%x_34) /* ty=Tensor[(1, 384, 12, 12), float32] */;
16: let %x_37: Tensor[(1, 256, 12, 12), float32] /* ty=Tensor[(1, 256, 12, 12), float32] */ = nn.conv2d(%x_35, %x_36, padding=[1, 1, 1, 1], groups=2, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 12, 12), float32] */;
17: let %x_39: Tensor[(1, 256, 12, 12), float32] /* ty=Tensor[(1, 256, 12, 12), float32] */ = nn.bias_add(%x_37, %x_38) /* ty=Tensor[(1, 256, 12, 12), float32] */;
18: let %x_40: Tensor[(1, 256, 12, 12), float32] /* ty=Tensor[(1, 256, 12, 12), float32] */ = nn.relu(%x_39) /* ty=Tensor[(1, 256, 12, 12), float32] */;
19: let %x_41: Tensor[(1, 256, 6, 6), float32] /* ty=Tensor[(1, 256, 6, 6), float32] */ = nn.max_pool2d(%x_40, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 1, 1]) /* ty=Tensor[(1, 256, 6, 6), float32] */;
20: let %x_42: Tensor[(1, 9216), float32] /* ty=Tensor[(1, 9216), float32] */ = reshape(%x_41, newshape=[1, 9216]) /* ty=Tensor[(1, 9216), float32] */;
21: let %x_44: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.dense(%x_42, %x_43, units=4096) /* ty=Tensor[(1, 4096), float32] */;
22: let %x_46: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = add(%x_44, %x_45) /* ty=Tensor[(1, 4096), float32] */;
23: let %x_47: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.relu(%x_46) /* ty=Tensor[(1, 4096), float32] */;
24: let %x_49: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.dense(%x_47, %x_48, units=4096) /* ty=Tensor[(1, 4096), float32] */;
25: let %x_51: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = add(%x_49, %x_50) /* ty=Tensor[(1, 4096), float32] */;
26: let %x_52: Tensor[(1, 4096), float32] /* ty=Tensor[(1, 4096), float32] */ = nn.relu(%x_51) /* ty=Tensor[(1, 4096), float32] */;
27: let %x_54: Tensor[(1, 1000), float32] /* ty=Tensor[(1, 1000), float32] */ = nn.dense(%x_52, %x_53, units=1000) /* ty=Tensor[(1, 1000), float32] */;
28: let %x_56: Tensor[(1, 1000), float32] /* ty=Tensor[(1, 1000), float32] */ = add(%x_54, %x_55) /* ty=Tensor[(1, 1000), float32] */;
29: let %x_57: Tensor[(1, 1000), float32] /* ty=Tensor[(1, 1000), float32] */ = nn.softmax(%x_56, axis=1) /* ty=Tensor[(1, 1000), float32] */;
}#